// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv_sysarr_Conv_sysarr,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.415000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=59,HLS_SYN_DSP=0,HLS_SYN_FF=24032,HLS_SYN_LUT=18267,HLS_VERSION=2020_1}" *)

module Conv_sysarr (
        ap_clk,
        ap_rst_n,
        in_data_TDATA,
        in_data_TVALID,
        in_data_TREADY,
        in_data_TKEEP,
        in_data_TSTRB,
        in_data_TLAST,
        out_data_TDATA,
        out_data_TVALID,
        out_data_TREADY,
        out_data_TKEEP,
        out_data_TSTRB,
        out_data_TLAST,
        m_axi_dma_control_AWVALID,
        m_axi_dma_control_AWREADY,
        m_axi_dma_control_AWADDR,
        m_axi_dma_control_AWID,
        m_axi_dma_control_AWLEN,
        m_axi_dma_control_AWSIZE,
        m_axi_dma_control_AWBURST,
        m_axi_dma_control_AWLOCK,
        m_axi_dma_control_AWCACHE,
        m_axi_dma_control_AWPROT,
        m_axi_dma_control_AWQOS,
        m_axi_dma_control_AWREGION,
        m_axi_dma_control_AWUSER,
        m_axi_dma_control_WVALID,
        m_axi_dma_control_WREADY,
        m_axi_dma_control_WDATA,
        m_axi_dma_control_WSTRB,
        m_axi_dma_control_WLAST,
        m_axi_dma_control_WID,
        m_axi_dma_control_WUSER,
        m_axi_dma_control_ARVALID,
        m_axi_dma_control_ARREADY,
        m_axi_dma_control_ARADDR,
        m_axi_dma_control_ARID,
        m_axi_dma_control_ARLEN,
        m_axi_dma_control_ARSIZE,
        m_axi_dma_control_ARBURST,
        m_axi_dma_control_ARLOCK,
        m_axi_dma_control_ARCACHE,
        m_axi_dma_control_ARPROT,
        m_axi_dma_control_ARQOS,
        m_axi_dma_control_ARREGION,
        m_axi_dma_control_ARUSER,
        m_axi_dma_control_RVALID,
        m_axi_dma_control_RREADY,
        m_axi_dma_control_RDATA,
        m_axi_dma_control_RLAST,
        m_axi_dma_control_RID,
        m_axi_dma_control_RUSER,
        m_axi_dma_control_RRESP,
        m_axi_dma_control_BVALID,
        m_axi_dma_control_BREADY,
        m_axi_dma_control_BRESP,
        m_axi_dma_control_BID,
        m_axi_dma_control_BUSER,
        out_responsed,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 144'd1;
parameter    ap_ST_fsm_state2 = 144'd2;
parameter    ap_ST_fsm_state3 = 144'd4;
parameter    ap_ST_fsm_state4 = 144'd8;
parameter    ap_ST_fsm_state5 = 144'd16;
parameter    ap_ST_fsm_state6 = 144'd32;
parameter    ap_ST_fsm_state7 = 144'd64;
parameter    ap_ST_fsm_state8 = 144'd128;
parameter    ap_ST_fsm_state9 = 144'd256;
parameter    ap_ST_fsm_state10 = 144'd512;
parameter    ap_ST_fsm_state11 = 144'd1024;
parameter    ap_ST_fsm_state12 = 144'd2048;
parameter    ap_ST_fsm_state13 = 144'd4096;
parameter    ap_ST_fsm_state14 = 144'd8192;
parameter    ap_ST_fsm_state15 = 144'd16384;
parameter    ap_ST_fsm_state16 = 144'd32768;
parameter    ap_ST_fsm_state17 = 144'd65536;
parameter    ap_ST_fsm_state18 = 144'd131072;
parameter    ap_ST_fsm_state19 = 144'd262144;
parameter    ap_ST_fsm_state20 = 144'd524288;
parameter    ap_ST_fsm_state21 = 144'd1048576;
parameter    ap_ST_fsm_state22 = 144'd2097152;
parameter    ap_ST_fsm_state23 = 144'd4194304;
parameter    ap_ST_fsm_state24 = 144'd8388608;
parameter    ap_ST_fsm_state25 = 144'd16777216;
parameter    ap_ST_fsm_state26 = 144'd33554432;
parameter    ap_ST_fsm_state27 = 144'd67108864;
parameter    ap_ST_fsm_state28 = 144'd134217728;
parameter    ap_ST_fsm_state29 = 144'd268435456;
parameter    ap_ST_fsm_state30 = 144'd536870912;
parameter    ap_ST_fsm_state31 = 144'd1073741824;
parameter    ap_ST_fsm_state32 = 144'd2147483648;
parameter    ap_ST_fsm_state33 = 144'd4294967296;
parameter    ap_ST_fsm_state34 = 144'd8589934592;
parameter    ap_ST_fsm_state35 = 144'd17179869184;
parameter    ap_ST_fsm_state36 = 144'd34359738368;
parameter    ap_ST_fsm_state37 = 144'd68719476736;
parameter    ap_ST_fsm_state38 = 144'd137438953472;
parameter    ap_ST_fsm_state39 = 144'd274877906944;
parameter    ap_ST_fsm_state40 = 144'd549755813888;
parameter    ap_ST_fsm_state41 = 144'd1099511627776;
parameter    ap_ST_fsm_state42 = 144'd2199023255552;
parameter    ap_ST_fsm_state43 = 144'd4398046511104;
parameter    ap_ST_fsm_state44 = 144'd8796093022208;
parameter    ap_ST_fsm_state45 = 144'd17592186044416;
parameter    ap_ST_fsm_state46 = 144'd35184372088832;
parameter    ap_ST_fsm_state47 = 144'd70368744177664;
parameter    ap_ST_fsm_state48 = 144'd140737488355328;
parameter    ap_ST_fsm_state49 = 144'd281474976710656;
parameter    ap_ST_fsm_state50 = 144'd562949953421312;
parameter    ap_ST_fsm_state51 = 144'd1125899906842624;
parameter    ap_ST_fsm_state52 = 144'd2251799813685248;
parameter    ap_ST_fsm_state53 = 144'd4503599627370496;
parameter    ap_ST_fsm_state54 = 144'd9007199254740992;
parameter    ap_ST_fsm_state55 = 144'd18014398509481984;
parameter    ap_ST_fsm_state56 = 144'd36028797018963968;
parameter    ap_ST_fsm_state57 = 144'd72057594037927936;
parameter    ap_ST_fsm_state58 = 144'd144115188075855872;
parameter    ap_ST_fsm_pp0_stage0 = 144'd288230376151711744;
parameter    ap_ST_fsm_pp0_stage1 = 144'd576460752303423488;
parameter    ap_ST_fsm_pp0_stage2 = 144'd1152921504606846976;
parameter    ap_ST_fsm_pp0_stage3 = 144'd2305843009213693952;
parameter    ap_ST_fsm_state66 = 144'd4611686018427387904;
parameter    ap_ST_fsm_state67 = 144'd9223372036854775808;
parameter    ap_ST_fsm_state68 = 144'd18446744073709551616;
parameter    ap_ST_fsm_state69 = 144'd36893488147419103232;
parameter    ap_ST_fsm_state70 = 144'd73786976294838206464;
parameter    ap_ST_fsm_state71 = 144'd147573952589676412928;
parameter    ap_ST_fsm_state72 = 144'd295147905179352825856;
parameter    ap_ST_fsm_state73 = 144'd590295810358705651712;
parameter    ap_ST_fsm_state74 = 144'd1180591620717411303424;
parameter    ap_ST_fsm_state75 = 144'd2361183241434822606848;
parameter    ap_ST_fsm_state76 = 144'd4722366482869645213696;
parameter    ap_ST_fsm_state77 = 144'd9444732965739290427392;
parameter    ap_ST_fsm_state78 = 144'd18889465931478580854784;
parameter    ap_ST_fsm_state79 = 144'd37778931862957161709568;
parameter    ap_ST_fsm_state80 = 144'd75557863725914323419136;
parameter    ap_ST_fsm_state81 = 144'd151115727451828646838272;
parameter    ap_ST_fsm_state82 = 144'd302231454903657293676544;
parameter    ap_ST_fsm_state83 = 144'd604462909807314587353088;
parameter    ap_ST_fsm_state84 = 144'd1208925819614629174706176;
parameter    ap_ST_fsm_state85 = 144'd2417851639229258349412352;
parameter    ap_ST_fsm_state86 = 144'd4835703278458516698824704;
parameter    ap_ST_fsm_state87 = 144'd9671406556917033397649408;
parameter    ap_ST_fsm_state88 = 144'd19342813113834066795298816;
parameter    ap_ST_fsm_state89 = 144'd38685626227668133590597632;
parameter    ap_ST_fsm_state90 = 144'd77371252455336267181195264;
parameter    ap_ST_fsm_state91 = 144'd154742504910672534362390528;
parameter    ap_ST_fsm_state92 = 144'd309485009821345068724781056;
parameter    ap_ST_fsm_state93 = 144'd618970019642690137449562112;
parameter    ap_ST_fsm_state94 = 144'd1237940039285380274899124224;
parameter    ap_ST_fsm_state95 = 144'd2475880078570760549798248448;
parameter    ap_ST_fsm_state96 = 144'd4951760157141521099596496896;
parameter    ap_ST_fsm_state97 = 144'd9903520314283042199192993792;
parameter    ap_ST_fsm_state98 = 144'd19807040628566084398385987584;
parameter    ap_ST_fsm_state99 = 144'd39614081257132168796771975168;
parameter    ap_ST_fsm_state100 = 144'd79228162514264337593543950336;
parameter    ap_ST_fsm_state101 = 144'd158456325028528675187087900672;
parameter    ap_ST_fsm_state102 = 144'd316912650057057350374175801344;
parameter    ap_ST_fsm_state103 = 144'd633825300114114700748351602688;
parameter    ap_ST_fsm_state104 = 144'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state105 = 144'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state106 = 144'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state107 = 144'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state108 = 144'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state109 = 144'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state110 = 144'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state111 = 144'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state112 = 144'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state113 = 144'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state114 = 144'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state115 = 144'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state116 = 144'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state117 = 144'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state118 = 144'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state119 = 144'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state120 = 144'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state121 = 144'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state122 = 144'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state123 = 144'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state124 = 144'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state125 = 144'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state126 = 144'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state127 = 144'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state128 = 144'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state129 = 144'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state130 = 144'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state131 = 144'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state132 = 144'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state133 = 144'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state134 = 144'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state135 = 144'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state136 = 144'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state137 = 144'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state138 = 144'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_pp2_stage0 = 144'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_pp2_stage1 = 144'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state152 = 144'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state153 = 144'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state154 = 144'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state155 = 144'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state156 = 144'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state157 = 144'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state158 = 144'd11150372599265311570767859136324180752990208;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 10;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DMA_CONTROL_ID_WIDTH = 1;
parameter    C_M_AXI_DMA_CONTROL_ADDR_WIDTH = 32;
parameter    C_M_AXI_DMA_CONTROL_DATA_WIDTH = 32;
parameter    C_M_AXI_DMA_CONTROL_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DMA_CONTROL_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DMA_CONTROL_WUSER_WIDTH = 1;
parameter    C_M_AXI_DMA_CONTROL_RUSER_WIDTH = 1;
parameter    C_M_AXI_DMA_CONTROL_BUSER_WIDTH = 1;
parameter    C_M_AXI_DMA_CONTROL_TARGET_ADDR = 0;
parameter    C_M_AXI_DMA_CONTROL_USER_VALUE = 0;
parameter    C_M_AXI_DMA_CONTROL_PROT_VALUE = 0;
parameter    C_M_AXI_DMA_CONTROL_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DMA_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [7:0] in_data_TDATA;
input   in_data_TVALID;
output   in_data_TREADY;
input  [0:0] in_data_TKEEP;
input  [0:0] in_data_TSTRB;
input  [0:0] in_data_TLAST;
output  [7:0] out_data_TDATA;
output   out_data_TVALID;
input   out_data_TREADY;
output  [0:0] out_data_TKEEP;
output  [0:0] out_data_TSTRB;
output  [0:0] out_data_TLAST;
output   m_axi_dma_control_AWVALID;
input   m_axi_dma_control_AWREADY;
output  [C_M_AXI_DMA_CONTROL_ADDR_WIDTH - 1:0] m_axi_dma_control_AWADDR;
output  [C_M_AXI_DMA_CONTROL_ID_WIDTH - 1:0] m_axi_dma_control_AWID;
output  [7:0] m_axi_dma_control_AWLEN;
output  [2:0] m_axi_dma_control_AWSIZE;
output  [1:0] m_axi_dma_control_AWBURST;
output  [1:0] m_axi_dma_control_AWLOCK;
output  [3:0] m_axi_dma_control_AWCACHE;
output  [2:0] m_axi_dma_control_AWPROT;
output  [3:0] m_axi_dma_control_AWQOS;
output  [3:0] m_axi_dma_control_AWREGION;
output  [C_M_AXI_DMA_CONTROL_AWUSER_WIDTH - 1:0] m_axi_dma_control_AWUSER;
output   m_axi_dma_control_WVALID;
input   m_axi_dma_control_WREADY;
output  [C_M_AXI_DMA_CONTROL_DATA_WIDTH - 1:0] m_axi_dma_control_WDATA;
output  [C_M_AXI_DMA_CONTROL_WSTRB_WIDTH - 1:0] m_axi_dma_control_WSTRB;
output   m_axi_dma_control_WLAST;
output  [C_M_AXI_DMA_CONTROL_ID_WIDTH - 1:0] m_axi_dma_control_WID;
output  [C_M_AXI_DMA_CONTROL_WUSER_WIDTH - 1:0] m_axi_dma_control_WUSER;
output   m_axi_dma_control_ARVALID;
input   m_axi_dma_control_ARREADY;
output  [C_M_AXI_DMA_CONTROL_ADDR_WIDTH - 1:0] m_axi_dma_control_ARADDR;
output  [C_M_AXI_DMA_CONTROL_ID_WIDTH - 1:0] m_axi_dma_control_ARID;
output  [7:0] m_axi_dma_control_ARLEN;
output  [2:0] m_axi_dma_control_ARSIZE;
output  [1:0] m_axi_dma_control_ARBURST;
output  [1:0] m_axi_dma_control_ARLOCK;
output  [3:0] m_axi_dma_control_ARCACHE;
output  [2:0] m_axi_dma_control_ARPROT;
output  [3:0] m_axi_dma_control_ARQOS;
output  [3:0] m_axi_dma_control_ARREGION;
output  [C_M_AXI_DMA_CONTROL_ARUSER_WIDTH - 1:0] m_axi_dma_control_ARUSER;
input   m_axi_dma_control_RVALID;
output   m_axi_dma_control_RREADY;
input  [C_M_AXI_DMA_CONTROL_DATA_WIDTH - 1:0] m_axi_dma_control_RDATA;
input   m_axi_dma_control_RLAST;
input  [C_M_AXI_DMA_CONTROL_ID_WIDTH - 1:0] m_axi_dma_control_RID;
input  [C_M_AXI_DMA_CONTROL_RUSER_WIDTH - 1:0] m_axi_dma_control_RUSER;
input  [1:0] m_axi_dma_control_RRESP;
input   m_axi_dma_control_BVALID;
output   m_axi_dma_control_BREADY;
input  [1:0] m_axi_dma_control_BRESP;
input  [C_M_AXI_DMA_CONTROL_ID_WIDTH - 1:0] m_axi_dma_control_BID;
input  [C_M_AXI_DMA_CONTROL_BUSER_WIDTH - 1:0] m_axi_dma_control_BUSER;
input  [0:0] out_responsed;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [143:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] K;
wire   [31:0] C;
wire   [31:0] WH;
wire   [31:0] WH_in;
wire   [31:0] RS;
wire   [31:0] L2_TILENUM_K;
wire   [31:0] L2_TILENUM_C;
wire   [31:0] L2_TILENUM_W;
wire   [31:0] L2_TILENUM_H;
wire   [31:0] L2_TILENUM_R;
wire   [31:0] L2_TILENUM_S;
wire   [31:0] K_L2;
wire   [31:0] C_L2;
wire   [31:0] W_L2;
wire   [31:0] H_L2;
wire   [31:0] W_in_L2;
wire   [31:0] H_in_L2;
wire   [31:0] R_L2;
wire   [31:0] S_L2;
wire   [31:0] L1_TILENUM_K;
wire   [31:0] L1_TILENUM_C;
wire   [31:0] L1_TILENUM_W;
wire   [31:0] L1_TILENUM_H;
wire   [31:0] L1_TILENUM_R;
wire   [31:0] L1_TILENUM_S;
wire   [31:0] K_L1;
wire   [31:0] C_L1;
wire   [31:0] W_L1;
wire   [31:0] H_L1;
wire   [31:0] W_in_L1;
wire   [31:0] H_in_L1;
wire   [31:0] R_L1;
wire   [31:0] S_L1;
wire   [31:0] TILESIZE_W;
wire   [31:0] TILESIZE_H;
wire   [31:0] TILESIZE_R;
wire   [31:0] TILESIZE_S;
wire   [31:0] bias_addr;
wire   [31:0] weight_addr;
wire   [31:0] data_addr;
wire   [31:0] output_addr;
reg   [6:0] bias_l2_0_address0;
reg    bias_l2_0_ce0;
reg    bias_l2_0_we0;
wire   [7:0] bias_l2_0_q0;
reg   [6:0] bias_l2_1_address0;
reg    bias_l2_1_ce0;
reg    bias_l2_1_we0;
wire   [7:0] bias_l2_1_q0;
reg   [6:0] bias_l2_2_address0;
reg    bias_l2_2_ce0;
reg    bias_l2_2_we0;
wire   [7:0] bias_l2_2_q0;
reg   [6:0] bias_l2_3_address0;
reg    bias_l2_3_ce0;
reg    bias_l2_3_we0;
wire   [7:0] bias_l2_3_q0;
reg   [10:0] data_l2_0_address0;
reg    data_l2_0_ce0;
reg    data_l2_0_we0;
wire   [7:0] data_l2_0_q0;
reg   [10:0] data_l2_1_address0;
reg    data_l2_1_ce0;
reg    data_l2_1_we0;
wire   [7:0] data_l2_1_q0;
reg   [10:0] data_l2_2_address0;
reg    data_l2_2_ce0;
reg    data_l2_2_we0;
wire   [7:0] data_l2_2_q0;
reg   [10:0] data_l2_3_address0;
reg    data_l2_3_ce0;
reg    data_l2_3_we0;
wire   [7:0] data_l2_3_q0;
reg   [10:0] output_l2_0_address0;
reg    output_l2_0_ce0;
reg    output_l2_0_we0;
wire   [31:0] output_l2_0_q0;
reg    output_l2_0_ce1;
reg    output_l2_0_we1;
reg   [10:0] output_l2_1_address0;
reg    output_l2_1_ce0;
reg    output_l2_1_we0;
wire   [31:0] output_l2_1_q0;
reg    output_l2_1_ce1;
reg    output_l2_1_we1;
reg   [10:0] output_l2_2_address0;
reg    output_l2_2_ce0;
reg    output_l2_2_we0;
wire   [31:0] output_l2_2_q0;
reg    output_l2_2_ce1;
reg    output_l2_2_we1;
reg   [10:0] output_l2_3_address0;
reg    output_l2_3_ce0;
reg    output_l2_3_we0;
wire   [31:0] output_l2_3_q0;
reg   [11:0] weight_l2_0_address0;
reg    weight_l2_0_ce0;
reg    weight_l2_0_we0;
wire   [7:0] weight_l2_0_q0;
reg   [11:0] weight_l2_1_address0;
reg    weight_l2_1_ce0;
reg    weight_l2_1_we0;
wire   [7:0] weight_l2_1_q0;
reg   [11:0] weight_l2_2_address0;
reg    weight_l2_2_ce0;
reg    weight_l2_2_we0;
wire   [7:0] weight_l2_2_q0;
reg   [11:0] weight_l2_3_address0;
reg    weight_l2_3_ce0;
reg    weight_l2_3_we0;
wire   [7:0] weight_l2_3_q0;
reg    in_data_TDATA_blk_n;
wire    ap_CS_fsm_state28;
reg    out_data_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage2;
reg   [0:0] icmp_ln550_reg_3965;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln550_reg_3965_pp0_iter1_reg;
reg    dma_control_blk_n_AW;
wire    ap_CS_fsm_state10;
reg    dma_control_blk_n_W;
wire    ap_CS_fsm_state11;
reg    dma_control_blk_n_B;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state58;
reg    dma_control_AWVALID;
wire    dma_control_AWREADY;
reg   [31:0] dma_control_AWADDR;
reg   [0:0] dma_control_AWID;
reg   [31:0] dma_control_AWLEN;
reg   [2:0] dma_control_AWSIZE;
reg   [1:0] dma_control_AWBURST;
reg   [1:0] dma_control_AWLOCK;
reg   [3:0] dma_control_AWCACHE;
reg   [2:0] dma_control_AWPROT;
reg   [3:0] dma_control_AWQOS;
reg   [3:0] dma_control_AWREGION;
reg   [0:0] dma_control_AWUSER;
reg    dma_control_WVALID;
wire    dma_control_WREADY;
reg   [31:0] dma_control_WDATA;
reg   [3:0] dma_control_WSTRB;
reg    dma_control_WLAST;
reg   [0:0] dma_control_WID;
reg   [0:0] dma_control_WUSER;
wire    dma_control_ARREADY;
wire    dma_control_RVALID;
wire   [31:0] dma_control_RDATA;
wire    dma_control_RLAST;
wire   [0:0] dma_control_RID;
wire   [0:0] dma_control_RUSER;
wire   [1:0] dma_control_RRESP;
wire    dma_control_BVALID;
reg    dma_control_BREADY;
wire   [1:0] dma_control_BRESP;
wire   [0:0] dma_control_BID;
wire   [0:0] dma_control_BUSER;
reg   [2:0] ki_2_reg_1115;
reg   [63:0] indvar_flatten10_reg_1391;
reg   [31:0] hi_reg_1402;
reg   [31:0] wi_reg_1413;
wire   [191:0] grp_fu_1425_p2;
reg   [63:0] reg_1726;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state77;
reg   [63:0] reg_1730;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state78;
reg   [63:0] reg_1734;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state83;
reg   [10:0] reg_1738;
wire    ap_CS_fsm_state122;
wire    ap_CS_fsm_state134;
wire    ap_CS_fsm_state135;
reg   [0:0] select_ln615_7_reg_4568;
wire    ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter3;
wire    ap_block_state140_pp2_stage1_iter0;
wire    ap_block_state142_pp2_stage1_iter1;
wire    ap_block_state144_pp2_stage1_iter2;
wire    ap_block_state146_pp2_stage1_iter3;
wire    ap_block_state148_pp2_stage1_iter4;
wire    ap_block_state150_pp2_stage1_iter5;
wire    ap_block_pp2_stage1_11001;
reg   [0:0] icmp_ln59_reg_4892;
reg   [0:0] icmp_ln59_reg_4892_pp2_iter3_reg;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter4;
wire    ap_block_state139_pp2_stage0_iter0;
wire    ap_block_state141_pp2_stage0_iter1;
wire    ap_block_state143_pp2_stage0_iter2;
wire    ap_block_state145_pp2_stage0_iter3;
wire    ap_block_state147_pp2_stage0_iter4;
wire    ap_block_state149_pp2_stage0_iter5;
wire    ap_block_state151_pp2_stage0_iter6;
wire    ap_block_pp2_stage0_11001;
wire   [12:0] zext_ln512_fu_1757_p1;
reg   [12:0] zext_ln512_reg_3442;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
wire   [12:0] zext_ln515_fu_1762_p1;
reg   [12:0] zext_ln515_reg_3452;
wire    ap_CS_fsm_state6;
wire   [2:0] zext_ln516_fu_1767_p1;
reg   [2:0] zext_ln516_reg_3457;
wire    ap_CS_fsm_state8;
wire   [0:0] out_responsed_read_read_fu_594_p2;
reg   [31:0] output_addr_read_reg_3473;
reg   [31:0] data_addr_read_reg_3479;
reg   [31:0] weight_addr_read_reg_3484;
reg   [31:0] bias_addr_read_reg_3489;
reg   [31:0] TILESIZE_S_read_reg_3494;
reg   [31:0] TILESIZE_R_read_reg_3499;
reg   [31:0] TILESIZE_H_read_reg_3504;
reg   [31:0] TILESIZE_W_read_reg_3511;
reg   [31:0] L1_TILENUM_S_read_reg_3519;
reg   [31:0] L1_TILENUM_R_read_reg_3526;
reg   [31:0] L1_TILENUM_H_read_reg_3531;
reg   [31:0] L1_TILENUM_W_read_reg_3536;
reg   [31:0] L1_TILENUM_C_read_reg_3541;
reg   [31:0] L1_TILENUM_K_read_reg_3546;
reg   [31:0] S_L2_read_reg_3551;
reg   [31:0] R_L2_read_reg_3556;
reg   [31:0] H_in_L2_read_reg_3561;
reg   [31:0] W_in_L2_read_reg_3566;
reg   [31:0] H_L2_read_reg_3571;
reg   [31:0] W_L2_read_reg_3576;
reg   [31:0] C_L2_read_reg_3581;
reg   [31:0] K_L2_read_reg_3587;
reg   [31:0] L2_TILENUM_S_read_reg_3593;
reg   [31:0] L2_TILENUM_R_read_reg_3600;
reg   [31:0] L2_TILENUM_H_read_reg_3605;
reg   [31:0] L2_TILENUM_W_read_reg_3610;
reg   [31:0] L2_TILENUM_C_read_reg_3615;
reg   [31:0] L2_TILENUM_K_read_reg_3620;
reg  signed [31:0] WH_read_reg_3625;
wire  signed [7:0] empty_fu_1797_p1;
reg  signed [7:0] empty_reg_3631;
wire  signed [10:0] empty_126_fu_1801_p1;
reg  signed [10:0] empty_126_reg_3636;
wire   [10:0] empty_127_fu_1805_p1;
reg   [10:0] empty_127_reg_3641;
wire   [10:0] empty_128_fu_1809_p1;
reg   [10:0] empty_128_reg_3646;
wire  signed [10:0] empty_129_fu_1813_p1;
reg  signed [10:0] empty_129_reg_3651;
wire  signed [10:0] empty_130_fu_1817_p1;
reg  signed [10:0] empty_130_reg_3656;
wire  signed [10:0] empty_131_fu_1821_p1;
reg  signed [10:0] empty_131_reg_3661;
wire   [11:0] empty_132_fu_1825_p1;
reg   [11:0] empty_132_reg_3666;
wire   [11:0] empty_133_fu_1829_p1;
reg   [11:0] empty_133_reg_3671;
wire   [11:0] empty_134_fu_1833_p1;
reg   [11:0] empty_134_reg_3676;
wire   [13:0] empty_135_fu_1837_p1;
reg   [13:0] empty_135_reg_3681;
wire   [13:0] empty_136_fu_1841_p1;
reg   [13:0] empty_136_reg_3686;
wire   [13:0] empty_137_fu_1845_p1;
reg   [13:0] empty_137_reg_3691;
wire   [13:0] empty_138_fu_1849_p1;
reg   [13:0] empty_138_reg_3696;
wire   [13:0] empty_139_fu_1853_p1;
reg   [13:0] empty_139_reg_3701;
wire   [13:0] empty_140_fu_1857_p1;
reg   [13:0] empty_140_reg_3706;
reg   [29:0] trunc_ln_reg_3711;
wire   [29:0] add_ln523_fu_1896_p2;
reg   [29:0] add_ln523_reg_3732;
wire    ap_CS_fsm_state18;
wire   [31:0] add_ln529_fu_1920_p2;
reg   [31:0] add_ln529_reg_3737;
wire   [0:0] icmp_ln523_fu_1891_p2;
reg   [6:0] bias_l2_0_addr_reg_3742;
reg   [6:0] bias_l2_1_addr_reg_3747;
reg   [6:0] bias_l2_2_addr_reg_3752;
reg   [6:0] bias_l2_3_addr_reg_3757;
wire   [2:0] add_ln531_fu_1931_p2;
reg   [2:0] add_ln531_reg_3765;
wire    ap_CS_fsm_state27;
wire   [1:0] trunc_ln535_fu_1937_p1;
reg   [1:0] trunc_ln535_reg_3770;
wire   [0:0] icmp_ln531_fu_1925_p2;
wire  signed [11:0] trunc_ln548_fu_1949_p1;
reg  signed [11:0] trunc_ln548_reg_3774;
wire   [61:0] cast_fu_1953_p1;
wire    ap_CS_fsm_state35;
wire   [61:0] cast5_fu_1957_p1;
wire   [61:0] add_ln538_1_fu_1980_p2;
reg   [61:0] add_ln538_1_reg_3804;
wire    ap_CS_fsm_state42;
wire   [0:0] icmp_ln541_fu_1992_p2;
reg   [0:0] icmp_ln541_reg_3809;
wire   [0:0] icmp_ln538_fu_1974_p2;
wire   [29:0] select_ln538_1_fu_1998_p3;
reg   [29:0] select_ln538_1_reg_3814;
wire  signed [11:0] trunc_ln538_fu_2014_p1;
reg  signed [11:0] trunc_ln538_reg_3819;
reg   [6:0] bias_l2_0_addr_1_reg_3824;
reg   [6:0] bias_l2_1_addr_1_reg_3829;
reg   [6:0] bias_l2_2_addr_1_reg_3834;
reg   [6:0] bias_l2_3_addr_1_reg_3839;
wire   [63:0] zext_ln574_2_fu_2018_p1;
wire   [63:0] zext_ln574_3_fu_2022_p1;
wire   [31:0] select_ln538_fu_2026_p3;
reg   [31:0] select_ln538_reg_3950;
wire    ap_CS_fsm_state50;
wire   [11:0] add_ln547_fu_2037_p2;
reg   [11:0] add_ln547_reg_3955;
wire   [31:0] add_ln548_fu_2054_p2;
reg   [31:0] add_ln548_reg_3960;
wire    ap_CS_fsm_state51;
wire   [0:0] icmp_ln550_fu_2059_p2;
wire    ap_block_state59_pp0_stage0_iter0;
wire    ap_block_state63_pp0_stage0_iter1;
reg    ap_block_state63_io;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] bias_l2_0_load_reg_3969;
wire    ap_block_state60_pp0_stage1_iter0;
wire    ap_block_state64_pp0_stage1_iter1;
reg    ap_block_state64_io;
reg    ap_block_pp0_stage1_11001;
reg   [7:0] bias_l2_1_load_reg_3974;
reg   [7:0] bias_l2_2_load_reg_3979;
reg   [7:0] bias_l2_3_load_reg_3984;
wire   [2:0] add_ln550_fu_2065_p2;
reg   [2:0] add_ln550_reg_3989;
wire    ap_block_state61_pp0_stage2_iter0;
reg    ap_block_state61_io;
wire    ap_block_state65_pp0_stage2_iter1;
reg    ap_block_state65_io;
reg    ap_block_pp0_stage2_11001;
wire   [7:0] tmp_data_V_fu_2075_p6;
reg   [0:0] tmp_data_V_4_reg_3999;
wire   [0:0] tmp_last_V_fu_2094_p2;
reg   [0:0] tmp_last_V_reg_4004;
wire   [7:0] select_ln162_fu_2100_p3;
reg   [7:0] select_ln162_reg_4009;
wire    ap_block_state62_pp0_stage3_iter0;
reg    ap_block_state62_io;
reg    ap_block_pp0_stage3_11001;
wire   [31:0] wh_1_fu_2108_p2;
reg   [31:0] wh_1_reg_4014;
wire    ap_CS_fsm_state68;
wire   [63:0] zext_ln574_12_fu_2113_p1;
wire    ap_CS_fsm_state72;
wire   [63:0] zext_ln574_13_fu_2117_p1;
wire   [63:0] zext_ln574_fu_2121_p1;
wire   [63:0] zext_ln574_1_fu_2125_p1;
wire   [95:0] zext_ln574_4_fu_2129_p1;
wire   [95:0] zext_ln574_5_fu_2133_p1;
wire   [95:0] zext_ln574_14_fu_2138_p1;
wire    ap_CS_fsm_state79;
wire   [95:0] zext_ln574_15_fu_2142_p1;
reg   [95:0] mul_ln574_2_reg_4059;
wire    ap_CS_fsm_state84;
wire   [127:0] zext_ln574_6_fu_2147_p1;
wire    ap_CS_fsm_state85;
wire   [127:0] zext_ln574_7_fu_2151_p1;
reg   [95:0] mul_ln574_7_reg_4076;
wire   [127:0] zext_ln574_16_fu_2155_p1;
wire    ap_CS_fsm_state86;
wire   [127:0] zext_ln574_17_fu_2159_p1;
reg   [127:0] mul_ln574_3_reg_4093;
wire    ap_CS_fsm_state91;
wire   [159:0] zext_ln574_8_fu_2163_p1;
wire    ap_CS_fsm_state92;
wire   [159:0] zext_ln574_9_fu_2167_p1;
reg   [127:0] mul_ln574_8_reg_4110;
wire   [159:0] zext_ln574_18_fu_2171_p1;
wire    ap_CS_fsm_state93;
wire   [159:0] zext_ln574_19_fu_2175_p1;
reg   [159:0] mul_ln574_4_reg_4127;
wire    ap_CS_fsm_state98;
wire   [191:0] zext_ln574_10_fu_2179_p1;
wire    ap_CS_fsm_state99;
wire   [191:0] zext_ln574_11_fu_2183_p1;
reg   [159:0] mul_ln574_9_reg_4143;
wire   [191:0] zext_ln574_20_fu_2187_p1;
wire    ap_CS_fsm_state100;
wire   [191:0] zext_ln574_21_fu_2191_p1;
reg   [191:0] mul_ln574_5_reg_4159;
wire    ap_CS_fsm_state105;
reg   [191:0] mul_ln574_10_reg_4164;
wire    ap_CS_fsm_state106;
wire   [0:0] icmp_ln584_fu_2195_p2;
reg   [0:0] icmp_ln584_reg_4169;
wire   [0:0] icmp_ln582_fu_2200_p2;
reg   [0:0] icmp_ln582_reg_4177;
wire   [0:0] icmp_ln580_fu_2206_p2;
reg   [0:0] icmp_ln580_reg_4184;
wire   [0:0] icmp_ln578_fu_2211_p2;
reg   [0:0] icmp_ln578_reg_4190;
wire   [0:0] icmp_ln621_fu_2216_p2;
reg   [0:0] icmp_ln621_reg_4195;
wire   [0:0] icmp_ln619_fu_2221_p2;
reg   [0:0] icmp_ln619_reg_4203;
wire   [0:0] icmp_ln617_fu_2227_p2;
reg   [0:0] icmp_ln617_reg_4210;
wire   [0:0] icmp_ln615_fu_2232_p2;
reg   [0:0] icmp_ln615_reg_4216;
wire   [0:0] icmp_ln574_fu_2237_p2;
reg   [0:0] icmp_ln574_reg_4221;
wire    ap_CS_fsm_state107;
wire   [191:0] grp_fu_2242_p2;
reg   [191:0] add_ln574_reg_4225;
wire    ap_CS_fsm_state108;
wire   [0:0] icmp_ln576_fu_2248_p2;
reg   [0:0] icmp_ln576_reg_4230;
wire   [0:0] icmp_ln584_1_fu_2253_p2;
reg   [0:0] icmp_ln584_1_reg_4245;
wire   [0:0] icmp_ln582_1_fu_2258_p2;
reg   [0:0] icmp_ln582_1_reg_4250;
wire   [0:0] icmp_ln580_1_fu_2264_p2;
reg   [0:0] icmp_ln580_1_reg_4255;
wire   [0:0] icmp_ln578_1_fu_2269_p2;
reg   [0:0] icmp_ln578_1_reg_4260;
wire   [31:0] select_ln574_fu_2280_p3;
reg   [31:0] select_ln574_reg_4265;
wire    ap_CS_fsm_state109;
wire   [31:0] select_ln574_1_fu_2287_p3;
reg   [31:0] select_ln574_1_reg_4271;
wire   [13:0] trunc_ln574_fu_2294_p1;
reg   [13:0] trunc_ln574_reg_4276;
wire   [0:0] select_ln574_6_fu_2308_p3;
reg   [0:0] select_ln574_6_reg_4281;
wire   [0:0] or_ln576_fu_2313_p2;
reg   [0:0] or_ln576_reg_4289;
wire   [31:0] select_ln576_fu_2318_p3;
reg   [31:0] select_ln576_reg_4296;
wire   [0:0] select_ln576_5_fu_2333_p3;
reg   [0:0] select_ln576_5_reg_4302;
wire   [0:0] select_ln578_5_fu_2340_p3;
reg   [0:0] select_ln578_5_reg_4311;
wire   [13:0] select_ln576_1_fu_2372_p3;
reg   [13:0] select_ln576_1_reg_4321;
wire    ap_CS_fsm_state110;
wire   [31:0] select_ln576_6_fu_2396_p3;
reg   [31:0] select_ln576_6_reg_4327;
wire   [0:0] or_ln578_fu_2407_p2;
reg   [0:0] or_ln578_reg_4332;
wire   [0:0] or_ln578_1_fu_2411_p2;
reg   [0:0] or_ln578_1_reg_4337;
wire   [31:0] select_ln578_fu_2416_p3;
reg   [31:0] select_ln578_reg_4344;
wire   [13:0] select_ln578_1_fu_2428_p3;
reg   [13:0] select_ln578_1_reg_4350;
wire   [31:0] select_ln578_6_fu_2441_p3;
reg   [31:0] select_ln578_6_reg_4355;
wire   [0:0] or_ln580_1_fu_2451_p2;
reg   [0:0] or_ln580_1_reg_4360;
wire   [31:0] select_ln580_fu_2456_p3;
reg   [31:0] select_ln580_reg_4366;
wire   [0:0] select_ln580_4_fu_2464_p3;
reg   [0:0] select_ln580_4_reg_4372;
wire   [11:0] select_ln580_1_fu_2505_p3;
reg   [11:0] select_ln580_1_reg_4379;
wire    ap_CS_fsm_state111;
wire   [13:0] select_ln580_2_fu_2516_p3;
reg   [13:0] select_ln580_2_reg_4384;
wire   [31:0] select_ln580_5_fu_2530_p3;
reg   [31:0] select_ln580_5_reg_4389;
wire   [31:0] select_ln582_fu_2555_p3;
reg   [31:0] select_ln582_reg_4394;
wire   [13:0] select_ln582_1_fu_2567_p3;
reg   [13:0] select_ln582_1_reg_4399;
wire   [31:0] select_ln582_2_fu_2574_p3;
reg   [31:0] select_ln582_2_reg_4404;
wire   [13:0] trunc_ln584_fu_2580_p1;
reg   [13:0] trunc_ln584_reg_4409;
wire  signed [10:0] trunc_ln613_fu_2584_p1;
wire    ap_CS_fsm_state116;
wire   [9:0] trunc_ln613_1_fu_2589_p1;
reg   [9:0] trunc_ln613_1_reg_4419;
wire   [0:0] icmp_ln611_fu_2593_p2;
reg   [0:0] icmp_ln611_reg_4424;
wire  signed [10:0] trunc_ln615_fu_2604_p1;
reg  signed [10:0] trunc_ln615_reg_4428;
wire    ap_CS_fsm_state117;
wire   [191:0] grp_fu_2598_p2;
reg   [191:0] add_ln611_reg_4434;
wire  signed [10:0] trunc_ln617_fu_2609_p1;
reg  signed [10:0] trunc_ln617_reg_4439;
wire    ap_CS_fsm_state118;
reg   [10:0] mul3_i_reg_4445;
wire    ap_CS_fsm_state123;
reg   [10:0] mul6_i_reg_4451;
wire    ap_CS_fsm_state124;
wire   [11:0] trunc_ln619_1_fu_2618_p1;
reg   [11:0] trunc_ln619_1_reg_4456;
wire   [10:0] tmp1_fu_2622_p2;
reg   [10:0] tmp1_reg_4461;
wire   [0:0] icmp_ln613_fu_2627_p2;
reg   [0:0] icmp_ln613_reg_4466;
wire   [0:0] icmp_ln621_1_fu_2632_p2;
reg   [0:0] icmp_ln621_1_reg_4482;
wire   [0:0] icmp_ln619_1_fu_2637_p2;
reg   [0:0] icmp_ln619_1_reg_4487;
wire   [0:0] icmp_ln617_1_fu_2643_p2;
reg   [0:0] icmp_ln617_1_reg_4492;
wire   [0:0] icmp_ln615_1_fu_2648_p2;
reg   [0:0] icmp_ln615_1_reg_4497;
wire   [31:0] smo_1_fu_2653_p2;
reg   [31:0] smo_1_reg_4502;
wire   [63:0] add_ln582_1_fu_2658_p2;
reg   [63:0] add_ln582_1_reg_4507;
wire   [31:0] select_ln611_fu_2688_p3;
reg   [31:0] select_ln611_reg_4512;
wire    ap_CS_fsm_state125;
wire   [31:0] select_ln611_1_fu_2695_p3;
reg   [31:0] select_ln611_1_reg_4518;
wire   [10:0] trunc_ln611_fu_2702_p1;
reg   [10:0] trunc_ln611_reg_4523;
wire   [11:0] trunc_ln611_1_fu_2706_p1;
reg   [11:0] trunc_ln611_1_reg_4528;
wire   [0:0] select_ln611_7_fu_2720_p3;
reg   [0:0] select_ln611_7_reg_4533;
wire   [0:0] or_ln613_fu_2725_p2;
reg   [0:0] or_ln613_reg_4542;
wire   [31:0] select_ln613_fu_2730_p3;
reg   [31:0] select_ln613_reg_4551;
wire   [0:0] select_ln613_8_fu_2745_p3;
reg   [0:0] select_ln613_8_reg_4557;
wire   [0:0] select_ln615_7_fu_2752_p3;
wire  signed [10:0] trunc_ln613_2_fu_2775_p1;
reg  signed [10:0] trunc_ln613_2_reg_4579;
wire    ap_CS_fsm_state126;
wire   [9:0] select_ln613_1_fu_2783_p3;
reg   [9:0] select_ln613_1_reg_4584;
wire   [31:0] select_ln613_9_fu_2796_p3;
reg   [31:0] select_ln613_9_reg_4589;
wire   [0:0] or_ln615_fu_2807_p2;
reg   [0:0] or_ln615_reg_4595;
wire   [0:0] or_ln615_1_fu_2811_p2;
reg   [0:0] or_ln615_1_reg_4600;
wire   [31:0] select_ln615_fu_2816_p3;
reg   [31:0] select_ln615_reg_4607;
wire  signed [10:0] trunc_ln615_1_fu_2824_p1;
reg  signed [10:0] trunc_ln615_1_reg_4613;
wire   [31:0] select_ln615_8_fu_2834_p3;
reg   [31:0] select_ln615_8_reg_4619;
wire   [0:0] select_ln617_5_fu_2840_p3;
reg   [0:0] select_ln617_5_reg_4624;
wire  signed [10:0] trunc_ln617_1_fu_2851_p1;
reg  signed [10:0] trunc_ln617_1_reg_4632;
wire    ap_CS_fsm_state127;
wire   [31:0] select_ln617_6_fu_2855_p3;
reg   [31:0] select_ln617_6_reg_4638;
wire   [10:0] select_ln615_1_fu_2867_p3;
reg   [10:0] select_ln615_1_reg_4643;
wire    ap_CS_fsm_state128;
wire   [10:0] select_ln617_1_fu_2879_p3;
reg   [10:0] select_ln617_1_reg_4648;
wire    ap_CS_fsm_state129;
reg   [10:0] mul9_i_mid1_reg_4653;
wire    ap_CS_fsm_state133;
wire   [0:0] or_ln617_1_fu_2889_p2;
reg   [0:0] or_ln617_1_reg_4658;
wire   [31:0] select_ln617_fu_2894_p3;
reg   [31:0] select_ln617_reg_4664;
wire   [10:0] select_ln613_2_fu_2909_p3;
reg   [10:0] select_ln613_2_reg_4670;
wire   [10:0] trunc_ln619_2_fu_2926_p1;
reg   [10:0] trunc_ln619_2_reg_4675;
wire   [11:0] select_ln619_1_fu_2934_p3;
reg   [11:0] select_ln619_1_reg_4680;
wire   [31:0] select_ln619_3_fu_2941_p3;
reg   [31:0] select_ln619_3_reg_4685;
wire   [10:0] select_ln619_2_fu_2985_p3;
reg   [10:0] select_ln619_2_reg_4691;
wire   [31:0] select_ln619_fu_3019_p3;
reg   [31:0] select_ln619_reg_4696;
wire    ap_CS_fsm_state136;
wire   [11:0] trunc_ln621_1_fu_3031_p1;
reg   [11:0] trunc_ln621_1_reg_4701;
wire   [0:0] isFirst_fu_3045_p2;
reg   [0:0] isFirst_reg_4706;
wire   [10:0] tmp3_fu_3051_p2;
reg   [10:0] tmp3_reg_4711;
wire    ap_CS_fsm_state137;
reg   [7:0] weight_regfile_0_0_reg_4796;
wire    ap_CS_fsm_state138;
wire    grp_runWeight2Reg_fu_1631_ap_ready;
wire    grp_runWeight2Reg_fu_1631_ap_done;
reg   [7:0] weight_regfile_0_1_reg_4802;
reg   [7:0] weight_regfile_0_2_reg_4808;
reg   [7:0] weight_regfile_0_3_reg_4814;
reg   [7:0] weight_regfile_1_0_reg_4820;
reg   [7:0] weight_regfile_1_1_reg_4826;
reg   [7:0] weight_regfile_1_2_reg_4832;
reg   [7:0] weight_regfile_1_3_reg_4838;
reg   [7:0] weight_regfile_2_0_reg_4844;
reg   [7:0] weight_regfile_2_1_reg_4850;
reg   [7:0] weight_regfile_2_2_reg_4856;
reg   [7:0] weight_regfile_2_3_reg_4862;
reg   [7:0] weight_regfile_3_0_reg_4868;
reg   [7:0] weight_regfile_3_1_reg_4874;
reg   [7:0] weight_regfile_3_2_reg_4880;
reg   [7:0] weight_regfile_3_3_reg_4886;
wire   [0:0] icmp_ln59_fu_3185_p2;
reg   [0:0] icmp_ln59_reg_4892_pp2_iter1_reg;
reg   [0:0] icmp_ln59_reg_4892_pp2_iter2_reg;
reg   [0:0] icmp_ln59_reg_4892_pp2_iter4_reg;
reg   [0:0] icmp_ln59_reg_4892_pp2_iter5_reg;
wire   [63:0] add_ln59_2_fu_3191_p2;
reg   [63:0] add_ln59_2_reg_4896;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln61_fu_3203_p2;
reg   [0:0] icmp_ln61_reg_4901;
wire   [31:0] select_ln59_1_fu_3208_p3;
reg   [31:0] select_ln59_1_reg_4906;
wire   [10:0] trunc_ln59_fu_3216_p1;
reg   [10:0] trunc_ln59_reg_4911;
wire  signed [7:0] trunc_ln59_1_fu_3220_p1;
reg  signed [7:0] trunc_ln59_1_reg_4916;
wire  signed [10:0] add_ln59_1_fu_3235_p2;
reg  signed [10:0] add_ln59_1_reg_4921;
wire   [10:0] empty_142_fu_3240_p1;
reg   [10:0] empty_142_reg_4926;
reg   [10:0] empty_142_reg_4926_pp2_iter1_reg;
reg   [10:0] empty_142_reg_4926_pp2_iter2_reg;
reg   [10:0] empty_142_reg_4926_pp2_iter3_reg;
wire   [7:0] empty_143_fu_3244_p1;
reg   [7:0] empty_143_reg_4931;
reg   [7:0] empty_143_reg_4931_pp2_iter1_reg;
reg   [7:0] empty_143_reg_4931_pp2_iter2_reg;
reg   [7:0] empty_143_reg_4931_pp2_iter3_reg;
wire   [31:0] add_ln61_fu_3248_p2;
reg   [31:0] add_ln61_reg_4936;
wire   [7:0] add17_i_fu_3254_p2;
reg   [7:0] add17_i_reg_4941;
reg   [7:0] add17_i_reg_4941_pp2_iter5_reg;
wire   [10:0] add13_i_fu_3264_p2;
reg   [10:0] add13_i_reg_4946;
reg   [7:0] data_l2_0_load_reg_4971;
reg   [7:0] data_l2_1_load_reg_4976;
reg   [7:0] data_l2_2_load_reg_4981;
reg   [7:0] data_l2_3_load_reg_4986;
wire   [31:0] so_1_fu_3283_p2;
reg   [31:0] so_1_reg_4991;
wire    ap_CS_fsm_state152;
wire   [63:0] add_ln619_1_fu_3288_p2;
reg   [63:0] add_ln619_1_reg_4996;
wire   [63:0] select_ln619_4_fu_3376_p3;
reg   [63:0] select_ln619_4_reg_5001;
wire    ap_CS_fsm_state153;
wire    grp_runSIMD_fu_1499_ap_ready;
wire    grp_runSIMD_fu_1499_ap_done;
wire   [95:0] grp_fu_3294_p2;
reg   [95:0] add_ln617_1_reg_5006;
wire   [127:0] grp_fu_3300_p2;
reg   [127:0] add_ln615_1_reg_5011;
wire   [159:0] grp_fu_3306_p2;
reg   [159:0] add_ln613_1_reg_5016;
wire   [95:0] select_ln617_7_fu_3382_p3;
reg   [95:0] select_ln617_7_reg_5021;
wire    ap_CS_fsm_state154;
wire   [127:0] select_ln615_9_fu_3388_p3;
reg   [127:0] select_ln615_9_reg_5026;
wire   [159:0] select_ln613_10_fu_3394_p3;
reg   [159:0] select_ln613_10_reg_5031;
wire   [63:0] select_ln582_3_fu_3400_p3;
reg   [63:0] select_ln582_3_reg_5036;
wire    ap_CS_fsm_state156;
wire    grp_output_dram_write_1_fu_1531_ap_ready;
wire    grp_output_dram_write_1_fu_1531_ap_done;
wire   [95:0] grp_fu_2664_p2;
reg   [95:0] add_ln580_1_reg_5041;
wire   [127:0] grp_fu_2670_p2;
reg   [127:0] add_ln578_1_reg_5046;
wire   [159:0] grp_fu_2676_p2;
reg   [159:0] add_ln576_1_reg_5051;
wire   [95:0] select_ln580_6_fu_3406_p3;
wire    ap_CS_fsm_state157;
wire   [127:0] select_ln578_7_fu_3412_p3;
wire   [159:0] select_ln576_7_fu_3418_p3;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_pp0_exit_iter0_state61;
reg    ap_block_pp0_stage3_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state139;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage1_subdone;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg   [7:0] data_l1_0_address0;
reg    data_l1_0_ce0;
reg    data_l1_0_we0;
wire   [7:0] data_l1_0_q0;
reg   [7:0] data_l1_1_address0;
reg    data_l1_1_ce0;
reg    data_l1_1_we0;
wire   [7:0] data_l1_1_q0;
reg   [7:0] data_l1_2_address0;
reg    data_l1_2_ce0;
reg    data_l1_2_we0;
wire   [7:0] data_l1_2_q0;
reg   [7:0] data_l1_3_address0;
reg    data_l1_3_ce0;
reg    data_l1_3_we0;
wire   [7:0] data_l1_3_q0;
reg   [7:0] output_l1_0_address0;
reg    output_l1_0_ce0;
reg    output_l1_0_we0;
wire   [17:0] output_l1_0_q0;
reg   [7:0] output_l1_1_address0;
reg    output_l1_1_ce0;
reg    output_l1_1_we0;
wire   [17:0] output_l1_1_q0;
reg   [7:0] output_l1_2_address0;
reg    output_l1_2_ce0;
reg    output_l1_2_we0;
wire   [17:0] output_l1_2_q0;
reg   [7:0] output_l1_3_address0;
reg    output_l1_3_ce0;
reg    output_l1_3_we0;
wire   [17:0] output_l1_3_q0;
wire    grp_runSIMD_fu_1499_ap_start;
wire    grp_runSIMD_fu_1499_ap_idle;
wire   [7:0] grp_runSIMD_fu_1499_data_l1_address0;
wire    grp_runSIMD_fu_1499_data_l1_ce0;
wire   [7:0] grp_runSIMD_fu_1499_data_l14_address0;
wire    grp_runSIMD_fu_1499_data_l14_ce0;
wire   [7:0] grp_runSIMD_fu_1499_data_l15_address0;
wire    grp_runSIMD_fu_1499_data_l15_ce0;
wire   [7:0] grp_runSIMD_fu_1499_data_l16_address0;
wire    grp_runSIMD_fu_1499_data_l16_ce0;
wire   [7:0] grp_runSIMD_fu_1499_output_l1_address0;
wire    grp_runSIMD_fu_1499_output_l1_ce0;
wire    grp_runSIMD_fu_1499_output_l1_we0;
wire   [17:0] grp_runSIMD_fu_1499_output_l1_d0;
wire   [7:0] grp_runSIMD_fu_1499_output_l17_address0;
wire    grp_runSIMD_fu_1499_output_l17_ce0;
wire    grp_runSIMD_fu_1499_output_l17_we0;
wire   [17:0] grp_runSIMD_fu_1499_output_l17_d0;
wire   [7:0] grp_runSIMD_fu_1499_output_l18_address0;
wire    grp_runSIMD_fu_1499_output_l18_ce0;
wire    grp_runSIMD_fu_1499_output_l18_we0;
wire   [17:0] grp_runSIMD_fu_1499_output_l18_d0;
wire   [7:0] grp_runSIMD_fu_1499_output_l19_address0;
wire    grp_runSIMD_fu_1499_output_l19_ce0;
wire    grp_runSIMD_fu_1499_output_l19_we0;
wire   [17:0] grp_runSIMD_fu_1499_output_l19_d0;
wire    grp_output_dram_write_1_fu_1531_ap_start;
wire    grp_output_dram_write_1_fu_1531_ap_idle;
wire    grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWVALID;
wire   [31:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWADDR;
wire   [0:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWID;
wire   [31:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWLEN;
wire   [2:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWSIZE;
wire   [1:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWBURST;
wire   [1:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWLOCK;
wire   [3:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWCACHE;
wire   [2:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWPROT;
wire   [3:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWQOS;
wire   [3:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWREGION;
wire   [0:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWUSER;
wire    grp_output_dram_write_1_fu_1531_m_axi_dma_control_WVALID;
wire   [31:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_WDATA;
wire   [3:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_WSTRB;
wire    grp_output_dram_write_1_fu_1531_m_axi_dma_control_WLAST;
wire   [0:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_WID;
wire   [0:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_WUSER;
wire    grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARVALID;
wire   [31:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARADDR;
wire   [0:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARID;
wire   [31:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARLEN;
wire   [2:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARSIZE;
wire   [1:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARBURST;
wire   [1:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARLOCK;
wire   [3:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARCACHE;
wire   [2:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARPROT;
wire   [3:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARQOS;
wire   [3:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARREGION;
wire   [0:0] grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARUSER;
wire    grp_output_dram_write_1_fu_1531_m_axi_dma_control_RREADY;
wire    grp_output_dram_write_1_fu_1531_m_axi_dma_control_BREADY;
wire    grp_output_dram_write_1_fu_1531_in_data_TREADY;
wire   [7:0] grp_output_dram_write_1_fu_1531_out_data_TDATA;
wire    grp_output_dram_write_1_fu_1531_out_data_TVALID;
wire    grp_output_dram_write_1_fu_1531_out_data_TREADY;
wire   [0:0] grp_output_dram_write_1_fu_1531_out_data_TKEEP;
wire   [0:0] grp_output_dram_write_1_fu_1531_out_data_TSTRB;
wire   [0:0] grp_output_dram_write_1_fu_1531_out_data_TLAST;
wire   [10:0] grp_output_dram_write_1_fu_1531_output_l2_0_address0;
wire    grp_output_dram_write_1_fu_1531_output_l2_0_ce0;
wire   [10:0] grp_output_dram_write_1_fu_1531_output_l2_1_address0;
wire    grp_output_dram_write_1_fu_1531_output_l2_1_ce0;
wire   [10:0] grp_output_dram_write_1_fu_1531_output_l2_2_address0;
wire    grp_output_dram_write_1_fu_1531_output_l2_2_ce0;
wire   [10:0] grp_output_dram_write_1_fu_1531_output_l2_3_address0;
wire    grp_output_dram_write_1_fu_1531_output_l2_3_ce0;
wire    grp_runOutputL1toL2_fu_1567_ap_start;
wire    grp_runOutputL1toL2_fu_1567_ap_done;
wire    grp_runOutputL1toL2_fu_1567_ap_idle;
wire    grp_runOutputL1toL2_fu_1567_ap_ready;
wire   [7:0] grp_runOutputL1toL2_fu_1567_output_l1_address0;
wire    grp_runOutputL1toL2_fu_1567_output_l1_ce0;
wire   [7:0] grp_runOutputL1toL2_fu_1567_output_l11_address0;
wire    grp_runOutputL1toL2_fu_1567_output_l11_ce0;
wire   [7:0] grp_runOutputL1toL2_fu_1567_output_l12_address0;
wire    grp_runOutputL1toL2_fu_1567_output_l12_ce0;
wire   [7:0] grp_runOutputL1toL2_fu_1567_output_l13_address0;
wire    grp_runOutputL1toL2_fu_1567_output_l13_ce0;
wire   [10:0] grp_runOutputL1toL2_fu_1567_output_l2_0_address0;
wire    grp_runOutputL1toL2_fu_1567_output_l2_0_ce0;
wire    grp_runOutputL1toL2_fu_1567_output_l2_0_we0;
wire   [31:0] grp_runOutputL1toL2_fu_1567_output_l2_0_d0;
wire   [10:0] grp_runOutputL1toL2_fu_1567_output_l2_0_address1;
wire    grp_runOutputL1toL2_fu_1567_output_l2_0_ce1;
wire    grp_runOutputL1toL2_fu_1567_output_l2_0_we1;
wire   [31:0] grp_runOutputL1toL2_fu_1567_output_l2_0_d1;
wire   [10:0] grp_runOutputL1toL2_fu_1567_output_l2_1_address0;
wire    grp_runOutputL1toL2_fu_1567_output_l2_1_ce0;
wire    grp_runOutputL1toL2_fu_1567_output_l2_1_we0;
wire   [31:0] grp_runOutputL1toL2_fu_1567_output_l2_1_d0;
wire   [10:0] grp_runOutputL1toL2_fu_1567_output_l2_1_address1;
wire    grp_runOutputL1toL2_fu_1567_output_l2_1_ce1;
wire    grp_runOutputL1toL2_fu_1567_output_l2_1_we1;
wire   [31:0] grp_runOutputL1toL2_fu_1567_output_l2_1_d1;
wire   [10:0] grp_runOutputL1toL2_fu_1567_output_l2_2_address0;
wire    grp_runOutputL1toL2_fu_1567_output_l2_2_ce0;
wire    grp_runOutputL1toL2_fu_1567_output_l2_2_we0;
wire   [31:0] grp_runOutputL1toL2_fu_1567_output_l2_2_d0;
wire   [10:0] grp_runOutputL1toL2_fu_1567_output_l2_2_address1;
wire    grp_runOutputL1toL2_fu_1567_output_l2_2_ce1;
wire    grp_runOutputL1toL2_fu_1567_output_l2_2_we1;
wire   [31:0] grp_runOutputL1toL2_fu_1567_output_l2_2_d1;
wire   [10:0] grp_runOutputL1toL2_fu_1567_output_l2_3_address0;
wire    grp_runOutputL1toL2_fu_1567_output_l2_3_ce0;
wire    grp_runOutputL1toL2_fu_1567_output_l2_3_we0;
wire   [31:0] grp_runOutputL1toL2_fu_1567_output_l2_3_d0;
wire    grp_input_dram_read_1_fu_1599_ap_start;
wire    grp_input_dram_read_1_fu_1599_ap_done;
wire    grp_input_dram_read_1_fu_1599_ap_idle;
wire    grp_input_dram_read_1_fu_1599_ap_ready;
wire    grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWVALID;
wire   [31:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWADDR;
wire   [0:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWID;
wire   [31:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWLEN;
wire   [2:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWSIZE;
wire   [1:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWBURST;
wire   [1:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWLOCK;
wire   [3:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWCACHE;
wire   [2:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWPROT;
wire   [3:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWQOS;
wire   [3:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWREGION;
wire   [0:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWUSER;
wire    grp_input_dram_read_1_fu_1599_m_axi_dma_control_WVALID;
wire   [31:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_WDATA;
wire   [3:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_WSTRB;
wire    grp_input_dram_read_1_fu_1599_m_axi_dma_control_WLAST;
wire   [0:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_WID;
wire   [0:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_WUSER;
wire    grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARVALID;
wire   [31:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARADDR;
wire   [0:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARID;
wire   [31:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARLEN;
wire   [2:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARSIZE;
wire   [1:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARBURST;
wire   [1:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARLOCK;
wire   [3:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARCACHE;
wire   [2:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARPROT;
wire   [3:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARQOS;
wire   [3:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARREGION;
wire   [0:0] grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARUSER;
wire    grp_input_dram_read_1_fu_1599_m_axi_dma_control_RREADY;
wire    grp_input_dram_read_1_fu_1599_m_axi_dma_control_BREADY;
wire    grp_input_dram_read_1_fu_1599_in_data_TREADY;
wire   [10:0] grp_input_dram_read_1_fu_1599_data_l2_0_address0;
wire    grp_input_dram_read_1_fu_1599_data_l2_0_ce0;
wire    grp_input_dram_read_1_fu_1599_data_l2_0_we0;
wire   [7:0] grp_input_dram_read_1_fu_1599_data_l2_0_d0;
wire   [10:0] grp_input_dram_read_1_fu_1599_data_l2_1_address0;
wire    grp_input_dram_read_1_fu_1599_data_l2_1_ce0;
wire    grp_input_dram_read_1_fu_1599_data_l2_1_we0;
wire   [7:0] grp_input_dram_read_1_fu_1599_data_l2_1_d0;
wire   [10:0] grp_input_dram_read_1_fu_1599_data_l2_2_address0;
wire    grp_input_dram_read_1_fu_1599_data_l2_2_ce0;
wire    grp_input_dram_read_1_fu_1599_data_l2_2_we0;
wire   [7:0] grp_input_dram_read_1_fu_1599_data_l2_2_d0;
wire   [10:0] grp_input_dram_read_1_fu_1599_data_l2_3_address0;
wire    grp_input_dram_read_1_fu_1599_data_l2_3_ce0;
wire    grp_input_dram_read_1_fu_1599_data_l2_3_we0;
wire   [7:0] grp_input_dram_read_1_fu_1599_data_l2_3_d0;
wire    grp_runWeight2Reg_fu_1631_ap_start;
wire    grp_runWeight2Reg_fu_1631_ap_idle;
wire   [11:0] grp_runWeight2Reg_fu_1631_weight_l2_0_address0;
wire    grp_runWeight2Reg_fu_1631_weight_l2_0_ce0;
wire   [11:0] grp_runWeight2Reg_fu_1631_weight_l2_1_address0;
wire    grp_runWeight2Reg_fu_1631_weight_l2_1_ce0;
wire   [11:0] grp_runWeight2Reg_fu_1631_weight_l2_2_address0;
wire    grp_runWeight2Reg_fu_1631_weight_l2_2_ce0;
wire   [11:0] grp_runWeight2Reg_fu_1631_weight_l2_3_address0;
wire    grp_runWeight2Reg_fu_1631_weight_l2_3_ce0;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_0;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_1;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_2;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_3;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_4;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_5;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_6;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_7;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_8;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_9;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_10;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_11;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_12;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_13;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_14;
wire   [7:0] grp_runWeight2Reg_fu_1631_ap_return_15;
wire    grp_weight_dram_read_1_fu_1666_ap_start;
wire    grp_weight_dram_read_1_fu_1666_ap_done;
wire    grp_weight_dram_read_1_fu_1666_ap_idle;
wire    grp_weight_dram_read_1_fu_1666_ap_ready;
wire    grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWVALID;
wire   [31:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWADDR;
wire   [0:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWID;
wire   [31:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWLEN;
wire   [2:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWSIZE;
wire   [1:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWBURST;
wire   [1:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWLOCK;
wire   [3:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWCACHE;
wire   [2:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWPROT;
wire   [3:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWQOS;
wire   [3:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWREGION;
wire   [0:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWUSER;
wire    grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WVALID;
wire   [31:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WDATA;
wire   [3:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WSTRB;
wire    grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WLAST;
wire   [0:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WID;
wire   [0:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WUSER;
wire    grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARVALID;
wire   [31:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARADDR;
wire   [0:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARID;
wire   [31:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARLEN;
wire   [2:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARSIZE;
wire   [1:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARBURST;
wire   [1:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARLOCK;
wire   [3:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARCACHE;
wire   [2:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARPROT;
wire   [3:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARQOS;
wire   [3:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARREGION;
wire   [0:0] grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARUSER;
wire    grp_weight_dram_read_1_fu_1666_m_axi_dma_control_RREADY;
wire    grp_weight_dram_read_1_fu_1666_m_axi_dma_control_BREADY;
wire    grp_weight_dram_read_1_fu_1666_in_data_TREADY;
wire   [11:0] grp_weight_dram_read_1_fu_1666_weight_l2_0_address0;
wire    grp_weight_dram_read_1_fu_1666_weight_l2_0_ce0;
wire    grp_weight_dram_read_1_fu_1666_weight_l2_0_we0;
wire   [7:0] grp_weight_dram_read_1_fu_1666_weight_l2_0_d0;
wire   [11:0] grp_weight_dram_read_1_fu_1666_weight_l2_1_address0;
wire    grp_weight_dram_read_1_fu_1666_weight_l2_1_ce0;
wire    grp_weight_dram_read_1_fu_1666_weight_l2_1_we0;
wire   [7:0] grp_weight_dram_read_1_fu_1666_weight_l2_1_d0;
wire   [11:0] grp_weight_dram_read_1_fu_1666_weight_l2_2_address0;
wire    grp_weight_dram_read_1_fu_1666_weight_l2_2_ce0;
wire    grp_weight_dram_read_1_fu_1666_weight_l2_2_we0;
wire   [7:0] grp_weight_dram_read_1_fu_1666_weight_l2_2_d0;
wire   [11:0] grp_weight_dram_read_1_fu_1666_weight_l2_3_address0;
wire    grp_weight_dram_read_1_fu_1666_weight_l2_3_ce0;
wire    grp_weight_dram_read_1_fu_1666_weight_l2_3_we0;
wire   [7:0] grp_weight_dram_read_1_fu_1666_weight_l2_3_d0;
wire    grp_write_s2mm_1_fu_1700_ap_start;
wire    grp_write_s2mm_1_fu_1700_ap_done;
wire    grp_write_s2mm_1_fu_1700_ap_idle;
wire    grp_write_s2mm_1_fu_1700_ap_ready;
wire    grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWVALID;
wire   [31:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWADDR;
wire   [0:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWID;
wire   [31:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWLEN;
wire   [2:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWSIZE;
wire   [1:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWBURST;
wire   [1:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWLOCK;
wire   [3:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWCACHE;
wire   [2:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWPROT;
wire   [3:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWQOS;
wire   [3:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWREGION;
wire   [0:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWUSER;
wire    grp_write_s2mm_1_fu_1700_m_axi_dma_control_WVALID;
wire   [31:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_WDATA;
wire   [3:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_WSTRB;
wire    grp_write_s2mm_1_fu_1700_m_axi_dma_control_WLAST;
wire   [0:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_WID;
wire   [0:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_WUSER;
wire    grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARVALID;
wire   [31:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARADDR;
wire   [0:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARID;
wire   [31:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARLEN;
wire   [2:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARSIZE;
wire   [1:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARBURST;
wire   [1:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARLOCK;
wire   [3:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARCACHE;
wire   [2:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARPROT;
wire   [3:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARQOS;
wire   [3:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARREGION;
wire   [0:0] grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARUSER;
wire    grp_write_s2mm_1_fu_1700_m_axi_dma_control_RREADY;
wire    grp_write_s2mm_1_fu_1700_m_axi_dma_control_BREADY;
reg   [12:0] grp_write_s2mm_1_fu_1700_signal_r;
wire    grp_write_mm2s_1_fu_1709_ap_start;
wire    grp_write_mm2s_1_fu_1709_ap_done;
wire    grp_write_mm2s_1_fu_1709_ap_idle;
wire    grp_write_mm2s_1_fu_1709_ap_ready;
wire    grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWVALID;
wire   [31:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWADDR;
wire   [0:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWID;
wire   [31:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWLEN;
wire   [2:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWSIZE;
wire   [1:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWBURST;
wire   [1:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWLOCK;
wire   [3:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWCACHE;
wire   [2:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWPROT;
wire   [3:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWQOS;
wire   [3:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWREGION;
wire   [0:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWUSER;
wire    grp_write_mm2s_1_fu_1709_m_axi_dma_control_WVALID;
wire   [31:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_WDATA;
wire   [3:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_WSTRB;
wire    grp_write_mm2s_1_fu_1709_m_axi_dma_control_WLAST;
wire   [0:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_WID;
wire   [0:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_WUSER;
wire    grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARVALID;
wire   [31:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARADDR;
wire   [0:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARID;
wire   [31:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARLEN;
wire   [2:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARSIZE;
wire   [1:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARBURST;
wire   [1:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARLOCK;
wire   [3:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARCACHE;
wire   [2:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARPROT;
wire   [3:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARQOS;
wire   [3:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARREGION;
wire   [0:0] grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARUSER;
wire    grp_write_mm2s_1_fu_1709_m_axi_dma_control_RREADY;
wire    grp_write_mm2s_1_fu_1709_m_axi_dma_control_BREADY;
reg   [2:0] grp_write_mm2s_1_fu_1709_signal_r;
reg   [29:0] ko_reg_1059;
reg   [2:0] ki_reg_1070;
reg   [61:0] indvar_flatten_reg_1081;
wire    ap_CS_fsm_state71;
reg   [29:0] ko_2_reg_1092;
reg   [31:0] wh_reg_1103;
reg   [2:0] ap_phi_mux_ki_2_phi_fu_1119_p4;
reg   [191:0] indvar_flatten751_reg_1127;
reg   [31:0] kmo_reg_1139;
reg   [159:0] indvar_flatten625_reg_1151;
reg   [31:0] cmo_reg_1163;
reg   [127:0] indvar_flatten525_reg_1175;
reg   [31:0] hmo_reg_1187;
reg   [95:0] indvar_flatten451_reg_1199;
reg   [31:0] wmo_reg_1211;
reg   [63:0] indvar_flatten405_reg_1223;
reg   [31:0] rmo_reg_1235;
reg   [31:0] smo_reg_1247;
reg   [191:0] indvar_flatten397_reg_1259;
wire    ap_CS_fsm_state115;
wire    ap_CS_fsm_state155;
reg   [31:0] co_reg_1271;
reg   [31:0] ho_reg_1283;
reg   [31:0] wo_reg_1295;
reg   [31:0] ko_3_reg_1307;
reg   [159:0] indvar_flatten257_reg_1319;
reg   [127:0] indvar_flatten147_reg_1331;
reg   [95:0] indvar_flatten67_reg_1343;
reg   [63:0] indvar_flatten17_reg_1355;
reg   [31:0] ro_reg_1367;
reg   [31:0] so_reg_1379;
reg   [63:0] ap_phi_mux_indvar_flatten10_phi_fu_1395_p4;
wire    ap_block_pp2_stage0;
reg   [31:0] ap_phi_mux_hi_phi_fu_1406_p4;
reg   [31:0] ap_phi_mux_wi_phi_fu_1417_p4;
reg    grp_runSIMD_fu_1499_ap_start_reg;
reg    grp_output_dram_write_1_fu_1531_ap_start_reg;
reg    grp_runOutputL1toL2_fu_1567_ap_start_reg;
reg    grp_input_dram_read_1_fu_1599_ap_start_reg;
wire    ap_CS_fsm_state114;
reg    grp_runWeight2Reg_fu_1631_ap_start_reg;
reg    grp_weight_dram_read_1_fu_1666_ap_start_reg;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state113;
reg    grp_write_s2mm_1_fu_1700_ap_start_reg;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state69;
reg    grp_write_mm2s_1_fu_1709_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state9;
wire   [63:0] zext_ln523_fu_1883_p1;
wire   [63:0] zext_ln538_fu_2006_p1;
wire   [63:0] idxprom_i_fu_3269_p1;
wire   [63:0] idxprom18_i_fu_3276_p1;
reg    ap_block_state11_io;
wire   [31:0] zext_ln518_fu_1783_p1;
wire   [31:0] zext_ln519_fu_1792_p1;
reg    ap_block_state20_io;
wire   [2:0] signal_fu_452;
wire   [0:0] signal2_fu_456;
wire   [12:0] signal3_fu_460;
reg   [7:0] weight_regfile_0_0_1_fu_496;
reg   [7:0] weight_regfile_0_1_1_fu_500;
reg   [7:0] weight_regfile_0_2_1_fu_504;
reg   [7:0] weight_regfile_0_3_1_fu_508;
reg   [7:0] weight_regfile_1_0_1_fu_512;
reg   [7:0] weight_regfile_1_1_1_fu_516;
reg   [7:0] weight_regfile_1_2_1_fu_520;
reg   [7:0] weight_regfile_1_3_1_fu_524;
reg   [7:0] weight_regfile_2_0_1_fu_528;
reg   [7:0] weight_regfile_2_1_1_fu_532;
reg   [7:0] weight_regfile_2_2_1_fu_536;
reg   [7:0] weight_regfile_2_3_1_fu_540;
reg   [7:0] weight_regfile_3_0_1_fu_544;
reg   [7:0] weight_regfile_3_1_1_fu_548;
reg   [7:0] weight_regfile_3_2_1_fu_552;
reg   [7:0] weight_regfile_3_3_1_fu_556;
wire    ap_block_pp0_stage2_01001;
wire    ap_block_pp0_stage3_01001;
wire    ap_block_pp0_stage0_01001;
wire    ap_block_pp0_stage1_01001;
reg  signed [160:0] grp_fu_1425_p0;
reg  signed [32:0] grp_fu_1425_p1;
wire    ap_block_pp2_stage1;
wire  signed [14:0] sext_ln518_fu_1779_p1;
wire  signed [14:0] sext_ln519_fu_1788_p1;
wire   [13:0] trunc_ln528_fu_1902_p1;
wire   [15:0] zext_ln528_fu_1906_p1;
wire  signed [15:0] addr_fu_1910_p2;
wire  signed [31:0] sext_ln529_fu_1916_p1;
wire   [31:0] trunc_ln548_fu_1949_p0;
wire   [31:0] cast5_fu_1957_p0;
wire   [61:0] icmp_ln538_fu_1974_p1;
wire   [31:0] icmp_ln541_fu_1992_p1;
wire   [29:0] add_ln538_fu_1986_p2;
wire   [11:0] trunc_ln541_fu_2033_p1;
wire   [11:0] add_ln547_fu_2037_p1;
wire   [15:0] addr_1_fu_2043_p3;
wire  signed [31:0] sext_ln548_fu_2050_p1;
wire   [1:0] tmp_data_V_fu_2075_p5;
wire   [31:0] kmo_2_fu_2274_p2;
wire   [0:0] select_ln574_4_fu_2298_p3;
wire   [0:0] select_ln574_5_fu_2303_p3;
wire   [0:0] select_ln576_4_fu_2326_p3;
wire   [13:0] trunc_ln576_fu_2347_p1;
wire   [31:0] cmo_2_fu_2363_p2;
wire   [13:0] trunc_ln576_1_fu_2368_p1;
wire   [13:0] select_ln574_2_fu_2351_p3;
wire   [13:0] trunc_ln578_fu_2379_p1;
wire   [0:0] select_ln574_3_fu_2358_p3;
wire   [31:0] hmo_2_fu_2402_p2;
wire   [13:0] trunc_ln578_1_fu_2424_p1;
wire   [13:0] select_ln576_2_fu_2383_p3;
wire   [0:0] select_ln576_3_fu_2390_p3;
wire   [0:0] or_ln580_fu_2447_p2;
wire   [0:0] select_ln578_4_fu_2435_p3;
wire   [11:0] trunc_ln580_fu_2470_p1;
wire   [13:0] trunc_ln580_1_fu_2474_p1;
wire   [31:0] wmo_2_fu_2496_p2;
wire   [11:0] trunc_ln580_2_fu_2501_p1;
wire   [11:0] select_ln578_2_fu_2482_p3;
wire   [13:0] trunc_ln580_3_fu_2512_p1;
wire   [13:0] select_ln578_3_fu_2489_p3;
wire   [13:0] trunc_ln582_fu_2478_p1;
wire   [0:0] or_ln582_fu_2541_p2;
wire   [0:0] or_ln582_1_fu_2545_p2;
wire   [0:0] or_ln582_2_fu_2550_p2;
wire   [31:0] rmo_2_fu_2536_p2;
wire   [13:0] trunc_ln582_1_fu_2563_p1;
wire   [13:0] select_ln580_3_fu_2523_p3;
wire   [10:0] trunc_ln619_fu_2614_p1;
wire   [31:0] ko_5_fu_2682_p2;
wire   [0:0] select_ln611_5_fu_2710_p3;
wire   [0:0] select_ln611_6_fu_2715_p3;
wire   [0:0] select_ln613_7_fu_2738_p3;
wire   [31:0] co_4_fu_2770_p2;
wire   [9:0] trunc_ln613_3_fu_2779_p1;
wire   [9:0] select_ln611_2_fu_2759_p3;
wire   [0:0] select_ln611_4_fu_2765_p3;
wire   [31:0] ho_2_fu_2802_p2;
wire   [0:0] select_ln613_6_fu_2790_p3;
wire   [0:0] select_ln615_6_fu_2828_p3;
wire   [31:0] wo_2_fu_2846_p2;
wire   [10:0] select_ln613_3_fu_2861_p3;
wire   [10:0] select_ln615_3_fu_2873_p3;
wire   [0:0] or_ln617_fu_2885_p2;
wire   [10:0] select_ln611_3_fu_2902_p3;
wire   [31:0] ro_2_fu_2921_p2;
wire   [11:0] trunc_ln619_3_fu_2930_p1;
wire   [11:0] select_ln617_3_fu_2915_p3;
wire   [10:0] select_ln613_4_fu_2947_p3;
wire   [10:0] select_ln613_5_fu_2953_p3;
wire   [10:0] select_ln615_2_fu_2959_p3;
wire   [10:0] select_ln615_5_fu_2966_p3;
wire   [10:0] tmp1_mid1_fu_2980_p2;
wire   [10:0] select_ln617_4_fu_2973_p3;
wire   [10:0] select_ln615_4_fu_2992_p3;
wire   [0:0] or_ln619_fu_3005_p2;
wire   [0:0] or_ln619_1_fu_3009_p2;
wire   [0:0] or_ln619_2_fu_3014_p2;
wire   [31:0] or_ln631_1_fu_3035_p2;
wire   [31:0] or_ln631_fu_3040_p2;
wire   [10:0] select_ln617_2_fu_2998_p3;
wire   [10:0] trunc_ln621_fu_3027_p1;
wire   [31:0] hi_5_fu_3197_p2;
wire   [10:0] add_ln59_fu_3231_p2;
wire   [31:0] select_ln59_fu_3224_p3;
wire   [7:0] add17_i_fu_3254_p1;
wire   [10:0] tmp4_fu_3259_p2;
reg    grp_fu_1425_ce;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state119;
wire    ap_CS_fsm_state120;
wire    ap_CS_fsm_state121;
wire    ap_CS_fsm_state130;
wire    ap_CS_fsm_state131;
wire    ap_CS_fsm_state132;
reg    grp_fu_2664_ce;
reg    grp_fu_2670_ce;
reg    grp_fu_2676_ce;
reg    grp_fu_3294_ce;
reg    grp_fu_3300_ce;
reg    grp_fu_3306_ce;
wire    ap_CS_fsm_state158;
wire    regslice_both_out_data_V_data_V_U_apdone_blk;
reg   [143:0] ap_NS_fsm;
wire    ap_CS_fsm_state67;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire    regslice_both_in_data_V_data_V_U_apdone_blk;
wire   [7:0] in_data_TDATA_int_regslice;
wire    in_data_TVALID_int_regslice;
reg    in_data_TREADY_int_regslice;
wire    regslice_both_in_data_V_data_V_U_ack_in;
wire    regslice_both_in_data_V_keep_V_U_apdone_blk;
wire   [0:0] in_data_TKEEP_int_regslice;
wire    regslice_both_in_data_V_keep_V_U_vld_out;
wire    regslice_both_in_data_V_keep_V_U_ack_in;
wire    regslice_both_in_data_V_strb_V_U_apdone_blk;
wire   [0:0] in_data_TSTRB_int_regslice;
wire    regslice_both_in_data_V_strb_V_U_vld_out;
wire    regslice_both_in_data_V_strb_V_U_ack_in;
wire    regslice_both_in_data_V_last_V_U_apdone_blk;
wire   [0:0] in_data_TLAST_int_regslice;
wire    regslice_both_in_data_V_last_V_U_vld_out;
wire    regslice_both_in_data_V_last_V_U_ack_in;
reg   [7:0] out_data_TDATA_int_regslice;
reg    out_data_TVALID_int_regslice;
wire    out_data_TREADY_int_regslice;
wire    regslice_both_out_data_V_data_V_U_vld_out;
wire    regslice_both_out_data_V_keep_V_U_apdone_blk;
reg   [0:0] out_data_TKEEP_int_regslice;
wire    regslice_both_out_data_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_data_V_keep_V_U_vld_out;
wire    regslice_both_out_data_V_strb_V_U_apdone_blk;
reg   [0:0] out_data_TSTRB_int_regslice;
wire    regslice_both_out_data_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_data_V_strb_V_U_vld_out;
wire    regslice_both_out_data_V_last_V_U_apdone_blk;
reg   [0:0] out_data_TLAST_int_regslice;
wire    regslice_both_out_data_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_data_V_last_V_U_vld_out;

// power-on initialization
initial begin
#0 ap_CS_fsm = 144'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 grp_runSIMD_fu_1499_ap_start_reg = 1'b0;
#0 grp_output_dram_write_1_fu_1531_ap_start_reg = 1'b0;
#0 grp_runOutputL1toL2_fu_1567_ap_start_reg = 1'b0;
#0 grp_input_dram_read_1_fu_1599_ap_start_reg = 1'b0;
#0 grp_runWeight2Reg_fu_1631_ap_start_reg = 1'b0;
#0 grp_weight_dram_read_1_fu_1666_ap_start_reg = 1'b0;
#0 grp_write_s2mm_1_fu_1700_ap_start_reg = 1'b0;
#0 grp_write_mm2s_1_fu_1709_ap_start_reg = 1'b0;
end

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
bias_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bias_l2_0_address0),
    .ce0(bias_l2_0_ce0),
    .we0(bias_l2_0_we0),
    .d0(in_data_TDATA_int_regslice),
    .q0(bias_l2_0_q0)
);

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
bias_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bias_l2_1_address0),
    .ce0(bias_l2_1_ce0),
    .we0(bias_l2_1_we0),
    .d0(in_data_TDATA_int_regslice),
    .q0(bias_l2_1_q0)
);

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
bias_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bias_l2_2_address0),
    .ce0(bias_l2_2_ce0),
    .we0(bias_l2_2_we0),
    .d0(in_data_TDATA_int_regslice),
    .q0(bias_l2_2_q0)
);

Conv_sysarr_bias_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
bias_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bias_l2_3_address0),
    .ce0(bias_l2_3_ce0),
    .we0(bias_l2_3_we0),
    .d0(in_data_TDATA_int_regslice),
    .q0(bias_l2_3_q0)
);

Conv_sysarr_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
data_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_l2_0_address0),
    .ce0(data_l2_0_ce0),
    .we0(data_l2_0_we0),
    .d0(grp_input_dram_read_1_fu_1599_data_l2_0_d0),
    .q0(data_l2_0_q0)
);

Conv_sysarr_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
data_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_l2_1_address0),
    .ce0(data_l2_1_ce0),
    .we0(data_l2_1_we0),
    .d0(grp_input_dram_read_1_fu_1599_data_l2_1_d0),
    .q0(data_l2_1_q0)
);

Conv_sysarr_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
data_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_l2_2_address0),
    .ce0(data_l2_2_ce0),
    .we0(data_l2_2_we0),
    .d0(grp_input_dram_read_1_fu_1599_data_l2_2_d0),
    .q0(data_l2_2_q0)
);

Conv_sysarr_data_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
data_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_l2_3_address0),
    .ce0(data_l2_3_ce0),
    .we0(data_l2_3_we0),
    .d0(grp_input_dram_read_1_fu_1599_data_l2_3_d0),
    .q0(data_l2_3_q0)
);

Conv_sysarr_runOutputL1toL2_output_l2_reduction_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
output_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_l2_0_address0),
    .ce0(output_l2_0_ce0),
    .we0(output_l2_0_we0),
    .d0(grp_runOutputL1toL2_fu_1567_output_l2_0_d0),
    .q0(output_l2_0_q0),
    .address1(grp_runOutputL1toL2_fu_1567_output_l2_0_address1),
    .ce1(output_l2_0_ce1),
    .we1(output_l2_0_we1),
    .d1(grp_runOutputL1toL2_fu_1567_output_l2_0_d1)
);

Conv_sysarr_runOutputL1toL2_output_l2_reduction_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
output_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_l2_1_address0),
    .ce0(output_l2_1_ce0),
    .we0(output_l2_1_we0),
    .d0(grp_runOutputL1toL2_fu_1567_output_l2_1_d0),
    .q0(output_l2_1_q0),
    .address1(grp_runOutputL1toL2_fu_1567_output_l2_1_address1),
    .ce1(output_l2_1_ce1),
    .we1(output_l2_1_we1),
    .d1(grp_runOutputL1toL2_fu_1567_output_l2_1_d1)
);

Conv_sysarr_runOutputL1toL2_output_l2_reduction_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
output_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_l2_2_address0),
    .ce0(output_l2_2_ce0),
    .we0(output_l2_2_we0),
    .d0(grp_runOutputL1toL2_fu_1567_output_l2_2_d0),
    .q0(output_l2_2_q0),
    .address1(grp_runOutputL1toL2_fu_1567_output_l2_2_address1),
    .ce1(output_l2_2_ce1),
    .we1(output_l2_2_we1),
    .d1(grp_runOutputL1toL2_fu_1567_output_l2_2_d1)
);

Conv_sysarr_output_l2_3 #(
    .DataWidth( 32 ),
    .AddressRange( 1568 ),
    .AddressWidth( 11 ))
output_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_l2_3_address0),
    .ce0(output_l2_3_ce0),
    .we0(output_l2_3_we0),
    .d0(grp_runOutputL1toL2_fu_1567_output_l2_3_d0),
    .q0(output_l2_3_q0)
);

Conv_sysarr_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
weight_l2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_l2_0_address0),
    .ce0(weight_l2_0_ce0),
    .we0(weight_l2_0_we0),
    .d0(grp_weight_dram_read_1_fu_1666_weight_l2_0_d0),
    .q0(weight_l2_0_q0)
);

Conv_sysarr_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
weight_l2_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_l2_1_address0),
    .ce0(weight_l2_1_ce0),
    .we0(weight_l2_1_we0),
    .d0(grp_weight_dram_read_1_fu_1666_weight_l2_1_d0),
    .q0(weight_l2_1_q0)
);

Conv_sysarr_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
weight_l2_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_l2_2_address0),
    .ce0(weight_l2_2_ce0),
    .we0(weight_l2_2_we0),
    .d0(grp_weight_dram_read_1_fu_1666_weight_l2_2_d0),
    .q0(weight_l2_2_q0)
);

Conv_sysarr_weight_l2_0 #(
    .DataWidth( 8 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
weight_l2_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_l2_3_address0),
    .ce0(weight_l2_3_ce0),
    .we0(weight_l2_3_we0),
    .d0(grp_weight_dram_read_1_fu_1666_weight_l2_3_d0),
    .q0(weight_l2_3_q0)
);

Conv_sysarr_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .K(K),
    .C(C),
    .WH(WH),
    .WH_in(WH_in),
    .RS(RS),
    .L2_TILENUM_K(L2_TILENUM_K),
    .L2_TILENUM_C(L2_TILENUM_C),
    .L2_TILENUM_W(L2_TILENUM_W),
    .L2_TILENUM_H(L2_TILENUM_H),
    .L2_TILENUM_R(L2_TILENUM_R),
    .L2_TILENUM_S(L2_TILENUM_S),
    .K_L2(K_L2),
    .C_L2(C_L2),
    .W_L2(W_L2),
    .H_L2(H_L2),
    .W_in_L2(W_in_L2),
    .H_in_L2(H_in_L2),
    .R_L2(R_L2),
    .S_L2(S_L2),
    .L1_TILENUM_K(L1_TILENUM_K),
    .L1_TILENUM_C(L1_TILENUM_C),
    .L1_TILENUM_W(L1_TILENUM_W),
    .L1_TILENUM_H(L1_TILENUM_H),
    .L1_TILENUM_R(L1_TILENUM_R),
    .L1_TILENUM_S(L1_TILENUM_S),
    .K_L1(K_L1),
    .C_L1(C_L1),
    .W_L1(W_L1),
    .H_L1(H_L1),
    .W_in_L1(W_in_L1),
    .H_in_L1(H_in_L1),
    .R_L1(R_L1),
    .S_L1(S_L1),
    .TILESIZE_W(TILESIZE_W),
    .TILESIZE_H(TILESIZE_H),
    .TILESIZE_R(TILESIZE_R),
    .TILESIZE_S(TILESIZE_S),
    .bias_addr(bias_addr),
    .weight_addr(weight_addr),
    .data_addr(data_addr),
    .output_addr(output_addr),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

Conv_sysarr_dma_control_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DMA_CONTROL_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DMA_CONTROL_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DMA_CONTROL_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DMA_CONTROL_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DMA_CONTROL_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DMA_CONTROL_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DMA_CONTROL_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DMA_CONTROL_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_DMA_CONTROL_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_DMA_CONTROL_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DMA_CONTROL_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DMA_CONTROL_CACHE_VALUE ))
dma_control_m_axi_U(
    .AWVALID(m_axi_dma_control_AWVALID),
    .AWREADY(m_axi_dma_control_AWREADY),
    .AWADDR(m_axi_dma_control_AWADDR),
    .AWID(m_axi_dma_control_AWID),
    .AWLEN(m_axi_dma_control_AWLEN),
    .AWSIZE(m_axi_dma_control_AWSIZE),
    .AWBURST(m_axi_dma_control_AWBURST),
    .AWLOCK(m_axi_dma_control_AWLOCK),
    .AWCACHE(m_axi_dma_control_AWCACHE),
    .AWPROT(m_axi_dma_control_AWPROT),
    .AWQOS(m_axi_dma_control_AWQOS),
    .AWREGION(m_axi_dma_control_AWREGION),
    .AWUSER(m_axi_dma_control_AWUSER),
    .WVALID(m_axi_dma_control_WVALID),
    .WREADY(m_axi_dma_control_WREADY),
    .WDATA(m_axi_dma_control_WDATA),
    .WSTRB(m_axi_dma_control_WSTRB),
    .WLAST(m_axi_dma_control_WLAST),
    .WID(m_axi_dma_control_WID),
    .WUSER(m_axi_dma_control_WUSER),
    .ARVALID(m_axi_dma_control_ARVALID),
    .ARREADY(m_axi_dma_control_ARREADY),
    .ARADDR(m_axi_dma_control_ARADDR),
    .ARID(m_axi_dma_control_ARID),
    .ARLEN(m_axi_dma_control_ARLEN),
    .ARSIZE(m_axi_dma_control_ARSIZE),
    .ARBURST(m_axi_dma_control_ARBURST),
    .ARLOCK(m_axi_dma_control_ARLOCK),
    .ARCACHE(m_axi_dma_control_ARCACHE),
    .ARPROT(m_axi_dma_control_ARPROT),
    .ARQOS(m_axi_dma_control_ARQOS),
    .ARREGION(m_axi_dma_control_ARREGION),
    .ARUSER(m_axi_dma_control_ARUSER),
    .RVALID(m_axi_dma_control_RVALID),
    .RREADY(m_axi_dma_control_RREADY),
    .RDATA(m_axi_dma_control_RDATA),
    .RLAST(m_axi_dma_control_RLAST),
    .RID(m_axi_dma_control_RID),
    .RUSER(m_axi_dma_control_RUSER),
    .RRESP(m_axi_dma_control_RRESP),
    .BVALID(m_axi_dma_control_BVALID),
    .BREADY(m_axi_dma_control_BREADY),
    .BRESP(m_axi_dma_control_BRESP),
    .BID(m_axi_dma_control_BID),
    .BUSER(m_axi_dma_control_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(dma_control_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(dma_control_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(dma_control_RDATA),
    .I_RID(dma_control_RID),
    .I_RUSER(dma_control_RUSER),
    .I_RRESP(dma_control_RRESP),
    .I_RLAST(dma_control_RLAST),
    .I_AWVALID(dma_control_AWVALID),
    .I_AWREADY(dma_control_AWREADY),
    .I_AWADDR(dma_control_AWADDR),
    .I_AWID(dma_control_AWID),
    .I_AWLEN(dma_control_AWLEN),
    .I_AWSIZE(dma_control_AWSIZE),
    .I_AWLOCK(dma_control_AWLOCK),
    .I_AWCACHE(dma_control_AWCACHE),
    .I_AWQOS(dma_control_AWQOS),
    .I_AWPROT(dma_control_AWPROT),
    .I_AWUSER(dma_control_AWUSER),
    .I_AWBURST(dma_control_AWBURST),
    .I_AWREGION(dma_control_AWREGION),
    .I_WVALID(dma_control_WVALID),
    .I_WREADY(dma_control_WREADY),
    .I_WDATA(dma_control_WDATA),
    .I_WID(dma_control_WID),
    .I_WUSER(dma_control_WUSER),
    .I_WLAST(dma_control_WLAST),
    .I_WSTRB(dma_control_WSTRB),
    .I_BVALID(dma_control_BVALID),
    .I_BREADY(dma_control_BREADY),
    .I_BRESP(dma_control_BRESP),
    .I_BID(dma_control_BID),
    .I_BUSER(dma_control_BUSER)
);

Conv_sysarr_data_l1_0 #(
    .DataWidth( 8 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
data_l1_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_l1_0_address0),
    .ce0(data_l1_0_ce0),
    .we0(data_l1_0_we0),
    .d0(data_l2_0_load_reg_4971),
    .q0(data_l1_0_q0)
);

Conv_sysarr_data_l1_0 #(
    .DataWidth( 8 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
data_l1_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_l1_1_address0),
    .ce0(data_l1_1_ce0),
    .we0(data_l1_1_we0),
    .d0(data_l2_1_load_reg_4976),
    .q0(data_l1_1_q0)
);

Conv_sysarr_data_l1_0 #(
    .DataWidth( 8 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
data_l1_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_l1_2_address0),
    .ce0(data_l1_2_ce0),
    .we0(data_l1_2_we0),
    .d0(data_l2_2_load_reg_4981),
    .q0(data_l1_2_q0)
);

Conv_sysarr_data_l1_0 #(
    .DataWidth( 8 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
data_l1_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_l1_3_address0),
    .ce0(data_l1_3_ce0),
    .we0(data_l1_3_we0),
    .d0(data_l2_3_load_reg_4986),
    .q0(data_l1_3_q0)
);

Conv_sysarr_output_l1_0 #(
    .DataWidth( 18 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
output_l1_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_l1_0_address0),
    .ce0(output_l1_0_ce0),
    .we0(output_l1_0_we0),
    .d0(grp_runSIMD_fu_1499_output_l1_d0),
    .q0(output_l1_0_q0)
);

Conv_sysarr_output_l1_0 #(
    .DataWidth( 18 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
output_l1_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_l1_1_address0),
    .ce0(output_l1_1_ce0),
    .we0(output_l1_1_we0),
    .d0(grp_runSIMD_fu_1499_output_l17_d0),
    .q0(output_l1_1_q0)
);

Conv_sysarr_output_l1_0 #(
    .DataWidth( 18 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
output_l1_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_l1_2_address0),
    .ce0(output_l1_2_ce0),
    .we0(output_l1_2_we0),
    .d0(grp_runSIMD_fu_1499_output_l18_d0),
    .q0(output_l1_2_q0)
);

Conv_sysarr_output_l1_0 #(
    .DataWidth( 18 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
output_l1_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_l1_3_address0),
    .ce0(output_l1_3_ce0),
    .we0(output_l1_3_we0),
    .d0(grp_runSIMD_fu_1499_output_l19_d0),
    .q0(output_l1_3_q0)
);

Conv_sysarr_runSIMD grp_runSIMD_fu_1499(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_runSIMD_fu_1499_ap_start),
    .ap_done(grp_runSIMD_fu_1499_ap_done),
    .ap_idle(grp_runSIMD_fu_1499_ap_idle),
    .ap_ready(grp_runSIMD_fu_1499_ap_ready),
    .p_read(weight_regfile_0_0_reg_4796),
    .p_read1(weight_regfile_0_1_reg_4802),
    .p_read2(weight_regfile_0_2_reg_4808),
    .p_read3(weight_regfile_0_3_reg_4814),
    .p_read4(weight_regfile_1_0_reg_4820),
    .p_read5(weight_regfile_1_1_reg_4826),
    .p_read6(weight_regfile_1_2_reg_4832),
    .p_read7(weight_regfile_1_3_reg_4838),
    .p_read8(weight_regfile_2_0_reg_4844),
    .p_read9(weight_regfile_2_1_reg_4850),
    .p_read10(weight_regfile_2_2_reg_4856),
    .p_read11(weight_regfile_2_3_reg_4862),
    .p_read12(weight_regfile_3_0_reg_4868),
    .p_read13(weight_regfile_3_1_reg_4874),
    .p_read14(weight_regfile_3_2_reg_4880),
    .p_read15(weight_regfile_3_3_reg_4886),
    .data_l1_address0(grp_runSIMD_fu_1499_data_l1_address0),
    .data_l1_ce0(grp_runSIMD_fu_1499_data_l1_ce0),
    .data_l1_q0(data_l1_0_q0),
    .data_l14_address0(grp_runSIMD_fu_1499_data_l14_address0),
    .data_l14_ce0(grp_runSIMD_fu_1499_data_l14_ce0),
    .data_l14_q0(data_l1_1_q0),
    .data_l15_address0(grp_runSIMD_fu_1499_data_l15_address0),
    .data_l15_ce0(grp_runSIMD_fu_1499_data_l15_ce0),
    .data_l15_q0(data_l1_2_q0),
    .data_l16_address0(grp_runSIMD_fu_1499_data_l16_address0),
    .data_l16_ce0(grp_runSIMD_fu_1499_data_l16_ce0),
    .data_l16_q0(data_l1_3_q0),
    .output_l1_address0(grp_runSIMD_fu_1499_output_l1_address0),
    .output_l1_ce0(grp_runSIMD_fu_1499_output_l1_ce0),
    .output_l1_we0(grp_runSIMD_fu_1499_output_l1_we0),
    .output_l1_d0(grp_runSIMD_fu_1499_output_l1_d0),
    .output_l17_address0(grp_runSIMD_fu_1499_output_l17_address0),
    .output_l17_ce0(grp_runSIMD_fu_1499_output_l17_ce0),
    .output_l17_we0(grp_runSIMD_fu_1499_output_l17_we0),
    .output_l17_d0(grp_runSIMD_fu_1499_output_l17_d0),
    .output_l18_address0(grp_runSIMD_fu_1499_output_l18_address0),
    .output_l18_ce0(grp_runSIMD_fu_1499_output_l18_ce0),
    .output_l18_we0(grp_runSIMD_fu_1499_output_l18_we0),
    .output_l18_d0(grp_runSIMD_fu_1499_output_l18_d0),
    .output_l19_address0(grp_runSIMD_fu_1499_output_l19_address0),
    .output_l19_ce0(grp_runSIMD_fu_1499_output_l19_ce0),
    .output_l19_we0(grp_runSIMD_fu_1499_output_l19_we0),
    .output_l19_d0(grp_runSIMD_fu_1499_output_l19_d0),
    .TILESIZE_H(TILESIZE_H_read_reg_3504),
    .TILESIZE_W(TILESIZE_W_read_reg_3511),
    .TILESIZE_R(TILESIZE_R_read_reg_3499),
    .TILESIZE_S(TILESIZE_S_read_reg_3494)
);

Conv_sysarr_output_dram_write_1 grp_output_dram_write_1_fu_1531(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_output_dram_write_1_fu_1531_ap_start),
    .ap_done(grp_output_dram_write_1_fu_1531_ap_done),
    .ap_idle(grp_output_dram_write_1_fu_1531_ap_idle),
    .ap_ready(grp_output_dram_write_1_fu_1531_ap_ready),
    .m_axi_dma_control_AWVALID(grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWVALID),
    .m_axi_dma_control_AWREADY(dma_control_AWREADY),
    .m_axi_dma_control_AWADDR(grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWADDR),
    .m_axi_dma_control_AWID(grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWID),
    .m_axi_dma_control_AWLEN(grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWLEN),
    .m_axi_dma_control_AWSIZE(grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWSIZE),
    .m_axi_dma_control_AWBURST(grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWBURST),
    .m_axi_dma_control_AWLOCK(grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWLOCK),
    .m_axi_dma_control_AWCACHE(grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWCACHE),
    .m_axi_dma_control_AWPROT(grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWPROT),
    .m_axi_dma_control_AWQOS(grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWQOS),
    .m_axi_dma_control_AWREGION(grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWREGION),
    .m_axi_dma_control_AWUSER(grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWUSER),
    .m_axi_dma_control_WVALID(grp_output_dram_write_1_fu_1531_m_axi_dma_control_WVALID),
    .m_axi_dma_control_WREADY(dma_control_WREADY),
    .m_axi_dma_control_WDATA(grp_output_dram_write_1_fu_1531_m_axi_dma_control_WDATA),
    .m_axi_dma_control_WSTRB(grp_output_dram_write_1_fu_1531_m_axi_dma_control_WSTRB),
    .m_axi_dma_control_WLAST(grp_output_dram_write_1_fu_1531_m_axi_dma_control_WLAST),
    .m_axi_dma_control_WID(grp_output_dram_write_1_fu_1531_m_axi_dma_control_WID),
    .m_axi_dma_control_WUSER(grp_output_dram_write_1_fu_1531_m_axi_dma_control_WUSER),
    .m_axi_dma_control_ARVALID(grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARVALID),
    .m_axi_dma_control_ARREADY(1'b0),
    .m_axi_dma_control_ARADDR(grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARADDR),
    .m_axi_dma_control_ARID(grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARID),
    .m_axi_dma_control_ARLEN(grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARLEN),
    .m_axi_dma_control_ARSIZE(grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARSIZE),
    .m_axi_dma_control_ARBURST(grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARBURST),
    .m_axi_dma_control_ARLOCK(grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARLOCK),
    .m_axi_dma_control_ARCACHE(grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARCACHE),
    .m_axi_dma_control_ARPROT(grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARPROT),
    .m_axi_dma_control_ARQOS(grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARQOS),
    .m_axi_dma_control_ARREGION(grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARREGION),
    .m_axi_dma_control_ARUSER(grp_output_dram_write_1_fu_1531_m_axi_dma_control_ARUSER),
    .m_axi_dma_control_RVALID(1'b0),
    .m_axi_dma_control_RREADY(grp_output_dram_write_1_fu_1531_m_axi_dma_control_RREADY),
    .m_axi_dma_control_RDATA(32'd0),
    .m_axi_dma_control_RLAST(1'b0),
    .m_axi_dma_control_RID(1'd0),
    .m_axi_dma_control_RUSER(1'd0),
    .m_axi_dma_control_RRESP(2'd0),
    .m_axi_dma_control_BVALID(dma_control_BVALID),
    .m_axi_dma_control_BREADY(grp_output_dram_write_1_fu_1531_m_axi_dma_control_BREADY),
    .m_axi_dma_control_BRESP(dma_control_BRESP),
    .m_axi_dma_control_BID(dma_control_BID),
    .m_axi_dma_control_BUSER(dma_control_BUSER),
    .output_addr(output_addr_read_reg_3473),
    .in_data_TDATA(in_data_TDATA_int_regslice),
    .in_data_TVALID(in_data_TVALID_int_regslice),
    .in_data_TREADY(grp_output_dram_write_1_fu_1531_in_data_TREADY),
    .in_data_TKEEP(in_data_TKEEP_int_regslice),
    .in_data_TSTRB(in_data_TSTRB_int_regslice),
    .in_data_TLAST(in_data_TLAST_int_regslice),
    .out_data_TDATA(grp_output_dram_write_1_fu_1531_out_data_TDATA),
    .out_data_TVALID(grp_output_dram_write_1_fu_1531_out_data_TVALID),
    .out_data_TREADY(grp_output_dram_write_1_fu_1531_out_data_TREADY),
    .out_data_TKEEP(grp_output_dram_write_1_fu_1531_out_data_TKEEP),
    .out_data_TSTRB(grp_output_dram_write_1_fu_1531_out_data_TSTRB),
    .out_data_TLAST(grp_output_dram_write_1_fu_1531_out_data_TLAST),
    .out_responsed(out_responsed),
    .wmo(select_ln580_1_reg_4379),
    .K_L2(K_L2_read_reg_3587),
    .H_L2(H_L2_read_reg_3571),
    .W_L2(W_L2_read_reg_3576),
    .output_l2_0_address0(grp_output_dram_write_1_fu_1531_output_l2_0_address0),
    .output_l2_0_ce0(grp_output_dram_write_1_fu_1531_output_l2_0_ce0),
    .output_l2_0_q0(output_l2_0_q0),
    .output_l2_1_address0(grp_output_dram_write_1_fu_1531_output_l2_1_address0),
    .output_l2_1_ce0(grp_output_dram_write_1_fu_1531_output_l2_1_ce0),
    .output_l2_1_q0(output_l2_1_q0),
    .output_l2_2_address0(grp_output_dram_write_1_fu_1531_output_l2_2_address0),
    .output_l2_2_ce0(grp_output_dram_write_1_fu_1531_output_l2_2_ce0),
    .output_l2_2_q0(output_l2_2_q0),
    .output_l2_3_address0(grp_output_dram_write_1_fu_1531_output_l2_3_address0),
    .output_l2_3_ce0(grp_output_dram_write_1_fu_1531_output_l2_3_ce0),
    .output_l2_3_q0(output_l2_3_q0)
);

Conv_sysarr_runOutputL1toL2 grp_runOutputL1toL2_fu_1567(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_runOutputL1toL2_fu_1567_ap_start),
    .ap_done(grp_runOutputL1toL2_fu_1567_ap_done),
    .ap_idle(grp_runOutputL1toL2_fu_1567_ap_idle),
    .ap_ready(grp_runOutputL1toL2_fu_1567_ap_ready),
    .output_l1_address0(grp_runOutputL1toL2_fu_1567_output_l1_address0),
    .output_l1_ce0(grp_runOutputL1toL2_fu_1567_output_l1_ce0),
    .output_l1_q0(output_l1_0_q0),
    .output_l11_address0(grp_runOutputL1toL2_fu_1567_output_l11_address0),
    .output_l11_ce0(grp_runOutputL1toL2_fu_1567_output_l11_ce0),
    .output_l11_q0(output_l1_1_q0),
    .output_l12_address0(grp_runOutputL1toL2_fu_1567_output_l12_address0),
    .output_l12_ce0(grp_runOutputL1toL2_fu_1567_output_l12_ce0),
    .output_l12_q0(output_l1_2_q0),
    .output_l13_address0(grp_runOutputL1toL2_fu_1567_output_l13_address0),
    .output_l13_ce0(grp_runOutputL1toL2_fu_1567_output_l13_ce0),
    .output_l13_q0(output_l1_3_q0),
    .TILESIZE_H(TILESIZE_H_read_reg_3504),
    .TILESIZE_W(TILESIZE_W_read_reg_3511),
    .ko(trunc_ln611_reg_4523),
    .ho(select_ln615_1_reg_4643),
    .wo(select_ln617_1_reg_4648),
    .W(empty_128_reg_3646),
    .H(empty_127_reg_3641),
    .isFirst(isFirst_reg_4706),
    .output_l2_0_address0(grp_runOutputL1toL2_fu_1567_output_l2_0_address0),
    .output_l2_0_ce0(grp_runOutputL1toL2_fu_1567_output_l2_0_ce0),
    .output_l2_0_we0(grp_runOutputL1toL2_fu_1567_output_l2_0_we0),
    .output_l2_0_d0(grp_runOutputL1toL2_fu_1567_output_l2_0_d0),
    .output_l2_0_address1(grp_runOutputL1toL2_fu_1567_output_l2_0_address1),
    .output_l2_0_ce1(grp_runOutputL1toL2_fu_1567_output_l2_0_ce1),
    .output_l2_0_we1(grp_runOutputL1toL2_fu_1567_output_l2_0_we1),
    .output_l2_0_d1(grp_runOutputL1toL2_fu_1567_output_l2_0_d1),
    .output_l2_1_address0(grp_runOutputL1toL2_fu_1567_output_l2_1_address0),
    .output_l2_1_ce0(grp_runOutputL1toL2_fu_1567_output_l2_1_ce0),
    .output_l2_1_we0(grp_runOutputL1toL2_fu_1567_output_l2_1_we0),
    .output_l2_1_d0(grp_runOutputL1toL2_fu_1567_output_l2_1_d0),
    .output_l2_1_address1(grp_runOutputL1toL2_fu_1567_output_l2_1_address1),
    .output_l2_1_ce1(grp_runOutputL1toL2_fu_1567_output_l2_1_ce1),
    .output_l2_1_we1(grp_runOutputL1toL2_fu_1567_output_l2_1_we1),
    .output_l2_1_d1(grp_runOutputL1toL2_fu_1567_output_l2_1_d1),
    .output_l2_2_address0(grp_runOutputL1toL2_fu_1567_output_l2_2_address0),
    .output_l2_2_ce0(grp_runOutputL1toL2_fu_1567_output_l2_2_ce0),
    .output_l2_2_we0(grp_runOutputL1toL2_fu_1567_output_l2_2_we0),
    .output_l2_2_d0(grp_runOutputL1toL2_fu_1567_output_l2_2_d0),
    .output_l2_2_address1(grp_runOutputL1toL2_fu_1567_output_l2_2_address1),
    .output_l2_2_ce1(grp_runOutputL1toL2_fu_1567_output_l2_2_ce1),
    .output_l2_2_we1(grp_runOutputL1toL2_fu_1567_output_l2_2_we1),
    .output_l2_2_d1(grp_runOutputL1toL2_fu_1567_output_l2_2_d1),
    .output_l2_3_address0(grp_runOutputL1toL2_fu_1567_output_l2_3_address0),
    .output_l2_3_ce0(grp_runOutputL1toL2_fu_1567_output_l2_3_ce0),
    .output_l2_3_we0(grp_runOutputL1toL2_fu_1567_output_l2_3_we0),
    .output_l2_3_d0(grp_runOutputL1toL2_fu_1567_output_l2_3_d0)
);

Conv_sysarr_input_dram_read_1 grp_input_dram_read_1_fu_1599(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_input_dram_read_1_fu_1599_ap_start),
    .ap_done(grp_input_dram_read_1_fu_1599_ap_done),
    .ap_idle(grp_input_dram_read_1_fu_1599_ap_idle),
    .ap_ready(grp_input_dram_read_1_fu_1599_ap_ready),
    .m_axi_dma_control_AWVALID(grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWVALID),
    .m_axi_dma_control_AWREADY(dma_control_AWREADY),
    .m_axi_dma_control_AWADDR(grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWADDR),
    .m_axi_dma_control_AWID(grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWID),
    .m_axi_dma_control_AWLEN(grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWLEN),
    .m_axi_dma_control_AWSIZE(grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWSIZE),
    .m_axi_dma_control_AWBURST(grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWBURST),
    .m_axi_dma_control_AWLOCK(grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWLOCK),
    .m_axi_dma_control_AWCACHE(grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWCACHE),
    .m_axi_dma_control_AWPROT(grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWPROT),
    .m_axi_dma_control_AWQOS(grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWQOS),
    .m_axi_dma_control_AWREGION(grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWREGION),
    .m_axi_dma_control_AWUSER(grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWUSER),
    .m_axi_dma_control_WVALID(grp_input_dram_read_1_fu_1599_m_axi_dma_control_WVALID),
    .m_axi_dma_control_WREADY(dma_control_WREADY),
    .m_axi_dma_control_WDATA(grp_input_dram_read_1_fu_1599_m_axi_dma_control_WDATA),
    .m_axi_dma_control_WSTRB(grp_input_dram_read_1_fu_1599_m_axi_dma_control_WSTRB),
    .m_axi_dma_control_WLAST(grp_input_dram_read_1_fu_1599_m_axi_dma_control_WLAST),
    .m_axi_dma_control_WID(grp_input_dram_read_1_fu_1599_m_axi_dma_control_WID),
    .m_axi_dma_control_WUSER(grp_input_dram_read_1_fu_1599_m_axi_dma_control_WUSER),
    .m_axi_dma_control_ARVALID(grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARVALID),
    .m_axi_dma_control_ARREADY(1'b0),
    .m_axi_dma_control_ARADDR(grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARADDR),
    .m_axi_dma_control_ARID(grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARID),
    .m_axi_dma_control_ARLEN(grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARLEN),
    .m_axi_dma_control_ARSIZE(grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARSIZE),
    .m_axi_dma_control_ARBURST(grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARBURST),
    .m_axi_dma_control_ARLOCK(grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARLOCK),
    .m_axi_dma_control_ARCACHE(grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARCACHE),
    .m_axi_dma_control_ARPROT(grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARPROT),
    .m_axi_dma_control_ARQOS(grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARQOS),
    .m_axi_dma_control_ARREGION(grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARREGION),
    .m_axi_dma_control_ARUSER(grp_input_dram_read_1_fu_1599_m_axi_dma_control_ARUSER),
    .m_axi_dma_control_RVALID(1'b0),
    .m_axi_dma_control_RREADY(grp_input_dram_read_1_fu_1599_m_axi_dma_control_RREADY),
    .m_axi_dma_control_RDATA(32'd0),
    .m_axi_dma_control_RLAST(1'b0),
    .m_axi_dma_control_RID(1'd0),
    .m_axi_dma_control_RUSER(1'd0),
    .m_axi_dma_control_RRESP(2'd0),
    .m_axi_dma_control_BVALID(dma_control_BVALID),
    .m_axi_dma_control_BREADY(grp_input_dram_read_1_fu_1599_m_axi_dma_control_BREADY),
    .m_axi_dma_control_BRESP(dma_control_BRESP),
    .m_axi_dma_control_BID(dma_control_BID),
    .m_axi_dma_control_BUSER(dma_control_BUSER),
    .data_addr(data_addr_read_reg_3479),
    .in_data_TDATA(in_data_TDATA_int_regslice),
    .in_data_TVALID(in_data_TVALID_int_regslice),
    .in_data_TREADY(grp_input_dram_read_1_fu_1599_in_data_TREADY),
    .in_data_TKEEP(in_data_TKEEP_int_regslice),
    .in_data_TSTRB(in_data_TSTRB_int_regslice),
    .in_data_TLAST(in_data_TLAST_int_regslice),
    .cmo(select_ln576_1_reg_4321),
    .hmo(select_ln578_1_reg_4350),
    .wmo(select_ln580_2_reg_4384),
    .C_L2(C_L2_read_reg_3581),
    .H_L2(empty_137_reg_3691),
    .W_L2(empty_136_reg_3686),
    .H_in_L2(H_in_L2_read_reg_3561),
    .W_in_L2(W_in_L2_read_reg_3566),
    .WH_in(empty_135_reg_3681),
    .data_l2_0_address0(grp_input_dram_read_1_fu_1599_data_l2_0_address0),
    .data_l2_0_ce0(grp_input_dram_read_1_fu_1599_data_l2_0_ce0),
    .data_l2_0_we0(grp_input_dram_read_1_fu_1599_data_l2_0_we0),
    .data_l2_0_d0(grp_input_dram_read_1_fu_1599_data_l2_0_d0),
    .data_l2_1_address0(grp_input_dram_read_1_fu_1599_data_l2_1_address0),
    .data_l2_1_ce0(grp_input_dram_read_1_fu_1599_data_l2_1_ce0),
    .data_l2_1_we0(grp_input_dram_read_1_fu_1599_data_l2_1_we0),
    .data_l2_1_d0(grp_input_dram_read_1_fu_1599_data_l2_1_d0),
    .data_l2_2_address0(grp_input_dram_read_1_fu_1599_data_l2_2_address0),
    .data_l2_2_ce0(grp_input_dram_read_1_fu_1599_data_l2_2_ce0),
    .data_l2_2_we0(grp_input_dram_read_1_fu_1599_data_l2_2_we0),
    .data_l2_2_d0(grp_input_dram_read_1_fu_1599_data_l2_2_d0),
    .data_l2_3_address0(grp_input_dram_read_1_fu_1599_data_l2_3_address0),
    .data_l2_3_ce0(grp_input_dram_read_1_fu_1599_data_l2_3_ce0),
    .data_l2_3_we0(grp_input_dram_read_1_fu_1599_data_l2_3_we0),
    .data_l2_3_d0(grp_input_dram_read_1_fu_1599_data_l2_3_d0)
);

Conv_sysarr_runWeight2Reg grp_runWeight2Reg_fu_1631(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_runWeight2Reg_fu_1631_ap_start),
    .ap_done(grp_runWeight2Reg_fu_1631_ap_done),
    .ap_idle(grp_runWeight2Reg_fu_1631_ap_idle),
    .ap_ready(grp_runWeight2Reg_fu_1631_ap_ready),
    .p_read(weight_regfile_0_0_1_fu_496),
    .p_read1(weight_regfile_0_1_1_fu_500),
    .p_read2(weight_regfile_0_2_1_fu_504),
    .p_read3(weight_regfile_0_3_1_fu_508),
    .p_read4(weight_regfile_1_0_1_fu_512),
    .p_read5(weight_regfile_1_1_1_fu_516),
    .p_read6(weight_regfile_1_2_1_fu_520),
    .p_read7(weight_regfile_1_3_1_fu_524),
    .p_read8(weight_regfile_2_0_1_fu_528),
    .p_read9(weight_regfile_2_1_1_fu_532),
    .p_read10(weight_regfile_2_2_1_fu_536),
    .p_read11(weight_regfile_2_3_1_fu_540),
    .p_read12(weight_regfile_3_0_1_fu_544),
    .p_read13(weight_regfile_3_1_1_fu_548),
    .p_read14(weight_regfile_3_2_1_fu_552),
    .p_read15(weight_regfile_3_3_1_fu_556),
    .C(empty_134_reg_3676),
    .R(empty_133_reg_3671),
    .S(empty_132_reg_3666),
    .ko(trunc_ln611_1_reg_4528),
    .co(select_ln613_1_reg_4584),
    .r_r(select_ln619_1_reg_4680),
    .s_r(trunc_ln621_1_reg_4701),
    .weight_l2_0_address0(grp_runWeight2Reg_fu_1631_weight_l2_0_address0),
    .weight_l2_0_ce0(grp_runWeight2Reg_fu_1631_weight_l2_0_ce0),
    .weight_l2_0_q0(weight_l2_0_q0),
    .weight_l2_1_address0(grp_runWeight2Reg_fu_1631_weight_l2_1_address0),
    .weight_l2_1_ce0(grp_runWeight2Reg_fu_1631_weight_l2_1_ce0),
    .weight_l2_1_q0(weight_l2_1_q0),
    .weight_l2_2_address0(grp_runWeight2Reg_fu_1631_weight_l2_2_address0),
    .weight_l2_2_ce0(grp_runWeight2Reg_fu_1631_weight_l2_2_ce0),
    .weight_l2_2_q0(weight_l2_2_q0),
    .weight_l2_3_address0(grp_runWeight2Reg_fu_1631_weight_l2_3_address0),
    .weight_l2_3_ce0(grp_runWeight2Reg_fu_1631_weight_l2_3_ce0),
    .weight_l2_3_q0(weight_l2_3_q0),
    .ap_return_0(grp_runWeight2Reg_fu_1631_ap_return_0),
    .ap_return_1(grp_runWeight2Reg_fu_1631_ap_return_1),
    .ap_return_2(grp_runWeight2Reg_fu_1631_ap_return_2),
    .ap_return_3(grp_runWeight2Reg_fu_1631_ap_return_3),
    .ap_return_4(grp_runWeight2Reg_fu_1631_ap_return_4),
    .ap_return_5(grp_runWeight2Reg_fu_1631_ap_return_5),
    .ap_return_6(grp_runWeight2Reg_fu_1631_ap_return_6),
    .ap_return_7(grp_runWeight2Reg_fu_1631_ap_return_7),
    .ap_return_8(grp_runWeight2Reg_fu_1631_ap_return_8),
    .ap_return_9(grp_runWeight2Reg_fu_1631_ap_return_9),
    .ap_return_10(grp_runWeight2Reg_fu_1631_ap_return_10),
    .ap_return_11(grp_runWeight2Reg_fu_1631_ap_return_11),
    .ap_return_12(grp_runWeight2Reg_fu_1631_ap_return_12),
    .ap_return_13(grp_runWeight2Reg_fu_1631_ap_return_13),
    .ap_return_14(grp_runWeight2Reg_fu_1631_ap_return_14),
    .ap_return_15(grp_runWeight2Reg_fu_1631_ap_return_15)
);

Conv_sysarr_weight_dram_read_1 grp_weight_dram_read_1_fu_1666(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_weight_dram_read_1_fu_1666_ap_start),
    .ap_done(grp_weight_dram_read_1_fu_1666_ap_done),
    .ap_idle(grp_weight_dram_read_1_fu_1666_ap_idle),
    .ap_ready(grp_weight_dram_read_1_fu_1666_ap_ready),
    .m_axi_dma_control_AWVALID(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWVALID),
    .m_axi_dma_control_AWREADY(dma_control_AWREADY),
    .m_axi_dma_control_AWADDR(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWADDR),
    .m_axi_dma_control_AWID(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWID),
    .m_axi_dma_control_AWLEN(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWLEN),
    .m_axi_dma_control_AWSIZE(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWSIZE),
    .m_axi_dma_control_AWBURST(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWBURST),
    .m_axi_dma_control_AWLOCK(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWLOCK),
    .m_axi_dma_control_AWCACHE(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWCACHE),
    .m_axi_dma_control_AWPROT(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWPROT),
    .m_axi_dma_control_AWQOS(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWQOS),
    .m_axi_dma_control_AWREGION(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWREGION),
    .m_axi_dma_control_AWUSER(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWUSER),
    .m_axi_dma_control_WVALID(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WVALID),
    .m_axi_dma_control_WREADY(dma_control_WREADY),
    .m_axi_dma_control_WDATA(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WDATA),
    .m_axi_dma_control_WSTRB(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WSTRB),
    .m_axi_dma_control_WLAST(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WLAST),
    .m_axi_dma_control_WID(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WID),
    .m_axi_dma_control_WUSER(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WUSER),
    .m_axi_dma_control_ARVALID(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARVALID),
    .m_axi_dma_control_ARREADY(1'b0),
    .m_axi_dma_control_ARADDR(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARADDR),
    .m_axi_dma_control_ARID(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARID),
    .m_axi_dma_control_ARLEN(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARLEN),
    .m_axi_dma_control_ARSIZE(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARSIZE),
    .m_axi_dma_control_ARBURST(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARBURST),
    .m_axi_dma_control_ARLOCK(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARLOCK),
    .m_axi_dma_control_ARCACHE(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARCACHE),
    .m_axi_dma_control_ARPROT(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARPROT),
    .m_axi_dma_control_ARQOS(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARQOS),
    .m_axi_dma_control_ARREGION(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARREGION),
    .m_axi_dma_control_ARUSER(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_ARUSER),
    .m_axi_dma_control_RVALID(1'b0),
    .m_axi_dma_control_RREADY(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_RREADY),
    .m_axi_dma_control_RDATA(32'd0),
    .m_axi_dma_control_RLAST(1'b0),
    .m_axi_dma_control_RID(1'd0),
    .m_axi_dma_control_RUSER(1'd0),
    .m_axi_dma_control_RRESP(2'd0),
    .m_axi_dma_control_BVALID(dma_control_BVALID),
    .m_axi_dma_control_BREADY(grp_weight_dram_read_1_fu_1666_m_axi_dma_control_BREADY),
    .m_axi_dma_control_BRESP(dma_control_BRESP),
    .m_axi_dma_control_BID(dma_control_BID),
    .m_axi_dma_control_BUSER(dma_control_BUSER),
    .weight_addr(weight_addr_read_reg_3484),
    .in_data_TDATA(in_data_TDATA_int_regslice),
    .in_data_TVALID(in_data_TVALID_int_regslice),
    .in_data_TREADY(grp_weight_dram_read_1_fu_1666_in_data_TREADY),
    .in_data_TKEEP(in_data_TKEEP_int_regslice),
    .in_data_TSTRB(in_data_TSTRB_int_regslice),
    .in_data_TLAST(in_data_TLAST_int_regslice),
    .kmo(trunc_ln574_reg_4276),
    .cmo(select_ln576_1_reg_4321),
    .rmo(select_ln582_1_reg_4399),
    .smo(trunc_ln584_reg_4409),
    .K_L2(K_L2_read_reg_3587),
    .C_L2(C_L2_read_reg_3581),
    .R_L2(R_L2_read_reg_3556),
    .S_L2(S_L2_read_reg_3551),
    .L2_TILENUM_C(empty_140_reg_3706),
    .L2_TILENUM_R(empty_139_reg_3701),
    .L2_TILENUM_S(empty_138_reg_3696),
    .weight_l2_0_address0(grp_weight_dram_read_1_fu_1666_weight_l2_0_address0),
    .weight_l2_0_ce0(grp_weight_dram_read_1_fu_1666_weight_l2_0_ce0),
    .weight_l2_0_we0(grp_weight_dram_read_1_fu_1666_weight_l2_0_we0),
    .weight_l2_0_d0(grp_weight_dram_read_1_fu_1666_weight_l2_0_d0),
    .weight_l2_1_address0(grp_weight_dram_read_1_fu_1666_weight_l2_1_address0),
    .weight_l2_1_ce0(grp_weight_dram_read_1_fu_1666_weight_l2_1_ce0),
    .weight_l2_1_we0(grp_weight_dram_read_1_fu_1666_weight_l2_1_we0),
    .weight_l2_1_d0(grp_weight_dram_read_1_fu_1666_weight_l2_1_d0),
    .weight_l2_2_address0(grp_weight_dram_read_1_fu_1666_weight_l2_2_address0),
    .weight_l2_2_ce0(grp_weight_dram_read_1_fu_1666_weight_l2_2_ce0),
    .weight_l2_2_we0(grp_weight_dram_read_1_fu_1666_weight_l2_2_we0),
    .weight_l2_2_d0(grp_weight_dram_read_1_fu_1666_weight_l2_2_d0),
    .weight_l2_3_address0(grp_weight_dram_read_1_fu_1666_weight_l2_3_address0),
    .weight_l2_3_ce0(grp_weight_dram_read_1_fu_1666_weight_l2_3_ce0),
    .weight_l2_3_we0(grp_weight_dram_read_1_fu_1666_weight_l2_3_we0),
    .weight_l2_3_d0(grp_weight_dram_read_1_fu_1666_weight_l2_3_d0)
);

Conv_sysarr_write_s2mm_1 grp_write_s2mm_1_fu_1700(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_write_s2mm_1_fu_1700_ap_start),
    .ap_done(grp_write_s2mm_1_fu_1700_ap_done),
    .ap_idle(grp_write_s2mm_1_fu_1700_ap_idle),
    .ap_ready(grp_write_s2mm_1_fu_1700_ap_ready),
    .m_axi_dma_control_AWVALID(grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWVALID),
    .m_axi_dma_control_AWREADY(dma_control_AWREADY),
    .m_axi_dma_control_AWADDR(grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWADDR),
    .m_axi_dma_control_AWID(grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWID),
    .m_axi_dma_control_AWLEN(grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWLEN),
    .m_axi_dma_control_AWSIZE(grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWSIZE),
    .m_axi_dma_control_AWBURST(grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWBURST),
    .m_axi_dma_control_AWLOCK(grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWLOCK),
    .m_axi_dma_control_AWCACHE(grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWCACHE),
    .m_axi_dma_control_AWPROT(grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWPROT),
    .m_axi_dma_control_AWQOS(grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWQOS),
    .m_axi_dma_control_AWREGION(grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWREGION),
    .m_axi_dma_control_AWUSER(grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWUSER),
    .m_axi_dma_control_WVALID(grp_write_s2mm_1_fu_1700_m_axi_dma_control_WVALID),
    .m_axi_dma_control_WREADY(dma_control_WREADY),
    .m_axi_dma_control_WDATA(grp_write_s2mm_1_fu_1700_m_axi_dma_control_WDATA),
    .m_axi_dma_control_WSTRB(grp_write_s2mm_1_fu_1700_m_axi_dma_control_WSTRB),
    .m_axi_dma_control_WLAST(grp_write_s2mm_1_fu_1700_m_axi_dma_control_WLAST),
    .m_axi_dma_control_WID(grp_write_s2mm_1_fu_1700_m_axi_dma_control_WID),
    .m_axi_dma_control_WUSER(grp_write_s2mm_1_fu_1700_m_axi_dma_control_WUSER),
    .m_axi_dma_control_ARVALID(grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARVALID),
    .m_axi_dma_control_ARREADY(1'b0),
    .m_axi_dma_control_ARADDR(grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARADDR),
    .m_axi_dma_control_ARID(grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARID),
    .m_axi_dma_control_ARLEN(grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARLEN),
    .m_axi_dma_control_ARSIZE(grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARSIZE),
    .m_axi_dma_control_ARBURST(grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARBURST),
    .m_axi_dma_control_ARLOCK(grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARLOCK),
    .m_axi_dma_control_ARCACHE(grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARCACHE),
    .m_axi_dma_control_ARPROT(grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARPROT),
    .m_axi_dma_control_ARQOS(grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARQOS),
    .m_axi_dma_control_ARREGION(grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARREGION),
    .m_axi_dma_control_ARUSER(grp_write_s2mm_1_fu_1700_m_axi_dma_control_ARUSER),
    .m_axi_dma_control_RVALID(1'b0),
    .m_axi_dma_control_RREADY(grp_write_s2mm_1_fu_1700_m_axi_dma_control_RREADY),
    .m_axi_dma_control_RDATA(32'd0),
    .m_axi_dma_control_RLAST(1'b0),
    .m_axi_dma_control_RID(1'd0),
    .m_axi_dma_control_RUSER(1'd0),
    .m_axi_dma_control_RRESP(2'd0),
    .m_axi_dma_control_BVALID(dma_control_BVALID),
    .m_axi_dma_control_BREADY(grp_write_s2mm_1_fu_1700_m_axi_dma_control_BREADY),
    .m_axi_dma_control_BRESP(dma_control_BRESP),
    .m_axi_dma_control_BID(dma_control_BID),
    .m_axi_dma_control_BUSER(dma_control_BUSER),
    .signal_r(grp_write_s2mm_1_fu_1700_signal_r)
);

Conv_sysarr_write_mm2s_1 grp_write_mm2s_1_fu_1709(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_write_mm2s_1_fu_1709_ap_start),
    .ap_done(grp_write_mm2s_1_fu_1709_ap_done),
    .ap_idle(grp_write_mm2s_1_fu_1709_ap_idle),
    .ap_ready(grp_write_mm2s_1_fu_1709_ap_ready),
    .m_axi_dma_control_AWVALID(grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWVALID),
    .m_axi_dma_control_AWREADY(dma_control_AWREADY),
    .m_axi_dma_control_AWADDR(grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWADDR),
    .m_axi_dma_control_AWID(grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWID),
    .m_axi_dma_control_AWLEN(grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWLEN),
    .m_axi_dma_control_AWSIZE(grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWSIZE),
    .m_axi_dma_control_AWBURST(grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWBURST),
    .m_axi_dma_control_AWLOCK(grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWLOCK),
    .m_axi_dma_control_AWCACHE(grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWCACHE),
    .m_axi_dma_control_AWPROT(grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWPROT),
    .m_axi_dma_control_AWQOS(grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWQOS),
    .m_axi_dma_control_AWREGION(grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWREGION),
    .m_axi_dma_control_AWUSER(grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWUSER),
    .m_axi_dma_control_WVALID(grp_write_mm2s_1_fu_1709_m_axi_dma_control_WVALID),
    .m_axi_dma_control_WREADY(dma_control_WREADY),
    .m_axi_dma_control_WDATA(grp_write_mm2s_1_fu_1709_m_axi_dma_control_WDATA),
    .m_axi_dma_control_WSTRB(grp_write_mm2s_1_fu_1709_m_axi_dma_control_WSTRB),
    .m_axi_dma_control_WLAST(grp_write_mm2s_1_fu_1709_m_axi_dma_control_WLAST),
    .m_axi_dma_control_WID(grp_write_mm2s_1_fu_1709_m_axi_dma_control_WID),
    .m_axi_dma_control_WUSER(grp_write_mm2s_1_fu_1709_m_axi_dma_control_WUSER),
    .m_axi_dma_control_ARVALID(grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARVALID),
    .m_axi_dma_control_ARREADY(1'b0),
    .m_axi_dma_control_ARADDR(grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARADDR),
    .m_axi_dma_control_ARID(grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARID),
    .m_axi_dma_control_ARLEN(grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARLEN),
    .m_axi_dma_control_ARSIZE(grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARSIZE),
    .m_axi_dma_control_ARBURST(grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARBURST),
    .m_axi_dma_control_ARLOCK(grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARLOCK),
    .m_axi_dma_control_ARCACHE(grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARCACHE),
    .m_axi_dma_control_ARPROT(grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARPROT),
    .m_axi_dma_control_ARQOS(grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARQOS),
    .m_axi_dma_control_ARREGION(grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARREGION),
    .m_axi_dma_control_ARUSER(grp_write_mm2s_1_fu_1709_m_axi_dma_control_ARUSER),
    .m_axi_dma_control_RVALID(1'b0),
    .m_axi_dma_control_RREADY(grp_write_mm2s_1_fu_1709_m_axi_dma_control_RREADY),
    .m_axi_dma_control_RDATA(32'd0),
    .m_axi_dma_control_RLAST(1'b0),
    .m_axi_dma_control_RID(1'd0),
    .m_axi_dma_control_RUSER(1'd0),
    .m_axi_dma_control_RRESP(2'd0),
    .m_axi_dma_control_BVALID(dma_control_BVALID),
    .m_axi_dma_control_BREADY(grp_write_mm2s_1_fu_1709_m_axi_dma_control_BREADY),
    .m_axi_dma_control_BRESP(dma_control_BRESP),
    .m_axi_dma_control_BID(dma_control_BID),
    .m_axi_dma_control_BUSER(dma_control_BUSER),
    .signal_r(grp_write_mm2s_1_fu_1709_signal_r)
);

Conv_sysarr_mul_161s_33s_192_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 161 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 192 ))
mul_161s_33s_192_7_1_U230(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1425_p0),
    .din1(grp_fu_1425_p1),
    .ce(grp_fu_1425_ce),
    .dout(grp_fu_1425_p2)
);

Conv_sysarr_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U231(
    .din0(bias_l2_0_load_reg_3969),
    .din1(bias_l2_1_load_reg_3974),
    .din2(bias_l2_2_load_reg_3979),
    .din3(bias_l2_3_load_reg_3984),
    .din4(tmp_data_V_fu_2075_p5),
    .dout(tmp_data_V_fu_2075_p6)
);

Conv_sysarr_add_192ns_192ns_192_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 192 ),
    .din1_WIDTH( 192 ),
    .dout_WIDTH( 192 ))
add_192ns_192ns_192_2_1_U232(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(indvar_flatten751_reg_1127),
    .din1(192'd1),
    .ce(1'b1),
    .dout(grp_fu_2242_p2)
);

Conv_sysarr_add_192ns_192ns_192_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 192 ),
    .din1_WIDTH( 192 ),
    .dout_WIDTH( 192 ))
add_192ns_192ns_192_2_1_U233(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(192'd1),
    .din1(indvar_flatten397_reg_1259),
    .ce(1'b1),
    .dout(grp_fu_2598_p2)
);

Conv_sysarr_add_96ns_96ns_96_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 96 ),
    .din1_WIDTH( 96 ),
    .dout_WIDTH( 96 ))
add_96ns_96ns_96_2_1_U234(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(indvar_flatten451_reg_1199),
    .din1(96'd1),
    .ce(grp_fu_2664_ce),
    .dout(grp_fu_2664_p2)
);

Conv_sysarr_add_128ns_128ns_128_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 128 ),
    .din1_WIDTH( 128 ),
    .dout_WIDTH( 128 ))
add_128ns_128ns_128_2_1_U235(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(indvar_flatten525_reg_1175),
    .din1(128'd1),
    .ce(grp_fu_2670_ce),
    .dout(grp_fu_2670_p2)
);

Conv_sysarr_add_160ns_160ns_160_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 160 ),
    .din1_WIDTH( 160 ),
    .dout_WIDTH( 160 ))
add_160ns_160ns_160_2_1_U236(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(indvar_flatten625_reg_1151),
    .din1(160'd1),
    .ce(grp_fu_2676_ce),
    .dout(grp_fu_2676_p2)
);

Conv_sysarr_add_96ns_96ns_96_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 96 ),
    .din1_WIDTH( 96 ),
    .dout_WIDTH( 96 ))
add_96ns_96ns_96_2_1_U237(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(indvar_flatten67_reg_1343),
    .din1(96'd1),
    .ce(grp_fu_3294_ce),
    .dout(grp_fu_3294_p2)
);

Conv_sysarr_add_128ns_128ns_128_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 128 ),
    .din1_WIDTH( 128 ),
    .dout_WIDTH( 128 ))
add_128ns_128ns_128_2_1_U238(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(indvar_flatten147_reg_1331),
    .din1(128'd1),
    .ce(grp_fu_3300_ce),
    .dout(grp_fu_3300_p2)
);

Conv_sysarr_add_160ns_160ns_160_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 160 ),
    .din1_WIDTH( 160 ),
    .dout_WIDTH( 160 ))
add_160ns_160ns_160_2_1_U239(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(indvar_flatten257_reg_1319),
    .din1(160'd1),
    .ce(grp_fu_3306_ce),
    .dout(grp_fu_3306_p2)
);

regslice_both #(
    .DataWidth( 8 ))
regslice_both_in_data_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_data_TDATA),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_data_V_U_ack_in),
    .data_out(in_data_TDATA_int_regslice),
    .vld_out(in_data_TVALID_int_regslice),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_data_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_data_TKEEP),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_keep_V_U_ack_in),
    .data_out(in_data_TKEEP_int_regslice),
    .vld_out(regslice_both_in_data_V_keep_V_U_vld_out),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_data_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_data_TSTRB),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_strb_V_U_ack_in),
    .data_out(in_data_TSTRB_int_regslice),
    .vld_out(regslice_both_in_data_V_strb_V_U_vld_out),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_strb_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_data_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_data_TLAST),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_last_V_U_ack_in),
    .data_out(in_data_TLAST_int_regslice),
    .vld_out(regslice_both_in_data_V_last_V_U_vld_out),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 8 ))
regslice_both_out_data_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_data_TDATA_int_regslice),
    .vld_in(out_data_TVALID_int_regslice),
    .ack_in(out_data_TREADY_int_regslice),
    .data_out(out_data_TDATA),
    .vld_out(regslice_both_out_data_V_data_V_U_vld_out),
    .ack_out(out_data_TREADY),
    .apdone_blk(regslice_both_out_data_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_data_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_data_TKEEP_int_regslice),
    .vld_in(out_data_TVALID_int_regslice),
    .ack_in(regslice_both_out_data_V_keep_V_U_ack_in_dummy),
    .data_out(out_data_TKEEP),
    .vld_out(regslice_both_out_data_V_keep_V_U_vld_out),
    .ack_out(out_data_TREADY),
    .apdone_blk(regslice_both_out_data_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_data_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_data_TSTRB_int_regslice),
    .vld_in(out_data_TVALID_int_regslice),
    .ack_in(regslice_both_out_data_V_strb_V_U_ack_in_dummy),
    .data_out(out_data_TSTRB),
    .vld_out(regslice_both_out_data_V_strb_V_U_vld_out),
    .ack_out(out_data_TREADY),
    .apdone_blk(regslice_both_out_data_V_strb_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_data_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_data_TLAST_int_regslice),
    .vld_in(out_data_TVALID_int_regslice),
    .ack_in(regslice_both_out_data_V_last_V_U_ack_in_dummy),
    .data_out(out_data_TLAST),
    .vld_out(regslice_both_out_data_V_last_V_U_vld_out),
    .ack_out(out_data_TREADY),
    .apdone_blk(regslice_both_out_data_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_condition_pp0_exit_iter0_state61))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state139))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state138) & (grp_runWeight2Reg_fu_1631_ap_done == 1'b1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter5 == 1'b0)))) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end else if (((1'b1 == ap_CS_fsm_state138) & (grp_runWeight2Reg_fu_1631_ap_done == 1'b1))) begin
            ap_enable_reg_pp2_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_input_dram_read_1_fu_1599_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state114)) begin
            grp_input_dram_read_1_fu_1599_ap_start_reg <= 1'b1;
        end else if ((grp_input_dram_read_1_fu_1599_ap_ready == 1'b1)) begin
            grp_input_dram_read_1_fu_1599_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_output_dram_write_1_fu_1531_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1))) begin
            grp_output_dram_write_1_fu_1531_ap_start_reg <= 1'b1;
        end else if ((grp_output_dram_write_1_fu_1531_ap_ready == 1'b1)) begin
            grp_output_dram_write_1_fu_1531_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_runOutputL1toL2_fu_1567_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state154)) begin
            grp_runOutputL1toL2_fu_1567_ap_start_reg <= 1'b1;
        end else if ((grp_runOutputL1toL2_fu_1567_ap_ready == 1'b1)) begin
            grp_runOutputL1toL2_fu_1567_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_runSIMD_fu_1499_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state152)) begin
            grp_runSIMD_fu_1499_ap_start_reg <= 1'b1;
        end else if ((grp_runSIMD_fu_1499_ap_ready == 1'b1)) begin
            grp_runSIMD_fu_1499_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_runWeight2Reg_fu_1631_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state137)) begin
            grp_runWeight2Reg_fu_1631_ap_start_reg <= 1'b1;
        end else if ((grp_runWeight2Reg_fu_1631_ap_ready == 1'b1)) begin
            grp_runWeight2Reg_fu_1631_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_weight_dram_read_1_fu_1666_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state112)) begin
            grp_weight_dram_read_1_fu_1666_ap_start_reg <= 1'b1;
        end else if ((grp_weight_dram_read_1_fu_1666_ap_ready == 1'b1)) begin
            grp_weight_dram_read_1_fu_1666_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_write_mm2s_1_fu_1709_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
            grp_write_mm2s_1_fu_1709_ap_start_reg <= 1'b1;
        end else if ((grp_write_mm2s_1_fu_1709_ap_ready == 1'b1)) begin
            grp_write_mm2s_1_fu_1709_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_write_s2mm_1_fu_1700_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state68))) begin
            grp_write_s2mm_1_fu_1700_ap_start_reg <= 1'b1;
        end else if ((grp_write_s2mm_1_fu_1700_ap_ready == 1'b1)) begin
            grp_write_s2mm_1_fu_1700_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        cmo_reg_1163 <= select_ln576_6_reg_4327;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        cmo_reg_1163 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runOutputL1toL2_fu_1567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state155))) begin
        co_reg_1271 <= select_ln613_9_reg_4589;
    end else if (((grp_input_dram_read_1_fu_1599_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state115))) begin
        co_reg_1271 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln59_reg_4892 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        hi_reg_1402 <= select_ln59_1_reg_4906;
    end else if (((1'b1 == ap_CS_fsm_state138) & (grp_runWeight2Reg_fu_1631_ap_done == 1'b1))) begin
        hi_reg_1402 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        hmo_reg_1187 <= select_ln578_6_reg_4355;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        hmo_reg_1187 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runOutputL1toL2_fu_1567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state155))) begin
        ho_reg_1283 <= select_ln615_8_reg_4619;
    end else if (((grp_input_dram_read_1_fu_1599_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state115))) begin
        ho_reg_1283 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln59_reg_4892 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        indvar_flatten10_reg_1391 <= add_ln59_2_reg_4896;
    end else if (((1'b1 == ap_CS_fsm_state138) & (grp_runWeight2Reg_fu_1631_ap_done == 1'b1))) begin
        indvar_flatten10_reg_1391 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runOutputL1toL2_fu_1567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state155))) begin
        indvar_flatten147_reg_1331 <= select_ln615_9_reg_5026;
    end else if (((grp_input_dram_read_1_fu_1599_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state115))) begin
        indvar_flatten147_reg_1331 <= 128'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runOutputL1toL2_fu_1567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state155))) begin
        indvar_flatten17_reg_1355 <= select_ln619_4_reg_5001;
    end else if (((grp_input_dram_read_1_fu_1599_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state115))) begin
        indvar_flatten17_reg_1355 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runOutputL1toL2_fu_1567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state155))) begin
        indvar_flatten257_reg_1319 <= select_ln613_10_reg_5031;
    end else if (((grp_input_dram_read_1_fu_1599_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state115))) begin
        indvar_flatten257_reg_1319 <= 160'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runOutputL1toL2_fu_1567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state155))) begin
        indvar_flatten397_reg_1259 <= add_ln611_reg_4434;
    end else if (((grp_input_dram_read_1_fu_1599_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state115))) begin
        indvar_flatten397_reg_1259 <= 192'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        indvar_flatten405_reg_1223 <= select_ln582_3_reg_5036;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        indvar_flatten405_reg_1223 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        indvar_flatten451_reg_1199 <= select_ln580_6_fu_3406_p3;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        indvar_flatten451_reg_1199 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        indvar_flatten525_reg_1175 <= select_ln578_7_fu_3412_p3;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        indvar_flatten525_reg_1175 <= 128'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        indvar_flatten625_reg_1151 <= select_ln576_7_fu_3418_p3;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        indvar_flatten625_reg_1151 <= 160'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runOutputL1toL2_fu_1567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state155))) begin
        indvar_flatten67_reg_1343 <= select_ln617_7_reg_5021;
    end else if (((grp_input_dram_read_1_fu_1599_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state115))) begin
        indvar_flatten67_reg_1343 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        indvar_flatten751_reg_1127 <= add_ln574_reg_4225;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        indvar_flatten751_reg_1127 <= 192'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_write_s2mm_1_fu_1700_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state71))) begin
        indvar_flatten_reg_1081 <= add_ln538_1_reg_3804;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        indvar_flatten_reg_1081 <= 62'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
        ki_2_reg_1115 <= 3'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ki_2_reg_1115 <= add_ln550_reg_3989;
    end
end

always @ (posedge ap_clk) begin
    if (((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
        ki_reg_1070 <= 3'd0;
    end else if (((in_data_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        ki_reg_1070 <= add_ln531_reg_3765;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        kmo_reg_1139 <= select_ln574_1_reg_4271;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        kmo_reg_1139 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_write_s2mm_1_fu_1700_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state71))) begin
        ko_2_reg_1092 <= select_ln538_1_reg_3814;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        ko_2_reg_1092 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runOutputL1toL2_fu_1567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state155))) begin
        ko_3_reg_1307 <= select_ln611_1_reg_4518;
    end else if (((grp_input_dram_read_1_fu_1599_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state115))) begin
        ko_3_reg_1307 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        ko_reg_1059 <= 30'd0;
    end else if (((icmp_ln531_fu_1925_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ko_reg_1059 <= add_ln523_reg_3732;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        rmo_reg_1235 <= select_ln582_2_reg_4404;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        rmo_reg_1235 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runOutputL1toL2_fu_1567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state155))) begin
        ro_reg_1367 <= select_ln619_3_reg_4685;
    end else if (((grp_input_dram_read_1_fu_1599_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state115))) begin
        ro_reg_1367 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        smo_reg_1247 <= smo_1_reg_4502;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        smo_reg_1247 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runOutputL1toL2_fu_1567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state155))) begin
        so_reg_1379 <= so_1_reg_4991;
    end else if (((grp_input_dram_read_1_fu_1599_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state115))) begin
        so_reg_1379 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_write_s2mm_1_fu_1700_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state71))) begin
        wh_reg_1103 <= wh_1_reg_4014;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        wh_reg_1103 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln59_reg_4892 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        wi_reg_1413 <= add_ln61_reg_4936;
    end else if (((1'b1 == ap_CS_fsm_state138) & (grp_runWeight2Reg_fu_1631_ap_done == 1'b1))) begin
        wi_reg_1413 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        wmo_reg_1211 <= select_ln580_5_reg_4389;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        wmo_reg_1211 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runOutputL1toL2_fu_1567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state155))) begin
        wo_reg_1295 <= select_ln617_6_reg_4638;
    end else if (((grp_input_dram_read_1_fu_1599_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state115))) begin
        wo_reg_1295 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        C_L2_read_reg_3581 <= C_L2;
        H_L2_read_reg_3571 <= H_L2;
        H_in_L2_read_reg_3561 <= H_in_L2;
        K_L2_read_reg_3587 <= K_L2;
        L1_TILENUM_C_read_reg_3541 <= L1_TILENUM_C;
        L1_TILENUM_H_read_reg_3531 <= L1_TILENUM_H;
        L1_TILENUM_K_read_reg_3546 <= L1_TILENUM_K;
        L1_TILENUM_R_read_reg_3526 <= L1_TILENUM_R;
        L1_TILENUM_S_read_reg_3519 <= L1_TILENUM_S;
        L1_TILENUM_W_read_reg_3536 <= L1_TILENUM_W;
        L2_TILENUM_C_read_reg_3615 <= L2_TILENUM_C;
        L2_TILENUM_H_read_reg_3605 <= L2_TILENUM_H;
        L2_TILENUM_K_read_reg_3620 <= L2_TILENUM_K;
        L2_TILENUM_R_read_reg_3600 <= L2_TILENUM_R;
        L2_TILENUM_S_read_reg_3593 <= L2_TILENUM_S;
        L2_TILENUM_W_read_reg_3610 <= L2_TILENUM_W;
        R_L2_read_reg_3556 <= R_L2;
        S_L2_read_reg_3551 <= S_L2;
        TILESIZE_H_read_reg_3504 <= TILESIZE_H;
        TILESIZE_R_read_reg_3499 <= TILESIZE_R;
        TILESIZE_S_read_reg_3494 <= TILESIZE_S;
        TILESIZE_W_read_reg_3511 <= TILESIZE_W;
        WH_read_reg_3625 <= WH;
        W_L2_read_reg_3576 <= W_L2;
        W_in_L2_read_reg_3566 <= W_in_L2;
        bias_addr_read_reg_3489 <= bias_addr;
        data_addr_read_reg_3479 <= data_addr;
        empty_126_reg_3636 <= empty_126_fu_1801_p1;
        empty_127_reg_3641 <= empty_127_fu_1805_p1;
        empty_128_reg_3646 <= empty_128_fu_1809_p1;
        empty_129_reg_3651 <= empty_129_fu_1813_p1;
        empty_130_reg_3656 <= empty_130_fu_1817_p1;
        empty_131_reg_3661 <= empty_131_fu_1821_p1;
        empty_132_reg_3666 <= empty_132_fu_1825_p1;
        empty_133_reg_3671 <= empty_133_fu_1829_p1;
        empty_134_reg_3676 <= empty_134_fu_1833_p1;
        empty_135_reg_3681 <= empty_135_fu_1837_p1;
        empty_136_reg_3686 <= empty_136_fu_1841_p1;
        empty_137_reg_3691 <= empty_137_fu_1845_p1;
        empty_138_reg_3696 <= empty_138_fu_1849_p1;
        empty_139_reg_3701 <= empty_139_fu_1853_p1;
        empty_140_reg_3706 <= empty_140_fu_1857_p1;
        empty_reg_3631 <= empty_fu_1797_p1;
        output_addr_read_reg_3473 <= output_addr;
        trunc_ln_reg_3711 <= {{K[31:2]}};
        weight_addr_read_reg_3484 <= weight_addr;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln59_reg_4892_pp2_iter4_reg == 1'd0))) begin
        add13_i_reg_4946 <= add13_i_fu_3264_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln59_reg_4892_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add17_i_reg_4941 <= add17_i_fu_3254_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add17_i_reg_4941_pp2_iter5_reg <= add17_i_reg_4941;
        icmp_ln59_reg_4892 <= icmp_ln59_fu_3185_p2;
        icmp_ln59_reg_4892_pp2_iter1_reg <= icmp_ln59_reg_4892;
        icmp_ln59_reg_4892_pp2_iter2_reg <= icmp_ln59_reg_4892_pp2_iter1_reg;
        icmp_ln59_reg_4892_pp2_iter3_reg <= icmp_ln59_reg_4892_pp2_iter2_reg;
        icmp_ln59_reg_4892_pp2_iter4_reg <= icmp_ln59_reg_4892_pp2_iter3_reg;
        icmp_ln59_reg_4892_pp2_iter5_reg <= icmp_ln59_reg_4892_pp2_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln523_reg_3732 <= add_ln523_fu_1896_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln523_fu_1891_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        add_ln529_reg_3737 <= add_ln529_fu_1920_p2;
        bias_l2_0_addr_reg_3742 <= zext_ln523_fu_1883_p1;
        bias_l2_1_addr_reg_3747 <= zext_ln523_fu_1883_p1;
        bias_l2_2_addr_reg_3752 <= zext_ln523_fu_1883_p1;
        bias_l2_3_addr_reg_3757 <= zext_ln523_fu_1883_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        add_ln531_reg_3765 <= add_ln531_fu_1931_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        add_ln538_1_reg_3804 <= add_ln538_1_fu_1980_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        add_ln547_reg_3955 <= add_ln547_fu_2037_p2;
        select_ln538_reg_3950 <= select_ln538_fu_2026_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        add_ln548_reg_3960 <= add_ln548_fu_2054_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln550_reg_3989 <= add_ln550_fu_2065_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        add_ln574_reg_4225 <= grp_fu_2242_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state156) & (grp_output_dram_write_1_fu_1531_ap_done == 1'b1) & (icmp_ln576_reg_4230 == 1'd0))) begin
        add_ln576_1_reg_5051 <= grp_fu_2676_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state156) & (grp_output_dram_write_1_fu_1531_ap_done == 1'b1) & (or_ln576_reg_4289 == 1'd0))) begin
        add_ln578_1_reg_5046 <= grp_fu_2670_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state156) & (grp_output_dram_write_1_fu_1531_ap_done == 1'b1) & (or_ln578_1_reg_4337 == 1'd0))) begin
        add_ln580_1_reg_5041 <= grp_fu_2664_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1) & (or_ln580_1_reg_4360 == 1'd0))) begin
        add_ln582_1_reg_4507 <= add_ln582_1_fu_2658_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln59_reg_4892 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        add_ln59_1_reg_4921 <= add_ln59_1_fu_3235_p2;
        empty_142_reg_4926 <= empty_142_fu_3240_p1;
        empty_143_reg_4931 <= empty_143_fu_3244_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        add_ln59_2_reg_4896 <= add_ln59_2_fu_3191_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        add_ln611_reg_4434 <= grp_fu_2598_p2;
        trunc_ln615_reg_4428 <= trunc_ln615_fu_2604_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state153) & (grp_runSIMD_fu_1499_ap_done == 1'b1) & (icmp_ln613_reg_4466 == 1'd0))) begin
        add_ln613_1_reg_5016 <= grp_fu_3306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state153) & (grp_runSIMD_fu_1499_ap_done == 1'b1) & (or_ln613_reg_4542 == 1'd0))) begin
        add_ln615_1_reg_5011 <= grp_fu_3300_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state153) & (grp_runSIMD_fu_1499_ap_done == 1'b1) & (or_ln615_1_reg_4600 == 1'd0))) begin
        add_ln617_1_reg_5006 <= grp_fu_3294_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state152) & (or_ln617_1_reg_4658 == 1'd0))) begin
        add_ln619_1_reg_4996 <= add_ln619_1_fu_3288_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln59_reg_4892 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        add_ln61_reg_4936 <= add_ln61_fu_3248_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln538_fu_1974_p2 == 1'd0))) begin
        bias_l2_0_addr_1_reg_3824 <= zext_ln538_fu_2006_p1;
        bias_l2_1_addr_1_reg_3829 <= zext_ln538_fu_2006_p1;
        bias_l2_2_addr_1_reg_3834 <= zext_ln538_fu_2006_p1;
        bias_l2_3_addr_1_reg_3839 <= zext_ln538_fu_2006_p1;
        icmp_ln541_reg_3809 <= icmp_ln541_fu_1992_p2;
        select_ln538_1_reg_3814 <= select_ln538_1_fu_1998_p3;
        trunc_ln538_reg_3819 <= trunc_ln538_fu_2014_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bias_l2_0_load_reg_3969 <= bias_l2_0_q0;
        bias_l2_1_load_reg_3974 <= bias_l2_1_q0;
        bias_l2_2_load_reg_3979 <= bias_l2_2_q0;
        bias_l2_3_load_reg_3984 <= bias_l2_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln59_reg_4892_pp2_iter5_reg == 1'd0))) begin
        data_l2_0_load_reg_4971 <= data_l2_0_q0;
        data_l2_1_load_reg_4976 <= data_l2_1_q0;
        data_l2_2_load_reg_4981 <= data_l2_2_q0;
        data_l2_3_load_reg_4986 <= data_l2_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        empty_142_reg_4926_pp2_iter1_reg <= empty_142_reg_4926;
        empty_142_reg_4926_pp2_iter2_reg <= empty_142_reg_4926_pp2_iter1_reg;
        empty_142_reg_4926_pp2_iter3_reg <= empty_142_reg_4926_pp2_iter2_reg;
        empty_143_reg_4931_pp2_iter1_reg <= empty_143_reg_4931;
        empty_143_reg_4931_pp2_iter2_reg <= empty_143_reg_4931_pp2_iter1_reg;
        empty_143_reg_4931_pp2_iter3_reg <= empty_143_reg_4931_pp2_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln550_reg_3965 <= icmp_ln550_fu_2059_p2;
        icmp_ln550_reg_3965_pp0_iter1_reg <= icmp_ln550_reg_3965;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        icmp_ln574_reg_4221 <= icmp_ln574_fu_2237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state108) & (icmp_ln574_reg_4221 == 1'd0))) begin
        icmp_ln576_reg_4230 <= icmp_ln576_fu_2248_p2;
        icmp_ln578_1_reg_4260 <= icmp_ln578_1_fu_2269_p2;
        icmp_ln580_1_reg_4255 <= icmp_ln580_1_fu_2264_p2;
        icmp_ln582_1_reg_4250 <= icmp_ln582_1_fu_2258_p2;
        icmp_ln584_1_reg_4245 <= icmp_ln584_1_fu_2253_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        icmp_ln578_reg_4190 <= icmp_ln578_fu_2211_p2;
        icmp_ln580_reg_4184 <= icmp_ln580_fu_2206_p2;
        icmp_ln582_reg_4177 <= icmp_ln582_fu_2200_p2;
        icmp_ln584_reg_4169 <= icmp_ln584_fu_2195_p2;
        icmp_ln615_reg_4216 <= icmp_ln615_fu_2232_p2;
        icmp_ln617_reg_4210 <= icmp_ln617_fu_2227_p2;
        icmp_ln619_reg_4203 <= icmp_ln619_fu_2221_p2;
        icmp_ln621_reg_4195 <= icmp_ln621_fu_2216_p2;
        mul_ln574_10_reg_4164 <= grp_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        icmp_ln611_reg_4424 <= icmp_ln611_fu_2593_p2;
        trunc_ln613_1_reg_4419 <= trunc_ln613_1_fu_2589_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd0))) begin
        icmp_ln613_reg_4466 <= icmp_ln613_fu_2627_p2;
        icmp_ln615_1_reg_4497 <= icmp_ln615_1_fu_2648_p2;
        icmp_ln617_1_reg_4492 <= icmp_ln617_1_fu_2643_p2;
        icmp_ln619_1_reg_4487 <= icmp_ln619_1_fu_2637_p2;
        icmp_ln621_1_reg_4482 <= icmp_ln621_1_fu_2632_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln59_fu_3185_p2 == 1'd0))) begin
        icmp_ln61_reg_4901 <= icmp_ln61_fu_3203_p2;
        trunc_ln59_1_reg_4916 <= trunc_ln59_1_fu_3220_p1;
        trunc_ln59_reg_4911 <= trunc_ln59_fu_3216_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        isFirst_reg_4706 <= isFirst_fu_3045_p2;
        select_ln619_reg_4696 <= select_ln619_fu_3019_p3;
        tmp3_reg_4711 <= tmp3_fu_3051_p2;
        trunc_ln621_1_reg_4701 <= trunc_ln621_1_fu_3031_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        mul3_i_reg_4445 <= grp_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state124)) begin
        mul6_i_reg_4451 <= grp_fu_1425_p2;
        tmp1_reg_4461 <= tmp1_fu_2622_p2;
        trunc_ln619_1_reg_4456 <= trunc_ln619_1_fu_2618_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state133) & (select_ln611_7_reg_4533 == 1'd1))) begin
        mul9_i_mid1_reg_4653 <= grp_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        mul_ln574_2_reg_4059 <= grp_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        mul_ln574_3_reg_4093 <= grp_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        mul_ln574_4_reg_4127 <= grp_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        mul_ln574_5_reg_4159 <= grp_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        mul_ln574_7_reg_4076 <= grp_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        mul_ln574_8_reg_4110 <= grp_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        mul_ln574_9_reg_4143 <= grp_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        or_ln576_reg_4289 <= or_ln576_fu_2313_p2;
        select_ln574_1_reg_4271 <= select_ln574_1_fu_2287_p3;
        select_ln574_6_reg_4281 <= select_ln574_6_fu_2308_p3;
        select_ln574_reg_4265 <= select_ln574_fu_2280_p3;
        select_ln576_5_reg_4302 <= select_ln576_5_fu_2333_p3;
        select_ln576_reg_4296 <= select_ln576_fu_2318_p3;
        select_ln578_5_reg_4311 <= select_ln578_5_fu_2340_p3;
        trunc_ln574_reg_4276 <= trunc_ln574_fu_2294_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        or_ln578_1_reg_4337 <= or_ln578_1_fu_2411_p2;
        or_ln578_reg_4332 <= or_ln578_fu_2407_p2;
        or_ln580_1_reg_4360 <= or_ln580_1_fu_2451_p2;
        select_ln576_1_reg_4321 <= select_ln576_1_fu_2372_p3;
        select_ln576_6_reg_4327 <= select_ln576_6_fu_2396_p3;
        select_ln578_1_reg_4350 <= select_ln578_1_fu_2428_p3;
        select_ln578_6_reg_4355 <= select_ln578_6_fu_2441_p3;
        select_ln578_reg_4344 <= select_ln578_fu_2416_p3;
        select_ln580_4_reg_4372 <= select_ln580_4_fu_2464_p3;
        select_ln580_reg_4366 <= select_ln580_fu_2456_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        or_ln613_reg_4542 <= or_ln613_fu_2725_p2;
        select_ln611_1_reg_4518 <= select_ln611_1_fu_2695_p3;
        select_ln611_7_reg_4533 <= select_ln611_7_fu_2720_p3;
        select_ln611_reg_4512 <= select_ln611_fu_2688_p3;
        select_ln613_8_reg_4557 <= select_ln613_8_fu_2745_p3;
        select_ln613_reg_4551 <= select_ln613_fu_2730_p3;
        select_ln615_7_reg_4568 <= select_ln615_7_fu_2752_p3;
        trunc_ln611_1_reg_4528 <= trunc_ln611_1_fu_2706_p1;
        trunc_ln611_reg_4523 <= trunc_ln611_fu_2702_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        or_ln615_1_reg_4600 <= or_ln615_1_fu_2811_p2;
        or_ln615_reg_4595 <= or_ln615_fu_2807_p2;
        select_ln613_1_reg_4584 <= select_ln613_1_fu_2783_p3;
        select_ln613_9_reg_4589 <= select_ln613_9_fu_2796_p3;
        select_ln615_8_reg_4619 <= select_ln615_8_fu_2834_p3;
        select_ln615_reg_4607 <= select_ln615_fu_2816_p3;
        select_ln617_5_reg_4624 <= select_ln617_5_fu_2840_p3;
        trunc_ln615_1_reg_4613 <= trunc_ln615_1_fu_2824_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        or_ln617_1_reg_4658 <= or_ln617_1_fu_2889_p2;
        select_ln617_reg_4664 <= select_ln617_fu_2894_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state34))) begin
        reg_1726 <= grp_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state41))) begin
        reg_1730 <= grp_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state49))) begin
        reg_1734 <= grp_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state122) | ((ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln59_reg_4892_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln59_reg_4892_pp2_iter3_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((select_ln615_7_reg_4568 == 1'd1) & (1'b1 == ap_CS_fsm_state135)))) begin
        reg_1738 <= grp_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        select_ln162_reg_4009 <= select_ln162_fu_2100_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        select_ln580_1_reg_4379 <= select_ln580_1_fu_2505_p3;
        select_ln580_2_reg_4384 <= select_ln580_2_fu_2516_p3;
        select_ln580_5_reg_4389 <= select_ln580_5_fu_2530_p3;
        select_ln582_1_reg_4399 <= select_ln582_1_fu_2567_p3;
        select_ln582_2_reg_4404 <= select_ln582_2_fu_2574_p3;
        select_ln582_reg_4394 <= select_ln582_fu_2555_p3;
        trunc_ln584_reg_4409 <= trunc_ln584_fu_2580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state156) & (grp_output_dram_write_1_fu_1531_ap_done == 1'b1))) begin
        select_ln582_3_reg_5036 <= select_ln582_3_fu_3400_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln59_fu_3185_p2 == 1'd0))) begin
        select_ln59_1_reg_4906 <= select_ln59_1_fu_3208_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        select_ln613_10_reg_5031 <= select_ln613_10_fu_3394_p3;
        select_ln615_9_reg_5026 <= select_ln615_9_fu_3388_p3;
        select_ln617_7_reg_5021 <= select_ln617_7_fu_3382_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        select_ln613_2_reg_4670 <= select_ln613_2_fu_2909_p3;
        select_ln619_1_reg_4680 <= select_ln619_1_fu_2934_p3;
        select_ln619_3_reg_4685 <= select_ln619_3_fu_2941_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        select_ln615_1_reg_4643 <= select_ln615_1_fu_2867_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state129)) begin
        select_ln617_1_reg_4648 <= select_ln617_1_fu_2879_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        select_ln617_6_reg_4638 <= select_ln617_6_fu_2855_p3;
        trunc_ln617_1_reg_4632 <= trunc_ln617_1_fu_2851_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        select_ln619_2_reg_4691 <= select_ln619_2_fu_2985_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state153) & (grp_runSIMD_fu_1499_ap_done == 1'b1))) begin
        select_ln619_4_reg_5001 <= select_ln619_4_fu_3376_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1))) begin
        smo_1_reg_4502 <= smo_1_fu_2653_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        so_1_reg_4991 <= so_1_fu_3283_p2;
        weight_regfile_0_0_1_fu_496 <= weight_regfile_0_0_reg_4796;
        weight_regfile_0_1_1_fu_500 <= weight_regfile_0_1_reg_4802;
        weight_regfile_0_2_1_fu_504 <= weight_regfile_0_2_reg_4808;
        weight_regfile_0_3_1_fu_508 <= weight_regfile_0_3_reg_4814;
        weight_regfile_1_0_1_fu_512 <= weight_regfile_1_0_reg_4820;
        weight_regfile_1_1_1_fu_516 <= weight_regfile_1_1_reg_4826;
        weight_regfile_1_2_1_fu_520 <= weight_regfile_1_2_reg_4832;
        weight_regfile_1_3_1_fu_524 <= weight_regfile_1_3_reg_4838;
        weight_regfile_2_0_1_fu_528 <= weight_regfile_2_0_reg_4844;
        weight_regfile_2_1_1_fu_532 <= weight_regfile_2_1_reg_4850;
        weight_regfile_2_2_1_fu_536 <= weight_regfile_2_2_reg_4856;
        weight_regfile_2_3_1_fu_540 <= weight_regfile_2_3_reg_4862;
        weight_regfile_3_0_1_fu_544 <= weight_regfile_3_0_reg_4868;
        weight_regfile_3_1_1_fu_548 <= weight_regfile_3_1_reg_4874;
        weight_regfile_3_2_1_fu_552 <= weight_regfile_3_2_reg_4880;
        weight_regfile_3_3_1_fu_556 <= weight_regfile_3_3_reg_4886;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_data_V_4_reg_3999 <= tmp_data_V_fu_2075_p6[32'd7];
        tmp_last_V_reg_4004 <= tmp_last_V_fu_2094_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln531_fu_1925_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        trunc_ln535_reg_3770 <= trunc_ln535_fu_1937_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        trunc_ln548_reg_3774 <= trunc_ln548_fu_1949_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state126) & (select_ln611_7_reg_4533 == 1'd1))) begin
        trunc_ln613_2_reg_4579 <= trunc_ln613_2_fu_2775_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        trunc_ln617_reg_4439 <= trunc_ln617_fu_2609_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state134) & (select_ln617_5_reg_4624 == 1'd1))) begin
        trunc_ln619_2_reg_4675 <= trunc_ln619_2_fu_2926_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state138) & (grp_runWeight2Reg_fu_1631_ap_done == 1'b1))) begin
        weight_regfile_0_0_reg_4796 <= grp_runWeight2Reg_fu_1631_ap_return_0;
        weight_regfile_0_1_reg_4802 <= grp_runWeight2Reg_fu_1631_ap_return_1;
        weight_regfile_0_2_reg_4808 <= grp_runWeight2Reg_fu_1631_ap_return_2;
        weight_regfile_0_3_reg_4814 <= grp_runWeight2Reg_fu_1631_ap_return_3;
        weight_regfile_1_0_reg_4820 <= grp_runWeight2Reg_fu_1631_ap_return_4;
        weight_regfile_1_1_reg_4826 <= grp_runWeight2Reg_fu_1631_ap_return_5;
        weight_regfile_1_2_reg_4832 <= grp_runWeight2Reg_fu_1631_ap_return_6;
        weight_regfile_1_3_reg_4838 <= grp_runWeight2Reg_fu_1631_ap_return_7;
        weight_regfile_2_0_reg_4844 <= grp_runWeight2Reg_fu_1631_ap_return_8;
        weight_regfile_2_1_reg_4850 <= grp_runWeight2Reg_fu_1631_ap_return_9;
        weight_regfile_2_2_reg_4856 <= grp_runWeight2Reg_fu_1631_ap_return_10;
        weight_regfile_2_3_reg_4862 <= grp_runWeight2Reg_fu_1631_ap_return_11;
        weight_regfile_3_0_reg_4868 <= grp_runWeight2Reg_fu_1631_ap_return_12;
        weight_regfile_3_1_reg_4874 <= grp_runWeight2Reg_fu_1631_ap_return_13;
        weight_regfile_3_2_reg_4880 <= grp_runWeight2Reg_fu_1631_ap_return_14;
        weight_regfile_3_3_reg_4886 <= grp_runWeight2Reg_fu_1631_ap_return_15;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        wh_1_reg_4014 <= wh_1_fu_2108_p2;
    end
end

always @ (*) begin
    if ((icmp_ln550_reg_3965 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state61 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state61 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln59_fu_3185_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state139 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state139 = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_out_data_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state158))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln59_reg_4892 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_phi_mux_hi_phi_fu_1406_p4 = select_ln59_1_reg_4906;
    end else begin
        ap_phi_mux_hi_phi_fu_1406_p4 = hi_reg_1402;
    end
end

always @ (*) begin
    if (((icmp_ln59_reg_4892 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten10_phi_fu_1395_p4 = add_ln59_2_reg_4896;
    end else begin
        ap_phi_mux_indvar_flatten10_phi_fu_1395_p4 = indvar_flatten10_reg_1391;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_ki_2_phi_fu_1119_p4 = add_ln550_reg_3989;
    end else begin
        ap_phi_mux_ki_2_phi_fu_1119_p4 = ki_2_reg_1115;
    end
end

always @ (*) begin
    if (((icmp_ln59_reg_4892 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_phi_mux_wi_phi_fu_1417_p4 = add_ln61_reg_4936;
    end else begin
        ap_phi_mux_wi_phi_fu_1417_p4 = wi_reg_1413;
    end
end

always @ (*) begin
    if (((regslice_both_out_data_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state158))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_l2_0_address0 = bias_l2_0_addr_1_reg_3824;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        bias_l2_0_address0 = bias_l2_0_addr_reg_3742;
    end else begin
        bias_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((in_data_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state28)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bias_l2_0_ce0 = 1'b1;
    end else begin
        bias_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln535_reg_3770 == 2'd0) & (in_data_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        bias_l2_0_we0 = 1'b1;
    end else begin
        bias_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_l2_1_address0 = bias_l2_1_addr_1_reg_3829;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        bias_l2_1_address0 = bias_l2_1_addr_reg_3747;
    end else begin
        bias_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((in_data_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state28)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bias_l2_1_ce0 = 1'b1;
    end else begin
        bias_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln535_reg_3770 == 2'd1) & (in_data_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        bias_l2_1_we0 = 1'b1;
    end else begin
        bias_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_l2_2_address0 = bias_l2_2_addr_1_reg_3834;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        bias_l2_2_address0 = bias_l2_2_addr_reg_3752;
    end else begin
        bias_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((in_data_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state28)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bias_l2_2_ce0 = 1'b1;
    end else begin
        bias_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln535_reg_3770 == 2'd2) & (in_data_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        bias_l2_2_we0 = 1'b1;
    end else begin
        bias_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_l2_3_address0 = bias_l2_3_addr_1_reg_3839;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        bias_l2_3_address0 = bias_l2_3_addr_reg_3757;
    end else begin
        bias_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((in_data_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state28)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bias_l2_3_ce0 = 1'b1;
    end else begin
        bias_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln535_reg_3770 == 2'd3) & (in_data_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        bias_l2_3_we0 = 1'b1;
    end else begin
        bias_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        data_l1_0_address0 = idxprom18_i_fu_3276_p1;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        data_l1_0_address0 = grp_runSIMD_fu_1499_data_l1_address0;
    end else begin
        data_l1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        data_l1_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        data_l1_0_ce0 = grp_runSIMD_fu_1499_data_l1_ce0;
    end else begin
        data_l1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln59_reg_4892_pp2_iter5_reg == 1'd0))) begin
        data_l1_0_we0 = 1'b1;
    end else begin
        data_l1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        data_l1_1_address0 = idxprom18_i_fu_3276_p1;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        data_l1_1_address0 = grp_runSIMD_fu_1499_data_l14_address0;
    end else begin
        data_l1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        data_l1_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        data_l1_1_ce0 = grp_runSIMD_fu_1499_data_l14_ce0;
    end else begin
        data_l1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln59_reg_4892_pp2_iter5_reg == 1'd0))) begin
        data_l1_1_we0 = 1'b1;
    end else begin
        data_l1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        data_l1_2_address0 = idxprom18_i_fu_3276_p1;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        data_l1_2_address0 = grp_runSIMD_fu_1499_data_l15_address0;
    end else begin
        data_l1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        data_l1_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        data_l1_2_ce0 = grp_runSIMD_fu_1499_data_l15_ce0;
    end else begin
        data_l1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln59_reg_4892_pp2_iter5_reg == 1'd0))) begin
        data_l1_2_we0 = 1'b1;
    end else begin
        data_l1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        data_l1_3_address0 = idxprom18_i_fu_3276_p1;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        data_l1_3_address0 = grp_runSIMD_fu_1499_data_l16_address0;
    end else begin
        data_l1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        data_l1_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        data_l1_3_ce0 = grp_runSIMD_fu_1499_data_l16_ce0;
    end else begin
        data_l1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln59_reg_4892_pp2_iter5_reg == 1'd0))) begin
        data_l1_3_we0 = 1'b1;
    end else begin
        data_l1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        data_l2_0_address0 = idxprom_i_fu_3269_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        data_l2_0_address0 = grp_input_dram_read_1_fu_1599_data_l2_0_address0;
    end else begin
        data_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        data_l2_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        data_l2_0_ce0 = grp_input_dram_read_1_fu_1599_data_l2_0_ce0;
    end else begin
        data_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        data_l2_0_we0 = grp_input_dram_read_1_fu_1599_data_l2_0_we0;
    end else begin
        data_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        data_l2_1_address0 = idxprom_i_fu_3269_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        data_l2_1_address0 = grp_input_dram_read_1_fu_1599_data_l2_1_address0;
    end else begin
        data_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        data_l2_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        data_l2_1_ce0 = grp_input_dram_read_1_fu_1599_data_l2_1_ce0;
    end else begin
        data_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        data_l2_1_we0 = grp_input_dram_read_1_fu_1599_data_l2_1_we0;
    end else begin
        data_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        data_l2_2_address0 = idxprom_i_fu_3269_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        data_l2_2_address0 = grp_input_dram_read_1_fu_1599_data_l2_2_address0;
    end else begin
        data_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        data_l2_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        data_l2_2_ce0 = grp_input_dram_read_1_fu_1599_data_l2_2_ce0;
    end else begin
        data_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        data_l2_2_we0 = grp_input_dram_read_1_fu_1599_data_l2_2_we0;
    end else begin
        data_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        data_l2_3_address0 = idxprom_i_fu_3269_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        data_l2_3_address0 = grp_input_dram_read_1_fu_1599_data_l2_3_address0;
    end else begin
        data_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        data_l2_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        data_l2_3_ce0 = grp_input_dram_read_1_fu_1599_data_l2_3_ce0;
    end else begin
        data_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        data_l2_3_we0 = grp_input_dram_read_1_fu_1599_data_l2_3_we0;
    end else begin
        data_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
        dma_control_AWADDR = 64'd22;
    end else if (((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
        dma_control_AWADDR = 64'd18;
    end else if (((1'b0 == ap_block_state20_io) & (1'b1 == ap_CS_fsm_state20))) begin
        dma_control_AWADDR = 64'd10;
    end else if (((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        dma_control_AWADDR = 64'd6;
    end else if (((1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
        dma_control_AWADDR = 32'd0;
    end else if (((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        dma_control_AWADDR = 64'd12;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_AWADDR = grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_AWADDR = grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_AWADDR = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_AWADDR = grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_AWADDR = grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWADDR;
    end else begin
        dma_control_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_AWBURST = grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWBURST;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_AWBURST = grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWBURST;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_AWBURST = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWBURST;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_AWBURST = grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWBURST;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_AWBURST = grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWBURST;
    end else begin
        dma_control_AWBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_AWCACHE = grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWCACHE;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_AWCACHE = grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWCACHE;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_AWCACHE = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWCACHE;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_AWCACHE = grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWCACHE;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_AWCACHE = grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWCACHE;
    end else begin
        dma_control_AWCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_AWID = grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWID;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_AWID = grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWID;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_AWID = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWID;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_AWID = grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWID;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_AWID = grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWID;
    end else begin
        dma_control_AWID = 1'd0;
    end
end

always @ (*) begin
    if ((((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)) | ((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43)) | ((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((1'b0 == ap_block_state20_io) & (1'b1 == ap_CS_fsm_state20)) | ((1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11)))) begin
        dma_control_AWLEN = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_AWLEN = grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_AWLEN = grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_AWLEN = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_AWLEN = grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_AWLEN = grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWLEN;
    end else begin
        dma_control_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_AWLOCK = grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWLOCK;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_AWLOCK = grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWLOCK;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_AWLOCK = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWLOCK;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_AWLOCK = grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWLOCK;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_AWLOCK = grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWLOCK;
    end else begin
        dma_control_AWLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_AWPROT = grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWPROT;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_AWPROT = grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWPROT;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_AWPROT = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWPROT;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_AWPROT = grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWPROT;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_AWPROT = grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWPROT;
    end else begin
        dma_control_AWPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_AWQOS = grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWQOS;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_AWQOS = grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWQOS;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_AWQOS = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWQOS;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_AWQOS = grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWQOS;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_AWQOS = grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWQOS;
    end else begin
        dma_control_AWQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_AWREGION = grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWREGION;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_AWREGION = grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWREGION;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_AWREGION = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWREGION;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_AWREGION = grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWREGION;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_AWREGION = grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWREGION;
    end else begin
        dma_control_AWREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_AWSIZE = grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWSIZE;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_AWSIZE = grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWSIZE;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_AWSIZE = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWSIZE;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_AWSIZE = grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWSIZE;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_AWSIZE = grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWSIZE;
    end else begin
        dma_control_AWSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_AWUSER = grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWUSER;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_AWUSER = grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWUSER;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_AWUSER = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWUSER;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_AWUSER = grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWUSER;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_AWUSER = grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWUSER;
    end else begin
        dma_control_AWUSER = 1'd0;
    end
end

always @ (*) begin
    if ((((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)) | ((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43)) | ((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((1'b0 == ap_block_state20_io) & (1'b1 == ap_CS_fsm_state20)) | ((1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11)))) begin
        dma_control_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_AWVALID = grp_write_mm2s_1_fu_1709_m_axi_dma_control_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_AWVALID = grp_write_s2mm_1_fu_1700_m_axi_dma_control_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_AWVALID = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_AWVALID = grp_input_dram_read_1_fu_1599_m_axi_dma_control_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_AWVALID = grp_output_dram_write_1_fu_1531_m_axi_dma_control_AWVALID;
    end else begin
        dma_control_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state58)) | ((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state57)) | ((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state16)))) begin
        dma_control_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_BREADY = grp_write_mm2s_1_fu_1709_m_axi_dma_control_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_BREADY = grp_write_s2mm_1_fu_1700_m_axi_dma_control_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_BREADY = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_BREADY = grp_input_dram_read_1_fu_1599_m_axi_dma_control_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_BREADY = grp_output_dram_write_1_fu_1531_m_axi_dma_control_BREADY;
    end else begin
        dma_control_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        dma_control_WDATA = 32'd16;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        dma_control_WDATA = add_ln548_reg_3960;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        dma_control_WDATA = 32'd4;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dma_control_WDATA = add_ln529_reg_3737;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        dma_control_WDATA = zext_ln519_fu_1792_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dma_control_WDATA = zext_ln518_fu_1783_p1;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_WDATA = grp_write_mm2s_1_fu_1709_m_axi_dma_control_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_WDATA = grp_write_s2mm_1_fu_1700_m_axi_dma_control_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_WDATA = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_WDATA = grp_input_dram_read_1_fu_1599_m_axi_dma_control_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_WDATA = grp_output_dram_write_1_fu_1531_m_axi_dma_control_WDATA;
    end else begin
        dma_control_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_WID = grp_write_mm2s_1_fu_1709_m_axi_dma_control_WID;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_WID = grp_write_s2mm_1_fu_1700_m_axi_dma_control_WID;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_WID = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WID;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_WID = grp_input_dram_read_1_fu_1599_m_axi_dma_control_WID;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_WID = grp_output_dram_write_1_fu_1531_m_axi_dma_control_WID;
    end else begin
        dma_control_WID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_WLAST = grp_write_mm2s_1_fu_1709_m_axi_dma_control_WLAST;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_WLAST = grp_write_s2mm_1_fu_1700_m_axi_dma_control_WLAST;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_WLAST = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WLAST;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_WLAST = grp_input_dram_read_1_fu_1599_m_axi_dma_control_WLAST;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_WLAST = grp_output_dram_write_1_fu_1531_m_axi_dma_control_WLAST;
    end else begin
        dma_control_WLAST = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        dma_control_WSTRB = 4'd15;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_WSTRB = grp_write_mm2s_1_fu_1709_m_axi_dma_control_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_WSTRB = grp_write_s2mm_1_fu_1700_m_axi_dma_control_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_WSTRB = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_WSTRB = grp_input_dram_read_1_fu_1599_m_axi_dma_control_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_WSTRB = grp_output_dram_write_1_fu_1531_m_axi_dma_control_WSTRB;
    end else begin
        dma_control_WSTRB = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_WUSER = grp_write_mm2s_1_fu_1709_m_axi_dma_control_WUSER;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_WUSER = grp_write_s2mm_1_fu_1700_m_axi_dma_control_WUSER;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_WUSER = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WUSER;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_WUSER = grp_input_dram_read_1_fu_1599_m_axi_dma_control_WUSER;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_WUSER = grp_output_dram_write_1_fu_1531_m_axi_dma_control_WUSER;
    end else begin
        dma_control_WUSER = 1'd0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state20_io) & (1'b1 == ap_CS_fsm_state20)) | ((dma_control_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state53)) | ((dma_control_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52)) | ((dma_control_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((dma_control_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11)))) begin
        dma_control_WVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        dma_control_WVALID = grp_write_mm2s_1_fu_1709_m_axi_dma_control_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68))) begin
        dma_control_WVALID = grp_write_s2mm_1_fu_1700_m_axi_dma_control_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        dma_control_WVALID = grp_weight_dram_read_1_fu_1666_m_axi_dma_control_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state115))) begin
        dma_control_WVALID = grp_input_dram_read_1_fu_1599_m_axi_dma_control_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state156) | ((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1)))) begin
        dma_control_WVALID = grp_output_dram_write_1_fu_1531_m_axi_dma_control_WVALID;
    end else begin
        dma_control_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        dma_control_blk_n_AW = m_axi_dma_control_AWREADY;
    end else begin
        dma_control_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16))) begin
        dma_control_blk_n_B = m_axi_dma_control_BVALID;
    end else begin
        dma_control_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        dma_control_blk_n_W = m_axi_dma_control_WREADY;
    end else begin
        dma_control_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state42) | ((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)) | ((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_1425_ce = 1'b1;
    end else begin
        grp_fu_1425_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        grp_fu_1425_p0 = add_ln59_1_reg_4921;
    end else if (((1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        grp_fu_1425_p0 = trunc_ln59_1_reg_4916;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        grp_fu_1425_p0 = trunc_ln617_1_reg_4632;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_fu_1425_p0 = trunc_ln615_1_reg_4613;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        grp_fu_1425_p0 = trunc_ln613_2_reg_4579;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        grp_fu_1425_p0 = trunc_ln617_fu_2609_p1;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        grp_fu_1425_p0 = trunc_ln615_fu_2604_p1;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        grp_fu_1425_p0 = trunc_ln613_fu_2584_p1;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_1425_p0 = zext_ln574_21_fu_2191_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_fu_1425_p0 = zext_ln574_11_fu_2183_p1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_1425_p0 = zext_ln574_19_fu_2175_p1;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        grp_fu_1425_p0 = zext_ln574_9_fu_2167_p1;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_1425_p0 = zext_ln574_17_fu_2159_p1;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_1425_p0 = zext_ln574_7_fu_2151_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_1425_p0 = zext_ln574_15_fu_2142_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        grp_fu_1425_p0 = zext_ln574_5_fu_2133_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_1425_p0 = zext_ln574_1_fu_2125_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_1425_p0 = zext_ln574_13_fu_2117_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_1425_p0 = trunc_ln538_reg_3819;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_1425_p0 = zext_ln574_3_fu_2022_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_1425_p0 = cast5_fu_1957_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1425_p0 = WH_read_reg_3625;
    end else begin
        grp_fu_1425_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        grp_fu_1425_p1 = empty_126_reg_3636;
    end else if (((1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        grp_fu_1425_p1 = empty_reg_3631;
    end else if (((1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state118))) begin
        grp_fu_1425_p1 = empty_130_reg_3656;
    end else if (((1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state117))) begin
        grp_fu_1425_p1 = empty_131_reg_3661;
    end else if (((1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state116))) begin
        grp_fu_1425_p1 = empty_129_reg_3651;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_1425_p1 = zext_ln574_20_fu_2187_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_fu_1425_p1 = zext_ln574_10_fu_2179_p1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_1425_p1 = zext_ln574_18_fu_2171_p1;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        grp_fu_1425_p1 = zext_ln574_8_fu_2163_p1;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_1425_p1 = zext_ln574_16_fu_2155_p1;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_1425_p1 = zext_ln574_6_fu_2147_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_1425_p1 = zext_ln574_14_fu_2138_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        grp_fu_1425_p1 = zext_ln574_4_fu_2129_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_1425_p1 = zext_ln574_fu_2121_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_1425_p1 = zext_ln574_12_fu_2113_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_1425_p1 = trunc_ln548_reg_3774;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_1425_p1 = zext_ln574_2_fu_2018_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_1425_p1 = cast_fu_1953_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1425_p1 = WH_read_reg_3625;
    end else begin
        grp_fu_1425_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state124) | ((1'b1 == ap_CS_fsm_state156) & (grp_output_dram_write_1_fu_1531_ap_done == 1'b1)))) begin
        grp_fu_2664_ce = 1'b1;
    end else begin
        grp_fu_2664_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state124) | ((1'b1 == ap_CS_fsm_state156) & (grp_output_dram_write_1_fu_1531_ap_done == 1'b1)))) begin
        grp_fu_2670_ce = 1'b1;
    end else begin
        grp_fu_2670_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state124) | ((1'b1 == ap_CS_fsm_state156) & (grp_output_dram_write_1_fu_1531_ap_done == 1'b1)))) begin
        grp_fu_2676_ce = 1'b1;
    end else begin
        grp_fu_2676_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state152) | ((1'b1 == ap_CS_fsm_state153) & (grp_runSIMD_fu_1499_ap_done == 1'b1)))) begin
        grp_fu_3294_ce = 1'b1;
    end else begin
        grp_fu_3294_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state152) | ((1'b1 == ap_CS_fsm_state153) & (grp_runSIMD_fu_1499_ap_done == 1'b1)))) begin
        grp_fu_3300_ce = 1'b1;
    end else begin
        grp_fu_3300_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state152) | ((1'b1 == ap_CS_fsm_state153) & (grp_runSIMD_fu_1499_ap_done == 1'b1)))) begin
        grp_fu_3306_ce = 1'b1;
    end else begin
        grp_fu_3306_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_write_mm2s_1_fu_1709_signal_r = zext_ln516_reg_3457;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_write_mm2s_1_fu_1709_signal_r = 3'd4;
    end else begin
        grp_write_mm2s_1_fu_1709_signal_r = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_write_s2mm_1_fu_1700_signal_r = 13'd4097;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_write_s2mm_1_fu_1700_signal_r = 13'd1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_write_s2mm_1_fu_1700_signal_r = zext_ln515_reg_3452;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_write_s2mm_1_fu_1700_signal_r = zext_ln512_reg_3442;
    end else begin
        grp_write_s2mm_1_fu_1700_signal_r = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        in_data_TDATA_blk_n = in_data_TVALID_int_regslice;
    end else begin
        in_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((in_data_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        in_data_TREADY_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        in_data_TREADY_int_regslice = grp_weight_dram_read_1_fu_1666_in_data_TREADY;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        in_data_TREADY_int_regslice = grp_input_dram_read_1_fu_1599_in_data_TREADY;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        in_data_TREADY_int_regslice = grp_output_dram_write_1_fu_1531_in_data_TREADY;
    end else begin
        in_data_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln550_reg_3965_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln550_reg_3965_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        out_data_TDATA_blk_n = out_data_TREADY_int_regslice;
    end else begin
        out_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln550_reg_3965_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_data_TDATA_int_regslice = select_ln162_reg_4009;
    end else if (((icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        out_data_TDATA_int_regslice = select_ln162_fu_2100_p3;
    end else if (((icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_data_TDATA_int_regslice = tmp_data_V_fu_2075_p6;
    end else if (((1'b1 == ap_CS_fsm_state156) & (grp_output_dram_write_1_fu_1531_out_data_TVALID == 1'b1))) begin
        out_data_TDATA_int_regslice = grp_output_dram_write_1_fu_1531_out_data_TDATA;
    end else begin
        out_data_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln550_reg_3965_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        out_data_TKEEP_int_regslice = 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state156) & (grp_output_dram_write_1_fu_1531_out_data_TVALID == 1'b1))) begin
        out_data_TKEEP_int_regslice = grp_output_dram_write_1_fu_1531_out_data_TKEEP;
    end else begin
        out_data_TKEEP_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln550_reg_3965_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_data_TLAST_int_regslice = tmp_last_V_reg_4004;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        out_data_TLAST_int_regslice = 1'd0;
    end else if (((1'b1 == ap_CS_fsm_state156) & (grp_output_dram_write_1_fu_1531_out_data_TVALID == 1'b1))) begin
        out_data_TLAST_int_regslice = grp_output_dram_write_1_fu_1531_out_data_TLAST;
    end else begin
        out_data_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln550_reg_3965_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        out_data_TSTRB_int_regslice = 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state156) & (grp_output_dram_write_1_fu_1531_out_data_TVALID == 1'b1))) begin
        out_data_TSTRB_int_regslice = grp_output_dram_write_1_fu_1531_out_data_TSTRB;
    end else begin
        out_data_TSTRB_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln550_reg_3965_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln550_reg_3965 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        out_data_TVALID_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        out_data_TVALID_int_regslice = grp_output_dram_write_1_fu_1531_out_data_TVALID;
    end else begin
        out_data_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l1_0_address0 = grp_runOutputL1toL2_fu_1567_output_l1_address0;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        output_l1_0_address0 = grp_runSIMD_fu_1499_output_l1_address0;
    end else begin
        output_l1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l1_0_ce0 = grp_runOutputL1toL2_fu_1567_output_l1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        output_l1_0_ce0 = grp_runSIMD_fu_1499_output_l1_ce0;
    end else begin
        output_l1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state153)) begin
        output_l1_0_we0 = grp_runSIMD_fu_1499_output_l1_we0;
    end else begin
        output_l1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l1_1_address0 = grp_runOutputL1toL2_fu_1567_output_l11_address0;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        output_l1_1_address0 = grp_runSIMD_fu_1499_output_l17_address0;
    end else begin
        output_l1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l1_1_ce0 = grp_runOutputL1toL2_fu_1567_output_l11_ce0;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        output_l1_1_ce0 = grp_runSIMD_fu_1499_output_l17_ce0;
    end else begin
        output_l1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state153)) begin
        output_l1_1_we0 = grp_runSIMD_fu_1499_output_l17_we0;
    end else begin
        output_l1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l1_2_address0 = grp_runOutputL1toL2_fu_1567_output_l12_address0;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        output_l1_2_address0 = grp_runSIMD_fu_1499_output_l18_address0;
    end else begin
        output_l1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l1_2_ce0 = grp_runOutputL1toL2_fu_1567_output_l12_ce0;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        output_l1_2_ce0 = grp_runSIMD_fu_1499_output_l18_ce0;
    end else begin
        output_l1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state153)) begin
        output_l1_2_we0 = grp_runSIMD_fu_1499_output_l18_we0;
    end else begin
        output_l1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l1_3_address0 = grp_runOutputL1toL2_fu_1567_output_l13_address0;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        output_l1_3_address0 = grp_runSIMD_fu_1499_output_l19_address0;
    end else begin
        output_l1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l1_3_ce0 = grp_runOutputL1toL2_fu_1567_output_l13_ce0;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        output_l1_3_ce0 = grp_runSIMD_fu_1499_output_l19_ce0;
    end else begin
        output_l1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state153)) begin
        output_l1_3_we0 = grp_runSIMD_fu_1499_output_l19_we0;
    end else begin
        output_l1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_0_address0 = grp_runOutputL1toL2_fu_1567_output_l2_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        output_l2_0_address0 = grp_output_dram_write_1_fu_1531_output_l2_0_address0;
    end else begin
        output_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_0_ce0 = grp_runOutputL1toL2_fu_1567_output_l2_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        output_l2_0_ce0 = grp_output_dram_write_1_fu_1531_output_l2_0_ce0;
    end else begin
        output_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_0_ce1 = grp_runOutputL1toL2_fu_1567_output_l2_0_ce1;
    end else begin
        output_l2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_0_we0 = grp_runOutputL1toL2_fu_1567_output_l2_0_we0;
    end else begin
        output_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_0_we1 = grp_runOutputL1toL2_fu_1567_output_l2_0_we1;
    end else begin
        output_l2_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_1_address0 = grp_runOutputL1toL2_fu_1567_output_l2_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        output_l2_1_address0 = grp_output_dram_write_1_fu_1531_output_l2_1_address0;
    end else begin
        output_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_1_ce0 = grp_runOutputL1toL2_fu_1567_output_l2_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        output_l2_1_ce0 = grp_output_dram_write_1_fu_1531_output_l2_1_ce0;
    end else begin
        output_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_1_ce1 = grp_runOutputL1toL2_fu_1567_output_l2_1_ce1;
    end else begin
        output_l2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_1_we0 = grp_runOutputL1toL2_fu_1567_output_l2_1_we0;
    end else begin
        output_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_1_we1 = grp_runOutputL1toL2_fu_1567_output_l2_1_we1;
    end else begin
        output_l2_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_2_address0 = grp_runOutputL1toL2_fu_1567_output_l2_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        output_l2_2_address0 = grp_output_dram_write_1_fu_1531_output_l2_2_address0;
    end else begin
        output_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_2_ce0 = grp_runOutputL1toL2_fu_1567_output_l2_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        output_l2_2_ce0 = grp_output_dram_write_1_fu_1531_output_l2_2_ce0;
    end else begin
        output_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_2_ce1 = grp_runOutputL1toL2_fu_1567_output_l2_2_ce1;
    end else begin
        output_l2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_2_we0 = grp_runOutputL1toL2_fu_1567_output_l2_2_we0;
    end else begin
        output_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_2_we1 = grp_runOutputL1toL2_fu_1567_output_l2_2_we1;
    end else begin
        output_l2_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_3_address0 = grp_runOutputL1toL2_fu_1567_output_l2_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        output_l2_3_address0 = grp_output_dram_write_1_fu_1531_output_l2_3_address0;
    end else begin
        output_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_3_ce0 = grp_runOutputL1toL2_fu_1567_output_l2_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        output_l2_3_ce0 = grp_output_dram_write_1_fu_1531_output_l2_3_ce0;
    end else begin
        output_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        output_l2_3_we0 = grp_runOutputL1toL2_fu_1567_output_l2_3_we0;
    end else begin
        output_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        weight_l2_0_address0 = grp_weight_dram_read_1_fu_1666_weight_l2_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        weight_l2_0_address0 = grp_runWeight2Reg_fu_1631_weight_l2_0_address0;
    end else begin
        weight_l2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        weight_l2_0_ce0 = grp_weight_dram_read_1_fu_1666_weight_l2_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        weight_l2_0_ce0 = grp_runWeight2Reg_fu_1631_weight_l2_0_ce0;
    end else begin
        weight_l2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        weight_l2_0_we0 = grp_weight_dram_read_1_fu_1666_weight_l2_0_we0;
    end else begin
        weight_l2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        weight_l2_1_address0 = grp_weight_dram_read_1_fu_1666_weight_l2_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        weight_l2_1_address0 = grp_runWeight2Reg_fu_1631_weight_l2_1_address0;
    end else begin
        weight_l2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        weight_l2_1_ce0 = grp_weight_dram_read_1_fu_1666_weight_l2_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        weight_l2_1_ce0 = grp_runWeight2Reg_fu_1631_weight_l2_1_ce0;
    end else begin
        weight_l2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        weight_l2_1_we0 = grp_weight_dram_read_1_fu_1666_weight_l2_1_we0;
    end else begin
        weight_l2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        weight_l2_2_address0 = grp_weight_dram_read_1_fu_1666_weight_l2_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        weight_l2_2_address0 = grp_runWeight2Reg_fu_1631_weight_l2_2_address0;
    end else begin
        weight_l2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        weight_l2_2_ce0 = grp_weight_dram_read_1_fu_1666_weight_l2_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        weight_l2_2_ce0 = grp_runWeight2Reg_fu_1631_weight_l2_2_ce0;
    end else begin
        weight_l2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        weight_l2_2_we0 = grp_weight_dram_read_1_fu_1666_weight_l2_2_we0;
    end else begin
        weight_l2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        weight_l2_3_address0 = grp_weight_dram_read_1_fu_1666_weight_l2_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        weight_l2_3_address0 = grp_runWeight2Reg_fu_1631_weight_l2_3_address0;
    end else begin
        weight_l2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        weight_l2_3_ce0 = grp_weight_dram_read_1_fu_1666_weight_l2_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        weight_l2_3_ce0 = grp_runWeight2Reg_fu_1631_weight_l2_3_ce0;
    end else begin
        weight_l2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        weight_l2_3_we0 = grp_weight_dram_read_1_fu_1666_weight_l2_3_we0;
    end else begin
        weight_l2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_write_s2mm_1_fu_1700_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_write_mm2s_1_fu_1709_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_write_s2mm_1_fu_1700_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_write_mm2s_1_fu_1709_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((dma_control_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln523_fu_1891_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b0 == ap_block_state20_io) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((dma_control_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((icmp_ln531_fu_1925_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((in_data_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln538_fu_1974_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((dma_control_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            if (((dma_control_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((dma_control_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            if (((dma_control_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((icmp_ln550_reg_3965 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((icmp_ln550_reg_3965 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            if (((out_responsed_read_read_fu_594_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state67))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            if (((grp_write_s2mm_1_fu_1700_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state69))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            if (((grp_write_s2mm_1_fu_1700_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state71))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            if (((1'b1 == ap_CS_fsm_state108) & (icmp_ln574_reg_4221 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state158;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            if (((grp_weight_dram_read_1_fu_1666_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state113))) begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            if (((grp_input_dram_read_1_fu_1599_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state115))) begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            if (((1'b1 == ap_CS_fsm_state124) & (icmp_ln611_reg_4424 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state156;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            if (((1'b1 == ap_CS_fsm_state138) & (grp_runWeight2Reg_fu_1631_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state138;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln59_fu_3185_p2 == 1'd1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1) & (ap_enable_reg_pp2_iter5 == 1'b0)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1) & (ap_enable_reg_pp2_iter5 == 1'b0)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln59_fu_3185_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state152;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            if (((1'b1 == ap_CS_fsm_state153) & (grp_runSIMD_fu_1499_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state154;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state153;
            end
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            if (((grp_runOutputL1toL2_fu_1567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state155))) begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state155;
            end
        end
        ap_ST_fsm_state156 : begin
            if (((1'b1 == ap_CS_fsm_state156) & (grp_output_dram_write_1_fu_1531_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state157;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state156;
            end
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state158 : begin
            if (((regslice_both_out_data_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state158))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state158;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add13_i_fu_3264_p2 = (tmp4_fu_3259_p2 + tmp3_reg_4711);

assign add17_i_fu_3254_p1 = reg_1738;

assign add17_i_fu_3254_p2 = (empty_143_reg_4931_pp2_iter3_reg + add17_i_fu_3254_p1);

assign add_ln523_fu_1896_p2 = (ko_reg_1059 + 30'd1);

assign add_ln529_fu_1920_p2 = ($signed(bias_addr_read_reg_3489) + $signed(sext_ln529_fu_1916_p1));

assign add_ln531_fu_1931_p2 = (ki_reg_1070 + 3'd1);

assign add_ln538_1_fu_1980_p2 = (indvar_flatten_reg_1081 + 62'd1);

assign add_ln538_fu_1986_p2 = (30'd1 + ko_2_reg_1092);

assign add_ln547_fu_2037_p1 = reg_1734;

assign add_ln547_fu_2037_p2 = (trunc_ln541_fu_2033_p1 + add_ln547_fu_2037_p1);

assign add_ln548_fu_2054_p2 = ($signed(output_addr_read_reg_3473) + $signed(sext_ln548_fu_2050_p1));

assign add_ln550_fu_2065_p2 = (ki_2_reg_1115 + 3'd1);

assign add_ln582_1_fu_2658_p2 = (indvar_flatten405_reg_1223 + 64'd1);

assign add_ln59_1_fu_3235_p2 = (add_ln59_fu_3231_p2 + select_ln619_2_reg_4691);

assign add_ln59_2_fu_3191_p2 = (ap_phi_mux_indvar_flatten10_phi_fu_1395_p4 + 64'd1);

assign add_ln59_fu_3231_p2 = (select_ln613_2_reg_4670 + trunc_ln59_reg_4911);

assign add_ln619_1_fu_3288_p2 = (indvar_flatten17_reg_1355 + 64'd1);

assign add_ln61_fu_3248_p2 = (32'd1 + select_ln59_fu_3224_p3);

assign addr_1_fu_2043_p3 = {{add_ln547_reg_3955}, {4'd0}};

assign addr_fu_1910_p2 = zext_ln528_fu_1906_p1 << 16'd2;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd98];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state157 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state158 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd95];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state63_io));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state63_io));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state64_io));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state64_io));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state65_io)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state61_io)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state65_io)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state61_io)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state62_io));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state62_io));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((dma_control_WREADY == 1'b0) | (dma_control_AWREADY == 1'b0));
end

assign ap_block_state139_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp2_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp2_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp2_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state149_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state150_pp2_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_io = ((dma_control_WREADY == 1'b0) | (dma_control_AWREADY == 1'b0));
end

assign ap_block_state59_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state61_io = ((out_data_TREADY_int_regslice == 1'b0) & (icmp_ln550_reg_3965 == 1'd0));
end

assign ap_block_state61_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state62_io = ((out_data_TREADY_int_regslice == 1'b0) & (icmp_ln550_reg_3965 == 1'd0));
end

assign ap_block_state62_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state63_io = ((out_data_TREADY_int_regslice == 1'b0) & (icmp_ln550_reg_3965 == 1'd0));
end

assign ap_block_state63_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state64_io = ((icmp_ln550_reg_3965_pp0_iter1_reg == 1'd0) & (out_data_TREADY_int_regslice == 1'b0));
end

assign ap_block_state64_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state65_io = ((icmp_ln550_reg_3965_pp0_iter1_reg == 1'd0) & (out_data_TREADY_int_regslice == 1'b0));
end

assign ap_block_state65_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cast5_fu_1957_p0 = reg_1726;

assign cast5_fu_1957_p1 = cast5_fu_1957_p0;

assign cast_fu_1953_p1 = trunc_ln_reg_3711;

assign cmo_2_fu_2363_p2 = (32'd1 + select_ln574_reg_4265);

assign co_4_fu_2770_p2 = (32'd1 + select_ln611_reg_4512);

assign empty_126_fu_1801_p1 = W_in_L2[10:0];

assign empty_127_fu_1805_p1 = H_L2[10:0];

assign empty_128_fu_1809_p1 = W_L2[10:0];

assign empty_129_fu_1813_p1 = H_in_L2[10:0];

assign empty_130_fu_1817_p1 = TILESIZE_W[10:0];

assign empty_131_fu_1821_p1 = TILESIZE_H[10:0];

assign empty_132_fu_1825_p1 = S_L2[11:0];

assign empty_133_fu_1829_p1 = R_L2[11:0];

assign empty_134_fu_1833_p1 = C_L2[11:0];

assign empty_135_fu_1837_p1 = WH_in[13:0];

assign empty_136_fu_1841_p1 = W_L2[13:0];

assign empty_137_fu_1845_p1 = H_L2[13:0];

assign empty_138_fu_1849_p1 = L2_TILENUM_S[13:0];

assign empty_139_fu_1853_p1 = L2_TILENUM_R[13:0];

assign empty_140_fu_1857_p1 = L2_TILENUM_C[13:0];

assign empty_142_fu_3240_p1 = select_ln59_fu_3224_p3[10:0];

assign empty_143_fu_3244_p1 = select_ln59_fu_3224_p3[7:0];

assign empty_fu_1797_p1 = TILESIZE_W[7:0];

assign grp_input_dram_read_1_fu_1599_ap_start = grp_input_dram_read_1_fu_1599_ap_start_reg;

assign grp_output_dram_write_1_fu_1531_ap_start = grp_output_dram_write_1_fu_1531_ap_start_reg;

assign grp_output_dram_write_1_fu_1531_out_data_TREADY = (out_data_TREADY_int_regslice & ap_CS_fsm_state156);

assign grp_runOutputL1toL2_fu_1567_ap_start = grp_runOutputL1toL2_fu_1567_ap_start_reg;

assign grp_runSIMD_fu_1499_ap_start = grp_runSIMD_fu_1499_ap_start_reg;

assign grp_runWeight2Reg_fu_1631_ap_start = grp_runWeight2Reg_fu_1631_ap_start_reg;

assign grp_weight_dram_read_1_fu_1666_ap_start = grp_weight_dram_read_1_fu_1666_ap_start_reg;

assign grp_write_mm2s_1_fu_1709_ap_start = grp_write_mm2s_1_fu_1709_ap_start_reg;

assign grp_write_s2mm_1_fu_1700_ap_start = grp_write_s2mm_1_fu_1700_ap_start_reg;

assign hi_5_fu_3197_p2 = (32'd1 + ap_phi_mux_hi_phi_fu_1406_p4);

assign hmo_2_fu_2402_p2 = (32'd1 + select_ln576_reg_4296);

assign ho_2_fu_2802_p2 = (32'd1 + select_ln613_reg_4551);

assign icmp_ln523_fu_1891_p2 = ((ko_reg_1059 == trunc_ln_reg_3711) ? 1'b1 : 1'b0);

assign icmp_ln531_fu_1925_p2 = ((ki_reg_1070 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln538_fu_1974_p1 = reg_1730;

assign icmp_ln538_fu_1974_p2 = ((indvar_flatten_reg_1081 == icmp_ln538_fu_1974_p1) ? 1'b1 : 1'b0);

assign icmp_ln541_fu_1992_p1 = reg_1726;

assign icmp_ln541_fu_1992_p2 = ((wh_reg_1103 == icmp_ln541_fu_1992_p1) ? 1'b1 : 1'b0);

assign icmp_ln550_fu_2059_p2 = ((ap_phi_mux_ki_2_phi_fu_1119_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln574_fu_2237_p2 = ((indvar_flatten751_reg_1127 == mul_ln574_10_reg_4164) ? 1'b1 : 1'b0);

assign icmp_ln576_fu_2248_p2 = ((indvar_flatten625_reg_1151 == mul_ln574_9_reg_4143) ? 1'b1 : 1'b0);

assign icmp_ln578_1_fu_2269_p2 = ((indvar_flatten525_reg_1175 == mul_ln574_8_reg_4110) ? 1'b1 : 1'b0);

assign icmp_ln578_fu_2211_p2 = ((mul_ln574_8_reg_4110 == 128'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_1_fu_2264_p2 = ((indvar_flatten451_reg_1199 == mul_ln574_7_reg_4076) ? 1'b1 : 1'b0);

assign icmp_ln580_fu_2206_p2 = ((mul_ln574_7_reg_4076 == 96'd0) ? 1'b1 : 1'b0);

assign icmp_ln582_1_fu_2258_p2 = ((indvar_flatten405_reg_1223 == reg_1730) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_2200_p2 = ((reg_1730 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln584_1_fu_2253_p2 = ((smo_reg_1247 == L2_TILENUM_S_read_reg_3593) ? 1'b1 : 1'b0);

assign icmp_ln584_fu_2195_p2 = ((L2_TILENUM_S_read_reg_3593 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_3185_p2 = ((ap_phi_mux_indvar_flatten10_phi_fu_1395_p4 == reg_1734) ? 1'b1 : 1'b0);

assign icmp_ln611_fu_2593_p2 = ((indvar_flatten397_reg_1259 == mul_ln574_5_reg_4159) ? 1'b1 : 1'b0);

assign icmp_ln613_fu_2627_p2 = ((indvar_flatten257_reg_1319 == mul_ln574_4_reg_4127) ? 1'b1 : 1'b0);

assign icmp_ln615_1_fu_2648_p2 = ((indvar_flatten147_reg_1331 == mul_ln574_3_reg_4093) ? 1'b1 : 1'b0);

assign icmp_ln615_fu_2232_p2 = ((mul_ln574_3_reg_4093 == 128'd0) ? 1'b1 : 1'b0);

assign icmp_ln617_1_fu_2643_p2 = ((indvar_flatten67_reg_1343 == mul_ln574_2_reg_4059) ? 1'b1 : 1'b0);

assign icmp_ln617_fu_2227_p2 = ((mul_ln574_2_reg_4059 == 96'd0) ? 1'b1 : 1'b0);

assign icmp_ln619_1_fu_2637_p2 = ((indvar_flatten17_reg_1355 == reg_1726) ? 1'b1 : 1'b0);

assign icmp_ln619_fu_2221_p2 = ((reg_1726 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_3203_p2 = ((ap_phi_mux_wi_phi_fu_1417_p4 == TILESIZE_W_read_reg_3511) ? 1'b1 : 1'b0);

assign icmp_ln621_1_fu_2632_p2 = ((so_reg_1379 == L1_TILENUM_S_read_reg_3519) ? 1'b1 : 1'b0);

assign icmp_ln621_fu_2216_p2 = ((L1_TILENUM_S_read_reg_3519 == 32'd0) ? 1'b1 : 1'b0);

assign idxprom18_i_fu_3276_p1 = add17_i_reg_4941_pp2_iter5_reg;

assign idxprom_i_fu_3269_p1 = add13_i_reg_4946;

assign in_data_TREADY = regslice_both_in_data_V_data_V_U_ack_in;

assign isFirst_fu_3045_p2 = ((or_ln631_fu_3040_p2 == 32'd0) ? 1'b1 : 1'b0);

assign kmo_2_fu_2274_p2 = (32'd1 + kmo_reg_1139);

assign ko_5_fu_2682_p2 = (32'd1 + ko_3_reg_1307);

assign or_ln576_fu_2313_p2 = (select_ln574_6_fu_2308_p3 | icmp_ln576_reg_4230);

assign or_ln578_1_fu_2411_p2 = (or_ln578_fu_2407_p2 | icmp_ln576_reg_4230);

assign or_ln578_fu_2407_p2 = (select_ln576_5_reg_4302 | select_ln574_6_reg_4281);

assign or_ln580_1_fu_2451_p2 = (or_ln580_fu_2447_p2 | or_ln576_reg_4289);

assign or_ln580_fu_2447_p2 = (select_ln578_5_reg_4311 | select_ln576_5_reg_4302);

assign or_ln582_1_fu_2545_p2 = (or_ln582_fu_2541_p2 | or_ln578_reg_4332);

assign or_ln582_2_fu_2550_p2 = (or_ln582_1_fu_2545_p2 | icmp_ln576_reg_4230);

assign or_ln582_fu_2541_p2 = (select_ln580_4_reg_4372 | select_ln578_5_reg_4311);

assign or_ln613_fu_2725_p2 = (select_ln611_7_fu_2720_p3 | icmp_ln613_reg_4466);

assign or_ln615_1_fu_2811_p2 = (or_ln615_fu_2807_p2 | icmp_ln613_reg_4466);

assign or_ln615_fu_2807_p2 = (select_ln613_8_reg_4557 | select_ln611_7_reg_4533);

assign or_ln617_1_fu_2889_p2 = (or_ln617_fu_2885_p2 | or_ln613_reg_4542);

assign or_ln617_fu_2885_p2 = (select_ln615_7_reg_4568 | select_ln613_8_reg_4557);

assign or_ln619_1_fu_3009_p2 = (or_ln619_fu_3005_p2 | or_ln615_reg_4595);

assign or_ln619_2_fu_3014_p2 = (or_ln619_1_fu_3009_p2 | icmp_ln613_reg_4466);

assign or_ln619_fu_3005_p2 = (select_ln617_5_reg_4624 | select_ln615_7_reg_4568);

assign or_ln631_1_fu_3035_p2 = (select_ln619_fu_3019_p3 | select_ln613_9_reg_4589);

assign or_ln631_fu_3040_p2 = (select_ln619_3_reg_4685 | or_ln631_1_fu_3035_p2);

assign out_data_TVALID = regslice_both_out_data_V_data_V_U_vld_out;

assign out_responsed_read_read_fu_594_p2 = out_responsed;

assign rmo_2_fu_2536_p2 = (32'd1 + select_ln580_reg_4366);

assign ro_2_fu_2921_p2 = (32'd1 + select_ln617_reg_4664);

assign select_ln162_fu_2100_p3 = ((tmp_data_V_4_reg_3999[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln538_1_fu_1998_p3 = ((icmp_ln541_fu_1992_p2[0:0] === 1'b1) ? add_ln538_fu_1986_p2 : ko_2_reg_1092);

assign select_ln538_fu_2026_p3 = ((icmp_ln541_reg_3809[0:0] === 1'b1) ? 32'd0 : wh_reg_1103);

assign select_ln574_1_fu_2287_p3 = ((icmp_ln576_reg_4230[0:0] === 1'b1) ? kmo_2_fu_2274_p2 : kmo_reg_1139);

assign select_ln574_2_fu_2351_p3 = ((icmp_ln576_reg_4230[0:0] === 1'b1) ? 14'd0 : trunc_ln576_fu_2347_p1);

assign select_ln574_3_fu_2358_p3 = ((icmp_ln576_reg_4230[0:0] === 1'b1) ? icmp_ln584_reg_4169 : icmp_ln584_1_reg_4245);

assign select_ln574_4_fu_2298_p3 = ((icmp_ln576_reg_4230[0:0] === 1'b1) ? icmp_ln582_reg_4177 : icmp_ln582_1_reg_4250);

assign select_ln574_5_fu_2303_p3 = ((icmp_ln576_reg_4230[0:0] === 1'b1) ? icmp_ln580_reg_4184 : icmp_ln580_1_reg_4255);

assign select_ln574_6_fu_2308_p3 = ((icmp_ln576_reg_4230[0:0] === 1'b1) ? icmp_ln578_reg_4190 : icmp_ln578_1_reg_4260);

assign select_ln574_fu_2280_p3 = ((icmp_ln576_reg_4230[0:0] === 1'b1) ? 32'd0 : cmo_reg_1163);

assign select_ln576_1_fu_2372_p3 = ((select_ln574_6_reg_4281[0:0] === 1'b1) ? trunc_ln576_1_fu_2368_p1 : select_ln574_2_fu_2351_p3);

assign select_ln576_2_fu_2383_p3 = ((or_ln576_reg_4289[0:0] === 1'b1) ? 14'd0 : trunc_ln578_fu_2379_p1);

assign select_ln576_3_fu_2390_p3 = ((select_ln574_6_reg_4281[0:0] === 1'b1) ? icmp_ln584_reg_4169 : select_ln574_3_fu_2358_p3);

assign select_ln576_4_fu_2326_p3 = ((select_ln574_6_fu_2308_p3[0:0] === 1'b1) ? icmp_ln582_reg_4177 : select_ln574_4_fu_2298_p3);

assign select_ln576_5_fu_2333_p3 = ((select_ln574_6_fu_2308_p3[0:0] === 1'b1) ? icmp_ln580_reg_4184 : select_ln574_5_fu_2303_p3);

assign select_ln576_6_fu_2396_p3 = ((select_ln574_6_reg_4281[0:0] === 1'b1) ? cmo_2_fu_2363_p2 : select_ln574_reg_4265);

assign select_ln576_7_fu_3418_p3 = ((icmp_ln576_reg_4230[0:0] === 1'b1) ? 160'd1 : add_ln576_1_reg_5051);

assign select_ln576_fu_2318_p3 = ((or_ln576_fu_2313_p2[0:0] === 1'b1) ? 32'd0 : hmo_reg_1187);

assign select_ln578_1_fu_2428_p3 = ((select_ln576_5_reg_4302[0:0] === 1'b1) ? trunc_ln578_1_fu_2424_p1 : select_ln576_2_fu_2383_p3);

assign select_ln578_2_fu_2482_p3 = ((or_ln578_1_reg_4337[0:0] === 1'b1) ? 12'd0 : trunc_ln580_fu_2470_p1);

assign select_ln578_3_fu_2489_p3 = ((or_ln578_1_reg_4337[0:0] === 1'b1) ? 14'd0 : trunc_ln580_1_fu_2474_p1);

assign select_ln578_4_fu_2435_p3 = ((select_ln576_5_reg_4302[0:0] === 1'b1) ? icmp_ln584_reg_4169 : select_ln576_3_fu_2390_p3);

assign select_ln578_5_fu_2340_p3 = ((select_ln576_5_fu_2333_p3[0:0] === 1'b1) ? icmp_ln582_reg_4177 : select_ln576_4_fu_2326_p3);

assign select_ln578_6_fu_2441_p3 = ((select_ln576_5_reg_4302[0:0] === 1'b1) ? hmo_2_fu_2402_p2 : select_ln576_reg_4296);

assign select_ln578_7_fu_3412_p3 = ((or_ln576_reg_4289[0:0] === 1'b1) ? 128'd1 : add_ln578_1_reg_5046);

assign select_ln578_fu_2416_p3 = ((or_ln578_1_fu_2411_p2[0:0] === 1'b1) ? 32'd0 : wmo_reg_1211);

assign select_ln580_1_fu_2505_p3 = ((select_ln578_5_reg_4311[0:0] === 1'b1) ? trunc_ln580_2_fu_2501_p1 : select_ln578_2_fu_2482_p3);

assign select_ln580_2_fu_2516_p3 = ((select_ln578_5_reg_4311[0:0] === 1'b1) ? trunc_ln580_3_fu_2512_p1 : select_ln578_3_fu_2489_p3);

assign select_ln580_3_fu_2523_p3 = ((or_ln580_1_reg_4360[0:0] === 1'b1) ? 14'd0 : trunc_ln582_fu_2478_p1);

assign select_ln580_4_fu_2464_p3 = ((select_ln578_5_reg_4311[0:0] === 1'b1) ? icmp_ln584_reg_4169 : select_ln578_4_fu_2435_p3);

assign select_ln580_5_fu_2530_p3 = ((select_ln578_5_reg_4311[0:0] === 1'b1) ? wmo_2_fu_2496_p2 : select_ln578_reg_4344);

assign select_ln580_6_fu_3406_p3 = ((or_ln578_1_reg_4337[0:0] === 1'b1) ? 96'd1 : add_ln580_1_reg_5041);

assign select_ln580_fu_2456_p3 = ((or_ln580_1_fu_2451_p2[0:0] === 1'b1) ? 32'd0 : rmo_reg_1235);

assign select_ln582_1_fu_2567_p3 = ((select_ln580_4_reg_4372[0:0] === 1'b1) ? trunc_ln582_1_fu_2563_p1 : select_ln580_3_fu_2523_p3);

assign select_ln582_2_fu_2574_p3 = ((select_ln580_4_reg_4372[0:0] === 1'b1) ? rmo_2_fu_2536_p2 : select_ln580_reg_4366);

assign select_ln582_3_fu_3400_p3 = ((or_ln580_1_reg_4360[0:0] === 1'b1) ? 64'd1 : add_ln582_1_reg_4507);

assign select_ln582_fu_2555_p3 = ((or_ln582_2_fu_2550_p2[0:0] === 1'b1) ? 32'd0 : smo_reg_1247);

assign select_ln59_1_fu_3208_p3 = ((icmp_ln61_fu_3203_p2[0:0] === 1'b1) ? hi_5_fu_3197_p2 : ap_phi_mux_hi_phi_fu_1406_p4);

assign select_ln59_fu_3224_p3 = ((icmp_ln61_reg_4901[0:0] === 1'b1) ? 32'd0 : wi_reg_1413);

assign select_ln611_1_fu_2695_p3 = ((icmp_ln613_reg_4466[0:0] === 1'b1) ? ko_5_fu_2682_p2 : ko_3_reg_1307);

assign select_ln611_2_fu_2759_p3 = ((icmp_ln613_reg_4466[0:0] === 1'b1) ? 10'd0 : trunc_ln613_1_reg_4419);

assign select_ln611_3_fu_2902_p3 = ((icmp_ln613_reg_4466[0:0] === 1'b1) ? 11'd0 : reg_1738);

assign select_ln611_4_fu_2765_p3 = ((icmp_ln613_reg_4466[0:0] === 1'b1) ? icmp_ln621_reg_4195 : icmp_ln621_1_reg_4482);

assign select_ln611_5_fu_2710_p3 = ((icmp_ln613_reg_4466[0:0] === 1'b1) ? icmp_ln619_reg_4203 : icmp_ln619_1_reg_4487);

assign select_ln611_6_fu_2715_p3 = ((icmp_ln613_reg_4466[0:0] === 1'b1) ? icmp_ln617_reg_4210 : icmp_ln617_1_reg_4492);

assign select_ln611_7_fu_2720_p3 = ((icmp_ln613_reg_4466[0:0] === 1'b1) ? icmp_ln615_reg_4216 : icmp_ln615_1_reg_4497);

assign select_ln611_fu_2688_p3 = ((icmp_ln613_reg_4466[0:0] === 1'b1) ? 32'd0 : co_reg_1271);

assign select_ln613_10_fu_3394_p3 = ((icmp_ln613_reg_4466[0:0] === 1'b1) ? 160'd1 : add_ln613_1_reg_5016);

assign select_ln613_1_fu_2783_p3 = ((select_ln611_7_reg_4533[0:0] === 1'b1) ? trunc_ln613_3_fu_2779_p1 : select_ln611_2_fu_2759_p3);

assign select_ln613_2_fu_2909_p3 = ((select_ln611_7_reg_4533[0:0] === 1'b1) ? mul9_i_mid1_reg_4653 : select_ln611_3_fu_2902_p3);

assign select_ln613_3_fu_2861_p3 = ((or_ln613_reg_4542[0:0] === 1'b1) ? 11'd0 : trunc_ln615_reg_4428);

assign select_ln613_4_fu_2947_p3 = ((or_ln613_reg_4542[0:0] === 1'b1) ? 11'd0 : mul3_i_reg_4445);

assign select_ln613_5_fu_2953_p3 = ((or_ln613_reg_4542[0:0] === 1'b1) ? 11'd0 : tmp1_reg_4461);

assign select_ln613_6_fu_2790_p3 = ((select_ln611_7_reg_4533[0:0] === 1'b1) ? icmp_ln621_reg_4195 : select_ln611_4_fu_2765_p3);

assign select_ln613_7_fu_2738_p3 = ((select_ln611_7_fu_2720_p3[0:0] === 1'b1) ? icmp_ln619_reg_4203 : select_ln611_5_fu_2710_p3);

assign select_ln613_8_fu_2745_p3 = ((select_ln611_7_fu_2720_p3[0:0] === 1'b1) ? icmp_ln617_reg_4210 : select_ln611_6_fu_2715_p3);

assign select_ln613_9_fu_2796_p3 = ((select_ln611_7_reg_4533[0:0] === 1'b1) ? co_4_fu_2770_p2 : select_ln611_reg_4512);

assign select_ln613_fu_2730_p3 = ((or_ln613_fu_2725_p2[0:0] === 1'b1) ? 32'd0 : ho_reg_1283);

assign select_ln615_1_fu_2867_p3 = ((select_ln613_8_reg_4557[0:0] === 1'b1) ? trunc_ln615_1_reg_4613 : select_ln613_3_fu_2861_p3);

assign select_ln615_2_fu_2959_p3 = ((select_ln613_8_reg_4557[0:0] === 1'b1) ? reg_1738 : select_ln613_4_fu_2947_p3);

assign select_ln615_3_fu_2873_p3 = ((or_ln615_1_reg_4600[0:0] === 1'b1) ? 11'd0 : trunc_ln617_reg_4439);

assign select_ln615_4_fu_2992_p3 = ((or_ln615_1_reg_4600[0:0] === 1'b1) ? 11'd0 : mul6_i_reg_4451);

assign select_ln615_5_fu_2966_p3 = ((select_ln613_8_reg_4557[0:0] === 1'b1) ? reg_1738 : select_ln613_5_fu_2953_p3);

assign select_ln615_6_fu_2828_p3 = ((select_ln613_8_reg_4557[0:0] === 1'b1) ? icmp_ln621_reg_4195 : select_ln613_6_fu_2790_p3);

assign select_ln615_7_fu_2752_p3 = ((select_ln613_8_fu_2745_p3[0:0] === 1'b1) ? icmp_ln619_reg_4203 : select_ln613_7_fu_2738_p3);

assign select_ln615_8_fu_2834_p3 = ((select_ln613_8_reg_4557[0:0] === 1'b1) ? ho_2_fu_2802_p2 : select_ln613_reg_4551);

assign select_ln615_9_fu_3388_p3 = ((or_ln613_reg_4542[0:0] === 1'b1) ? 128'd1 : add_ln615_1_reg_5011);

assign select_ln615_fu_2816_p3 = ((or_ln615_1_fu_2811_p2[0:0] === 1'b1) ? 32'd0 : wo_reg_1295);

assign select_ln617_1_fu_2879_p3 = ((select_ln615_7_reg_4568[0:0] === 1'b1) ? trunc_ln617_1_reg_4632 : select_ln615_3_fu_2873_p3);

assign select_ln617_2_fu_2998_p3 = ((select_ln615_7_reg_4568[0:0] === 1'b1) ? reg_1738 : select_ln615_4_fu_2992_p3);

assign select_ln617_3_fu_2915_p3 = ((or_ln617_1_reg_4658[0:0] === 1'b1) ? 12'd0 : trunc_ln619_1_reg_4456);

assign select_ln617_4_fu_2973_p3 = ((select_ln615_7_reg_4568[0:0] === 1'b1) ? select_ln615_2_fu_2959_p3 : select_ln615_5_fu_2966_p3);

assign select_ln617_5_fu_2840_p3 = ((select_ln615_7_reg_4568[0:0] === 1'b1) ? icmp_ln621_reg_4195 : select_ln615_6_fu_2828_p3);

assign select_ln617_6_fu_2855_p3 = ((select_ln615_7_reg_4568[0:0] === 1'b1) ? wo_2_fu_2846_p2 : select_ln615_reg_4607);

assign select_ln617_7_fu_3382_p3 = ((or_ln615_1_reg_4600[0:0] === 1'b1) ? 96'd1 : add_ln617_1_reg_5006);

assign select_ln617_fu_2894_p3 = ((or_ln617_1_fu_2889_p2[0:0] === 1'b1) ? 32'd0 : ro_reg_1367);

assign select_ln619_1_fu_2934_p3 = ((select_ln617_5_reg_4624[0:0] === 1'b1) ? trunc_ln619_3_fu_2930_p1 : select_ln617_3_fu_2915_p3);

assign select_ln619_2_fu_2985_p3 = ((select_ln617_5_reg_4624[0:0] === 1'b1) ? tmp1_mid1_fu_2980_p2 : select_ln617_4_fu_2973_p3);

assign select_ln619_3_fu_2941_p3 = ((select_ln617_5_reg_4624[0:0] === 1'b1) ? ro_2_fu_2921_p2 : select_ln617_reg_4664);

assign select_ln619_4_fu_3376_p3 = ((or_ln617_1_reg_4658[0:0] === 1'b1) ? 64'd1 : add_ln619_1_reg_4996);

assign select_ln619_fu_3019_p3 = ((or_ln619_2_fu_3014_p2[0:0] === 1'b1) ? 32'd0 : so_reg_1379);

assign sext_ln518_fu_1779_p1 = $signed(signal3_fu_460);

assign sext_ln519_fu_1788_p1 = $signed(signal3_fu_460);

assign sext_ln529_fu_1916_p1 = addr_fu_1910_p2;

assign sext_ln548_fu_2050_p1 = $signed(addr_1_fu_2043_p3);

assign signal2_fu_456 = 1'd0;

assign signal3_fu_460 = 13'd4097;

assign signal_fu_452 = 3'd4;

assign smo_1_fu_2653_p2 = (select_ln582_reg_4394 + 32'd1);

assign so_1_fu_3283_p2 = (select_ln619_reg_4696 + 32'd1);

assign tmp1_fu_2622_p2 = (mul3_i_reg_4445 + trunc_ln619_fu_2614_p1);

assign tmp1_mid1_fu_2980_p2 = (select_ln615_2_fu_2959_p3 + trunc_ln619_2_reg_4675);

assign tmp3_fu_3051_p2 = (select_ln617_2_fu_2998_p3 + trunc_ln621_fu_3027_p1);

assign tmp4_fu_3259_p2 = (reg_1738 + empty_142_reg_4926_pp2_iter3_reg);

assign tmp_data_V_fu_2075_p5 = ki_2_reg_1115[1:0];

assign tmp_last_V_fu_2094_p2 = ((ki_2_reg_1115 == 3'd3) ? 1'b1 : 1'b0);

assign trunc_ln528_fu_1902_p1 = ko_reg_1059[13:0];

assign trunc_ln535_fu_1937_p1 = ki_reg_1070[1:0];

assign trunc_ln538_fu_2014_p1 = select_ln538_1_fu_1998_p3[11:0];

assign trunc_ln541_fu_2033_p1 = select_ln538_fu_2026_p3[11:0];

assign trunc_ln548_fu_1949_p0 = grp_fu_1425_p2;

assign trunc_ln548_fu_1949_p1 = trunc_ln548_fu_1949_p0[11:0];

assign trunc_ln574_fu_2294_p1 = select_ln574_1_fu_2287_p3[13:0];

assign trunc_ln576_1_fu_2368_p1 = cmo_2_fu_2363_p2[13:0];

assign trunc_ln576_fu_2347_p1 = cmo_reg_1163[13:0];

assign trunc_ln578_1_fu_2424_p1 = hmo_2_fu_2402_p2[13:0];

assign trunc_ln578_fu_2379_p1 = hmo_reg_1187[13:0];

assign trunc_ln580_1_fu_2474_p1 = wmo_reg_1211[13:0];

assign trunc_ln580_2_fu_2501_p1 = wmo_2_fu_2496_p2[11:0];

assign trunc_ln580_3_fu_2512_p1 = wmo_2_fu_2496_p2[13:0];

assign trunc_ln580_fu_2470_p1 = wmo_reg_1211[11:0];

assign trunc_ln582_1_fu_2563_p1 = rmo_2_fu_2536_p2[13:0];

assign trunc_ln582_fu_2478_p1 = rmo_reg_1235[13:0];

assign trunc_ln584_fu_2580_p1 = select_ln582_fu_2555_p3[13:0];

assign trunc_ln59_1_fu_3220_p1 = select_ln59_1_fu_3208_p3[7:0];

assign trunc_ln59_fu_3216_p1 = select_ln59_1_fu_3208_p3[10:0];

assign trunc_ln611_1_fu_2706_p1 = select_ln611_1_fu_2695_p3[11:0];

assign trunc_ln611_fu_2702_p1 = select_ln611_1_fu_2695_p3[10:0];

assign trunc_ln613_1_fu_2589_p1 = co_reg_1271[9:0];

assign trunc_ln613_2_fu_2775_p1 = co_4_fu_2770_p2[10:0];

assign trunc_ln613_3_fu_2779_p1 = co_4_fu_2770_p2[9:0];

assign trunc_ln613_fu_2584_p1 = co_reg_1271[10:0];

assign trunc_ln615_1_fu_2824_p1 = ho_2_fu_2802_p2[10:0];

assign trunc_ln615_fu_2604_p1 = ho_reg_1283[10:0];

assign trunc_ln617_1_fu_2851_p1 = wo_2_fu_2846_p2[10:0];

assign trunc_ln617_fu_2609_p1 = wo_reg_1295[10:0];

assign trunc_ln619_1_fu_2618_p1 = ro_reg_1367[11:0];

assign trunc_ln619_2_fu_2926_p1 = ro_2_fu_2921_p2[10:0];

assign trunc_ln619_3_fu_2930_p1 = ro_2_fu_2921_p2[11:0];

assign trunc_ln619_fu_2614_p1 = ro_reg_1367[10:0];

assign trunc_ln621_1_fu_3031_p1 = select_ln619_fu_3019_p3[11:0];

assign trunc_ln621_fu_3027_p1 = select_ln619_fu_3019_p3[10:0];

assign wh_1_fu_2108_p2 = (select_ln538_reg_3950 + 32'd1);

assign wmo_2_fu_2496_p2 = (32'd1 + select_ln578_reg_4344);

assign wo_2_fu_2846_p2 = (32'd1 + select_ln615_reg_4607);

assign zext_ln512_fu_1757_p1 = signal_fu_452;

assign zext_ln515_fu_1762_p1 = signal2_fu_456;

assign zext_ln516_fu_1767_p1 = signal2_fu_456;

assign zext_ln518_fu_1783_p1 = $unsigned(sext_ln518_fu_1779_p1);

assign zext_ln519_fu_1792_p1 = $unsigned(sext_ln519_fu_1788_p1);

assign zext_ln523_fu_1883_p1 = ko_reg_1059;

assign zext_ln528_fu_1906_p1 = trunc_ln528_fu_1902_p1;

assign zext_ln538_fu_2006_p1 = select_ln538_1_fu_1998_p3;

assign zext_ln574_10_fu_2179_p1 = L1_TILENUM_K_read_reg_3546;

assign zext_ln574_11_fu_2183_p1 = mul_ln574_4_reg_4127;

assign zext_ln574_12_fu_2113_p1 = L2_TILENUM_R_read_reg_3600;

assign zext_ln574_13_fu_2117_p1 = L2_TILENUM_S_read_reg_3593;

assign zext_ln574_14_fu_2138_p1 = L2_TILENUM_W_read_reg_3610;

assign zext_ln574_15_fu_2142_p1 = reg_1730;

assign zext_ln574_16_fu_2155_p1 = L2_TILENUM_H_read_reg_3605;

assign zext_ln574_17_fu_2159_p1 = mul_ln574_7_reg_4076;

assign zext_ln574_18_fu_2171_p1 = L2_TILENUM_C_read_reg_3615;

assign zext_ln574_19_fu_2175_p1 = mul_ln574_8_reg_4110;

assign zext_ln574_1_fu_2125_p1 = TILESIZE_W_read_reg_3511;

assign zext_ln574_20_fu_2187_p1 = L2_TILENUM_K_read_reg_3620;

assign zext_ln574_21_fu_2191_p1 = mul_ln574_9_reg_4143;

assign zext_ln574_2_fu_2018_p1 = L1_TILENUM_R_read_reg_3526;

assign zext_ln574_3_fu_2022_p1 = L1_TILENUM_S_read_reg_3519;

assign zext_ln574_4_fu_2129_p1 = L1_TILENUM_W_read_reg_3536;

assign zext_ln574_5_fu_2133_p1 = reg_1726;

assign zext_ln574_6_fu_2147_p1 = L1_TILENUM_H_read_reg_3531;

assign zext_ln574_7_fu_2151_p1 = mul_ln574_2_reg_4059;

assign zext_ln574_8_fu_2163_p1 = L1_TILENUM_C_read_reg_3541;

assign zext_ln574_9_fu_2167_p1 = mul_ln574_3_reg_4093;

assign zext_ln574_fu_2121_p1 = TILESIZE_H_read_reg_3504;

always @ (posedge ap_clk) begin
    zext_ln512_reg_3442[12:0] <= 13'b0000000000100;
    zext_ln515_reg_3452[12:0] <= 13'b0000000000000;
    zext_ln516_reg_3457[2:0] <= 3'b000;
end

endmodule //Conv_sysarr
